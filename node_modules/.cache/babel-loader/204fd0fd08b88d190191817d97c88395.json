{"ast":null,"code":"import{ObjectDataUpdateMessage}from'../../../messages/ObjectDataUpdateMessage';import{LegacyDataType}from'../../data/type/LegacyDataType';import{FurnitureMultiStateLogic}from'./FurnitureMultiStateLogic';export class FurnitureIceStormLogic extends FurnitureMultiStateLogic{constructor(){super();this._nextState=void 0;this._nextStateExtra=void 0;this._nextStateTimestamp=void 0;this._nextState=0;this._nextStateTimestamp=0;}update(totalTimeRunning){if(this._nextStateTimestamp>0&&totalTimeRunning>=this._nextStateTimestamp){this._nextStateTimestamp=0;const data=new LegacyDataType();data.setString(this._nextState.toString());super.processUpdateMessage(new ObjectDataUpdateMessage(this._nextState,data,this._nextStateExtra));}super.update(totalTimeRunning);}processUpdateMessage(message){if(message instanceof ObjectDataUpdateMessage){this.processUpdate(message);return;}super.processUpdateMessage(message);}processUpdate(message){if(!message)return;const state=~~(message.state/1000);const time=~~(message.state%1000);if(!time){this._nextStateTimestamp=0;const data=new LegacyDataType();data.setString(state.toString());super.processUpdateMessage(new ObjectDataUpdateMessage(state,data,message.extra));}else{this._nextState=state;this._nextStateExtra=message.extra;this._nextStateTimestamp=this.time+time;}}}","map":null,"metadata":{},"sourceType":"module"}