{"ast":null,"code":"import{RoomPlaneParser}from'../../../../../room/object/RoomPlaneParser';export class FloorHeightMapMessageParser{constructor(){this._model=void 0;this._width=void 0;this._height=void 0;this._heightMap=void 0;this._wallHeight=void 0;this._scale=void 0;}flush(){this._model=null;this._width=0;this._height=0;this._wallHeight=-1;this._heightMap=[];this._scale=64;this._model=null;return true;}parse(wrapper){if(!wrapper)return false;const scale=wrapper.readBoolean();const wallHeight=wrapper.readInt();const model=wrapper.readString();return this.parseExplicitly(model,wallHeight,scale);}parseModel(modelString,wallHeight){let scale=arguments.length>2&&arguments[2]!==undefined?arguments[2]:true;return this.parseExplicitly(modelString,wallHeight,scale);}parseExplicitly(modelString,wallHeight){let scale=arguments.length>2&&arguments[2]!==undefined?arguments[2]:true;this._scale=scale?32:64;this._wallHeight=wallHeight;this._model=modelString;const model=this._model.split('\\r');const modelRows=model.length;let width=0;const height=0;let iterator=0;while(iterator<modelRows){const row=model[iterator];if(row.length>width){width=row.length;}iterator++;}this._heightMap=[];iterator=0;while(iterator<modelRows){const heightMap=[];let subIterator=0;while(subIterator<width){heightMap.push(RoomPlaneParser.TILE_BLOCKED);subIterator++;}this._heightMap.push(heightMap);iterator++;}this._width=width;this._height=modelRows;iterator=0;while(iterator<modelRows){const heightMap=this._heightMap[iterator];const text=model[iterator];if(text.length>0){let subIterator=0;while(subIterator<text.length){const char=text.charAt(subIterator);let height=RoomPlaneParser.TILE_BLOCKED;if(char!=='x'&&char!=='X')height=parseInt(char,36);heightMap[subIterator]=height;subIterator++;}}iterator++;}return true;}getHeight(x,y){if(x<0||x>=this._width||y<0||y>=this._height)return-110;const row=this._heightMap[y];if(row===undefined)return-110;const height=row[x];if(height===undefined)return-110;return height;}get model(){return this._model;}get width(){return this._width;}get height(){return this._height;}get heightMap(){return this._heightMap;}get wallHeight(){return this._wallHeight;}get scale(){return this._scale;}}","map":null,"metadata":{},"sourceType":"module"}