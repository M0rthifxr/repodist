{"ast":null,"code":"import{PollContentsEvent}from'../../communication/messages/incoming/poll/PollContentsEvent';import{PollErrorEvent}from'../../communication/messages/incoming/poll/PollErrorEvent';import{PollOfferEvent}from'../../communication/messages/incoming/poll/PollOfferEvent';import{RoomSessionPollEvent}from'../events/RoomSessionPollEvent';import{BaseHandler}from'./BaseHandler';export class PollHandler extends BaseHandler{constructor(connection,listener){super(connection,listener);connection.addMessageEvent(new PollContentsEvent(this.onPollContentsEvent.bind(this)));connection.addMessageEvent(new PollOfferEvent(this.onPollOfferEvent.bind(this)));connection.addMessageEvent(new PollErrorEvent(this.onPollErrorEvent.bind(this)));}onPollContentsEvent(event){if(!this.listener)return;const session=this.listener.getSession(this.roomId);if(!session)return;const parser=event.getParser();if(!parser)return;const pollEvent=new RoomSessionPollEvent(RoomSessionPollEvent.CONTENT,session,parser.id);pollEvent.startMessage=parser.startMessage;pollEvent.endMessage=parser.endMessage;pollEvent.numQuestions=parser.numQuestions;pollEvent.questionArray=parser.questionArray;pollEvent.npsPoll=parser.npsPoll;this.listener.events.dispatchEvent(pollEvent);}onPollOfferEvent(event){if(!this.listener)return;const session=this.listener.getSession(this.roomId);if(!session)return;const parser=event.getParser();if(!parser)return;const pollEvent=new RoomSessionPollEvent(RoomSessionPollEvent.OFFER,session,parser.id);pollEvent.summary=parser.headline;pollEvent.summary=parser.summary;this.listener.events.dispatchEvent(pollEvent);}onPollErrorEvent(event){if(!this.listener)return;const session=this.listener.getSession(this.roomId);if(!session)return;const parser=event.getParser();if(!parser)return;const pollEvent=new RoomSessionPollEvent(RoomSessionPollEvent.ERROR,session,-1);pollEvent.headline='???';pollEvent.summary='???';this.listener.events.dispatchEvent(pollEvent);}}","map":null,"metadata":{},"sourceType":"module"}