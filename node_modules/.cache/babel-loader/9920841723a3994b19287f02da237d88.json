{"ast":null,"code":"import{BuyMarketplaceOfferMessageComposer,GetMarketplaceOffersMessageComposer,MarketplaceBuyOfferResultEvent,MarketPlaceOffersEvent}from'@nitrots/nitro-renderer';import{useCallback,useMemo,useState}from'react';import{LocalizeText,NotificationAlertType,NotificationUtilities,SendMessageComposer}from'../../../../../../api';import{Button,ButtonGroup,Column,Text}from'../../../../../../common';import{UseMessageEventHook,usePurse}from'../../../../../../hooks';import{CatalogLayoutMarketplaceItemView,PUBLIC_OFFER}from'./CatalogLayoutMarketplaceItemView';import{SearchFormView}from'./CatalogLayoutMarketplaceSearchFormView';import{MarketplaceOfferData}from'./common/MarketplaceOfferData';import{MarketplaceSearchType}from'./common/MarketplaceSearchType';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const SORT_TYPES_VALUE=[1,2];const SORT_TYPES_ACTIVITY=[3,4,5,6];const SORT_TYPES_ADVANCED=[1,2,3,4,5,6];export const CatalogLayoutMarketplacePublicItemsView=props=>{const[searchType,setSearchType]=useState(MarketplaceSearchType.BY_ACTIVITY);const[totalItemsFound,setTotalItemsFound]=useState(0);const[offers,setOffers]=useState(new Map());const[lastSearch,setLastSearch]=useState({minPrice:-1,maxPrice:-1,query:'',type:3});const{getCurrencyAmount=null}=usePurse();const requestOffers=useCallback(options=>{setLastSearch(options);SendMessageComposer(new GetMarketplaceOffersMessageComposer(options.minPrice,options.maxPrice,options.query,options.type));},[]);const getSortTypes=useMemo(()=>{switch(searchType){case MarketplaceSearchType.BY_ACTIVITY:return SORT_TYPES_ACTIVITY;case MarketplaceSearchType.BY_VALUE:return SORT_TYPES_VALUE;case MarketplaceSearchType.ADVANCED:return SORT_TYPES_ADVANCED;}return[];},[searchType]);const purchaseItem=useCallback(offerData=>{if(offerData.price>getCurrencyAmount(-1)){NotificationUtilities.simpleAlert(LocalizeText('catalog.alert.notenough.credits.description'),NotificationAlertType.DEFAULT,null,null,LocalizeText('catalog.alert.notenough.title'));return;}const offerId=offerData.offerId;NotificationUtilities.confirm(LocalizeText('catalog.marketplace.confirm_header'),()=>{SendMessageComposer(new BuyMarketplaceOfferMessageComposer(offerId));},null,null,null,LocalizeText('catalog.marketplace.confirm_title'));},[getCurrencyAmount]);const onMarketPlaceOffersEvent=useCallback(event=>{const parser=event.getParser();if(!parser)return;const latestOffers=new Map();parser.offers.forEach(entry=>{const offerEntry=new MarketplaceOfferData(entry.offerId,entry.furniId,entry.furniType,entry.extraData,entry.stuffData,entry.price,entry.status,entry.averagePrice,entry.offerCount);offerEntry.timeLeftMinutes=entry.timeLeftMinutes;latestOffers.set(entry.offerId,offerEntry);});setTotalItemsFound(parser.totalItemsFound);setOffers(latestOffers);},[]);const onMarketplaceBuyOfferResultEvent=useCallback(event=>{const parser=event.getParser();if(!parser)return;switch(parser.result){case 1:requestOffers(lastSearch);break;case 2:setOffers(prev=>{const newVal=new Map(prev);newVal.delete(parser.requestedOfferId);return newVal;});NotificationUtilities.simpleAlert(LocalizeText('catalog.marketplace.not_available_header'),NotificationAlertType.DEFAULT,null,null,LocalizeText('catalog.marketplace.not_available_title'));break;case 3:// our shit was updated\n// todo: some dialogue modal \nsetOffers(prev=>{const newVal=new Map(prev);const item=newVal.get(parser.requestedOfferId);if(item){item.offerId=parser.offerId;item.price=parser.newPrice;item.offerCount--;newVal.set(item.offerId,item);}newVal.delete(parser.requestedOfferId);return newVal;});NotificationUtilities.confirm(LocalizeText('catalog.marketplace.confirm_higher_header')+'\\n'+LocalizeText('catalog.marketplace.confirm_price',['price'],[parser.newPrice.toString()]),()=>{SendMessageComposer(new BuyMarketplaceOfferMessageComposer(parser.offerId));},null,null,null,LocalizeText('catalog.marketplace.confirm_higher_title'));break;case 4:NotificationUtilities.simpleAlert(LocalizeText('catalog.alert.notenough.credits.description'),NotificationAlertType.DEFAULT,null,null,LocalizeText('catalog.alert.notenough.title'));break;}},[lastSearch,requestOffers]);UseMessageEventHook(MarketPlaceOffersEvent,onMarketPlaceOffersEvent);UseMessageEventHook(MarketplaceBuyOfferResultEvent,onMarketplaceBuyOfferResultEvent);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(ButtonGroup,{children:[/*#__PURE__*/_jsx(Button,{active:searchType===MarketplaceSearchType.BY_ACTIVITY,onClick:()=>setSearchType(MarketplaceSearchType.BY_ACTIVITY),children:LocalizeText('catalog.marketplace.search_by_activity')}),/*#__PURE__*/_jsx(Button,{active:searchType===MarketplaceSearchType.BY_VALUE,onClick:()=>setSearchType(MarketplaceSearchType.BY_VALUE),children:LocalizeText('catalog.marketplace.search_by_value')}),/*#__PURE__*/_jsx(Button,{active:searchType===MarketplaceSearchType.ADVANCED,onClick:()=>setSearchType(MarketplaceSearchType.ADVANCED),children:LocalizeText('catalog.marketplace.search_advanced')})]}),/*#__PURE__*/_jsx(SearchFormView,{sortTypes:getSortTypes,searchType:searchType,onSearch:requestOffers}),/*#__PURE__*/_jsxs(Column,{gap:1,overflow:\"hidden\",children:[/*#__PURE__*/_jsx(Text,{truncate:true,shrink:true,fontWeight:\"bold\",children:LocalizeText('catalog.marketplace.items_found',['count'],[offers.size.toString()])}),/*#__PURE__*/_jsx(Column,{className:\"nitro-catalog-layout-marketplace-grid\",overflow:\"auto\",children:Array.from(offers.values()).map((entry,index)=>/*#__PURE__*/_jsx(CatalogLayoutMarketplaceItemView,{offerData:entry,type:PUBLIC_OFFER,onClick:purchaseItem},index))})]})]});};","map":null,"metadata":{},"sourceType":"module"}