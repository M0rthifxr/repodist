{"ast":null,"code":"import{Texture}from'@pixi/core';import{ColorMatrixFilter}from'@pixi/filter-color-matrix';import{Rectangle}from'@pixi/math';import{Sprite}from'@pixi/sprite';import{NitroContainer,NitroSprite}from'../../core';import{AdvancedMap}from'../../core/utils/AdvancedMap';import{PaletteMapFilter}from'../../core/utils/PaletteMapFilter';import{TextureUtils}from'../../room/utils/TextureUtils';import{Nitro}from'../Nitro';import{ActiveActionData}from'./actions/ActiveActionData';import{AvatarFigureContainer}from'./AvatarFigureContainer';import{AvatarImageCache}from'./cache/AvatarImageCache';import{AvatarAction}from'./enum/AvatarAction';import{AvatarDirectionAngle}from'./enum/AvatarDirectionAngle';import{AvatarScaleType}from'./enum/AvatarScaleType';import{AvatarSetType}from'./enum/AvatarSetType';export class AvatarImage{constructor(k,_arg_2,_arg_3,_arg_4,_arg_5){let _arg_6=arguments.length>5&&arguments[5]!==undefined?arguments[5]:null;this._structure=void 0;this._scale=void 0;this._mainDirection=void 0;this._headDirection=void 0;this._mainAction=void 0;this._disposed=void 0;this._canvasOffsets=void 0;this._assets=void 0;this._cache=void 0;this._figure=void 0;this._avatarSpriteData=void 0;this._actions=void 0;this._image=void 0;this._reusableTexture=void 0;this._defaultAction=void 0;this._frameCounter=0;this._directionOffset=0;this._changes=void 0;this._sprites=void 0;this._isAnimating=false;this._animationHasResetOnToggle=false;this._actionsSorted=false;this._sortedActions=void 0;this._lastActionsString=void 0;this._currentActionsString=void 0;this._fullImageCache=void 0;this._fullImageCacheSize=5;this._isCachedImage=false;this._useFullImageCache=false;this._effectIdInUse=-1;this._animationFrameCount=void 0;this._cachedBodyParts=void 0;this._cachedBodyPartsDirection=-1;this._cachedBodyPartsGeometryType=null;this._cachedBodyPartsAvatarSet=null;this._effectManager=void 0;this._effectListener=void 0;this._canvasOffsets=[];this._actions=[];this._cachedBodyParts=[];this._changes=true;this._disposed=false;this._effectManager=_arg_5;this._structure=k;this._assets=_arg_2;this._scale=_arg_4;this._effectListener=_arg_6;if(this._scale==null){this._scale=AvatarScaleType.LARGE;}if(_arg_3==null){_arg_3=new AvatarFigureContainer('hr-893-45.hd-180-2.ch-210-66.lg-270-82.sh-300-91.wa-2007-.ri-1-');}this._figure=_arg_3;this._cache=new AvatarImageCache(this._structure,this,this._assets,this._scale);this.setDirection(AvatarImage.DEFAULT_AVATAR_SET,AvatarImage.DEFAULT_DIRECTION);this._actions=[];this._defaultAction=new ActiveActionData(AvatarAction.POSTURE_STAND);this._defaultAction.definition=this._structure.getActionDefinition(AvatarImage.DEFAULT_ACTION);this.resetActions();this._fullImageCache=new AdvancedMap();this._animationFrameCount=0;}getServerRenderData(){this.getAvatarPartsForCamera(AvatarSetType.FULL);return this._cache.getServerRenderData();}dispose(){if(this._disposed)return;this._structure=null;this._assets=null;this._mainAction=null;this._figure=null;this._avatarSpriteData=null;this._actions=null;if(this._image){this._image.destroy();this._image=null;}if(this._cache){this._cache.dispose();this._cache=null;}if(this._fullImageCache){for(const k of this._fullImageCache.getValues())k&&k.destroy();this._fullImageCache=null;}this._image=null;this._canvasOffsets=null;this._disposed=true;}get disposed(){return this._disposed;}getFigure(){return this._figure;}getScale(){return this._scale;}getPartColor(k){return this._structure.getPartColor(this._figure,k);}setDirection(k,_arg_2){_arg_2=_arg_2+this._directionOffset;if(_arg_2<AvatarDirectionAngle.MIN_DIRECTION){_arg_2=AvatarDirectionAngle.MAX_DIRECTION+(_arg_2+1);}if(_arg_2>AvatarDirectionAngle.MAX_DIRECTION){_arg_2=_arg_2-(AvatarDirectionAngle.MAX_DIRECTION+1);}if(this._structure.isMainAvatarSet(k)){this._mainDirection=_arg_2;}if(k===AvatarSetType.HEAD||k===AvatarSetType.FULL){if(k===AvatarSetType.HEAD&&this.isHeadTurnPreventedByAction()){_arg_2=this._mainDirection;}this._headDirection=_arg_2;}this._cache.setDirection(k,_arg_2);this._changes=true;}setDirectionAngle(k,_arg_2){this.setDirection(k,Math.floor(_arg_2/45));}getSprites(){return this._sprites;}getCanvasOffsets(){return this._canvasOffsets;}getLayerData(k){return this._structure.getBodyPartData(k.animation.id,this._frameCounter,k.id);}updateAnimationByFrames(){let k=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;this._frameCounter+=k;this._changes=true;}resetAnimationFrameCounter(){this._frameCounter=0;this._changes=true;}getFullImageCacheKey(){if(!this._useFullImageCache)return null;if(this._sortedActions.length==1&&this._mainDirection==this._headDirection){return this._mainDirection+this._currentActionsString+this._frameCounter%4;}if(this._sortedActions.length==2){for(const k of this._sortedActions){if(k.actionType=='fx'&&(k.actionParameter=='33'||k.actionParameter=='34'||k.actionParameter=='35'||k.actionParameter=='36')){return this._mainDirection+this._currentActionsString+0;}if(k.actionType=='fx'&&(k.actionParameter=='38'||k.actionParameter=='39')){return this._mainDirection+'_'+this._headDirection+this._currentActionsString+this._frameCounter%11;}if(k.actionType==='dance'&&(k.actionParameter==='1'||k.actionParameter==='2'||k.actionParameter==='3'||k.actionParameter==='4')){let frame=this._frameCounter%8;if(k.actionParameter==='3')frame=this._frameCounter%10;if(k.actionParameter==='4')frame=this._frameCounter%16;return this._mainDirection+k.actionType+k.actionParameter+frame;}}}return null;}getBodyParts(k,_arg_2,_arg_3){if(!(_arg_3==this._cachedBodyPartsDirection)||!(_arg_2==this._cachedBodyPartsGeometryType)||!(k==this._cachedBodyPartsAvatarSet)){this._cachedBodyPartsDirection=_arg_3;this._cachedBodyPartsGeometryType=_arg_2;this._cachedBodyPartsAvatarSet=k;this._cachedBodyParts=this._structure.getBodyParts(k,_arg_2,_arg_3);}return this._cachedBodyParts;}getAvatarPartsForCamera(k){let _local_4;if(this._mainAction==null){return;}const _local_2=this._structure.getCanvas(this._scale,this._mainAction.definition.geometryType);if(_local_2==null){return;}const _local_3=this.getBodyParts(k,this._mainAction.definition.geometryType,this._mainDirection);let _local_6=_local_3.length-1;while(_local_6>=0){_local_4=_local_3[_local_6];const _local_5=this._cache.getImageContainer(_local_4,this._frameCounter,true);_local_6--;}}getImage(setType,hightlight){let scale=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1;let cache=arguments.length>3&&arguments[3]!==undefined?arguments[3]:true;if(!this._changes)return this._image;if(!this._mainAction)return null;if(!this._actionsSorted)this.endActionAppends();const avatarCanvas=this._structure.getCanvas(this._scale,this._mainAction.definition.geometryType);if(!avatarCanvas)return null;if(this._image&&(this._image.width!==avatarCanvas.width||this._image.height!==avatarCanvas.height)){if(this._reusableTexture){this._reusableTexture.destroy(true);this._reusableTexture=null;}this._image=null;this._isCachedImage=false;}const _local_6=this.getBodyParts(setType,this._mainAction.definition.geometryType,this._mainDirection);this._image=null;const container=new NitroContainer();let isCachable=true;let partCount=_local_6.length-1;while(partCount>=0){const set=_local_6[partCount];const part=this._cache.getImageContainer(set,this._frameCounter);if(part){const partCacheContainer=part.image;if(!partCacheContainer){container.destroy({children:true});return null;}isCachable=isCachable&&part.isCacheable;const point=part.regPoint.clone();if(point){point.x+=avatarCanvas.offset.x;point.y+=avatarCanvas.offset.y;point.x+=avatarCanvas.regPoint.x;point.y+=avatarCanvas.regPoint.y;const partContainer=new NitroContainer();partContainer.addChild(partCacheContainer);if(partContainer){partContainer.position.set(point.x,point.y);container.addChild(partContainer);}}}partCount--;}if(this._avatarSpriteData){if(!container.filters)container.filters=[];if(this._avatarSpriteData.colorTransform)container.filters.push(this._avatarSpriteData.colorTransform);if(this._avatarSpriteData.paletteIsGrayscale){this.convertToGrayscale(container);container.filters.push(new PaletteMapFilter(this._avatarSpriteData.reds,PaletteMapFilter.CHANNEL_RED));}}if(!cache){return TextureUtils.generateTexture(container,new Rectangle(0,0,avatarCanvas.width,avatarCanvas.height));}if(this._reusableTexture){Nitro.instance.renderer.render(container,{renderTexture:this._reusableTexture,clear:true});}else{this._reusableTexture=TextureUtils.generateTexture(container,new Rectangle(0,0,avatarCanvas.width,avatarCanvas.height));}if(!this._reusableTexture)return null;/*\r\n        if(this._avatarSpriteData)\r\n        {\r\n            if(this._avatarSpriteData.paletteIsGrayscale)\r\n            {\r\n                this._reusableTexture = this.applyPalette(this._reusableTexture, this._avatarSpriteData.reds, [], []);\r\n            }\r\n        }\r\n        */this._image=this._reusableTexture;this._changes=false;return this._image;}applyPalette(texture){let reds=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];let greens=arguments.length>2&&arguments[2]!==undefined?arguments[2]:[];let blues=arguments.length>3&&arguments[3]!==undefined?arguments[3]:[];const textureCanvas=TextureUtils.generateCanvas(texture);const textureCtx=textureCanvas.getContext('2d');const textureImageData=textureCtx.getImageData(0,0,textureCanvas.width,textureCanvas.height);const data=textureImageData.data;for(let i=0;i<data.length;i+=4){if(reds.length==256){let paletteColor=reds[data[i]];if(paletteColor===undefined)paletteColor=0;data[i]=paletteColor>>16&0xFF;data[i+1]=paletteColor>>8&0xFF;data[i+2]=paletteColor&0xFF;}if(greens.length==256){let paletteColor=greens[data[i+1]];if(paletteColor===undefined)paletteColor=0;data[i]=paletteColor>>16&0xFF;data[i+1]=paletteColor>>8&0xFF;data[i+2]=paletteColor&0xFF;}if(blues.length==256){let paletteColor=greens[data[i+2]];if(paletteColor===undefined)paletteColor=0;data[i]=paletteColor>>16&0xFF;data[i+1]=paletteColor>>8&0xFF;data[i+2]=paletteColor&0xFF;}}textureCtx.putImageData(textureImageData,0,0);const newTexture=new Sprite(Texture.from(textureCanvas));Nitro.instance.renderer.render(newTexture,{renderTexture:texture,clear:true});return texture;}getImageAsSprite(setType){let scale=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;if(!this._mainAction)return null;if(!this._actionsSorted)this.endActionAppends();const avatarCanvas=this._structure.getCanvas(this._scale,this._mainAction.definition.geometryType);if(!avatarCanvas)return null;const setTypes=this.getBodyParts(setType,this._mainAction.definition.geometryType,this._mainDirection);const container=new NitroSprite();const sprite=new NitroSprite(Texture.EMPTY);sprite.width=avatarCanvas.width;sprite.height=avatarCanvas.height;container.addChild(sprite);let partCount=setTypes.length-1;while(partCount>=0){const set=setTypes[partCount];const part=this._cache.getImageContainer(set,this._frameCounter);if(part){const partCacheContainer=part.image;if(!partCacheContainer){container.destroy({children:true});return null;}const point=part.regPoint.clone();if(point){point.x+=avatarCanvas.offset.x;point.y+=avatarCanvas.offset.y;point.x+=avatarCanvas.regPoint.x;point.y+=avatarCanvas.regPoint.y;const partContainer=new NitroContainer();partContainer.addChild(partCacheContainer);partContainer.position.set(point.x,point.y);container.addChild(partContainer);}}partCount--;}return container;}getCroppedImage(setType){let scale=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;if(!this._mainAction)return null;if(!this._actionsSorted)this.endActionAppends();const avatarCanvas=this._structure.getCanvas(this._scale,this._mainAction.definition.geometryType);if(!avatarCanvas)return null;const setTypes=this.getBodyParts(setType,this._mainAction.definition.geometryType,this._mainDirection);const container=new NitroContainer();let partCount=setTypes.length-1;while(partCount>=0){const set=setTypes[partCount];const part=this._cache.getImageContainer(set,this._frameCounter);if(part){const partCacheContainer=part.image;if(!partCacheContainer){container.destroy({children:true});return null;}const point=part.regPoint.clone();if(point){point.x+=avatarCanvas.offset.x;point.y+=avatarCanvas.offset.y;point.x+=avatarCanvas.regPoint.x;point.y+=avatarCanvas.regPoint.y;const partContainer=new NitroContainer();partContainer.addChild(partCacheContainer);if(partContainer){partContainer.position.set(point.x,point.y);container.addChild(partContainer);}}}partCount--;}const texture=TextureUtils.generateTexture(container,new Rectangle(0,0,avatarCanvas.width,avatarCanvas.height));const image=TextureUtils.generateImage(texture);if(!image)return null;return image;}getFullImage(k){const existing=this._fullImageCache.getValue(k);if(existing){if(!existing.valid){this._fullImageCache.remove(k);existing.destroy(true);}return existing;}return null;}cacheFullImage(k,_arg_2){const existing=this._fullImageCache.getValue(k);if(existing){this._fullImageCache.remove(k);existing.destroy(true);}if(this._fullImageCache.length===this._fullImageCacheSize){const oldestKey=this._fullImageCache.getKey(0);if(oldestKey){const removed=this._fullImageCache.remove(oldestKey);removed.destroy(true);}}this._fullImageCache.add(k,_arg_2);}getAsset(k){return this._assets.getAsset(k);}getDirection(){return this._mainDirection;}initActionAppends(){this._actions=[];this._actionsSorted=false;this._currentActionsString='';this._useFullImageCache=false;}endActionAppends(){let k;if(!this.sortActions())return;for(const k of this._sortedActions){if(k.actionType===AvatarAction.EFFECT){if(!this._effectManager.isAvatarEffectReady(parseInt(k.actionParameter)))this._effectManager.downloadAvatarEffect(parseInt(k.actionParameter),this);}}this.resetActions();this.setActionsToParts();}appendAction(k){var _args$;let _local_3='';this._actionsSorted=false;for(var _len=arguments.length,_args=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){_args[_key-1]=arguments[_key];}if(_args&&_args.length>0)_local_3=(_args$=_args[0])===null||_args$===void 0?void 0:_args$.toString();switch(k){case AvatarAction.POSTURE:switch(_local_3){case AvatarAction.POSTURE_LAY:if(this._mainDirection==0){this.setDirection(AvatarSetType.FULL,4);}else{this.setDirection(AvatarSetType.FULL,2);}// eslint-disable-next-line no-fallthrough\ncase AvatarAction.POSTURE_WALK:this._useFullImageCache=true;// eslint-disable-next-line no-fallthrough\ncase AvatarAction.POSTURE_STAND:this._useFullImageCache=true;// eslint-disable-next-line no-fallthrough\ncase AvatarAction.POSTURE_SWIM:case AvatarAction.POSTURE_FLOAT:case AvatarAction.POSTURE_SIT:case AvatarAction.SNOWWAR_RUN:case AvatarAction.SNOWWAR_DIE_FRONT:case AvatarAction.SNOWWAR_DIE_BACK:case AvatarAction.SNOWWAR_PICK:case AvatarAction.SNOWWAR_THROW:this.addActionData(_local_3);break;}break;case AvatarAction.GESTURE:switch(_local_3){case AvatarAction.GESTURE_AGGRAVATED:case AvatarAction.GESTURE_SAD:case AvatarAction.GESTURE_SMILE:case AvatarAction.GESTURE_SURPRISED:this.addActionData(_local_3);break;}break;case AvatarAction.EFFECT:if(_local_3==='33'||_local_3==='34'||_local_3==='35'||_local_3==='36'||_local_3==='38'||_local_3==='39'){this._useFullImageCache=true;}// eslint-disable-next-line no-fallthrough\ncase AvatarAction.DANCE:case AvatarAction.TALK:case AvatarAction.EXPRESSION_WAVE:case AvatarAction.SLEEP:case AvatarAction.SIGN:case AvatarAction.EXPRESSION_RESPECT:case AvatarAction.EXPRESSION_BLOW_A_KISS:case AvatarAction.EXPRESSION_LAUGH:case AvatarAction.EXPRESSION_CRY:case AvatarAction.EXPRESSION_IDLE:case AvatarAction.EXPRESSION_SNOWBOARD_OLLIE:case AvatarAction.EXPRESSION_SNOWBORD_360:case AvatarAction.EXPRESSION_RIDE_JUMP:this.addActionData(k,_local_3);break;case AvatarAction.CARRY_OBJECT:case AvatarAction.USE_OBJECT:{const _local_4=this._structure.getActionDefinitionWithState(k);if(_local_4)_local_3=_local_4.getParameterValue(_local_3);this.addActionData(k,_local_3);break;}}return true;}addActionData(k){let _arg_2=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'';let _local_3;if(!this._actions)this._actions=[];let _local_4=0;while(_local_4<this._actions.length){_local_3=this._actions[_local_4];if(_local_3.actionType==k&&_local_3.actionParameter==_arg_2){return;}_local_4++;}this._actions.push(new ActiveActionData(k,_arg_2,this._frameCounter));}isAnimating(){return this._isAnimating||this._animationFrameCount>1;}resetActions(){this._animationHasResetOnToggle=false;this._isAnimating=false;this._sprites=[];this._avatarSpriteData=null;this._directionOffset=0;this._structure.removeDynamicItems(this);this._mainAction=this._defaultAction;this._mainAction.definition=this._defaultAction.definition;this.resetBodyPartCache(this._defaultAction);return true;}isHeadTurnPreventedByAction(){let _local_2;let _local_3;let k;if(this._sortedActions==null){return false;}for(const _local_3 of this._sortedActions){_local_2=this._structure.getActionDefinitionWithState(_local_3.actionType);if(!(_local_2==null)&&_local_2.getPreventHeadTurn(_local_3.actionParameter)){k=true;}}return k;}sortActions(){let _local_2;let _local_3;let _local_4;let _local_5;let k;this._currentActionsString='';this._sortedActions=this._structure.sortActions(this._actions);this._animationFrameCount=this._structure.maxFrames(this._sortedActions);if(!this._sortedActions){this._canvasOffsets=[0,0,0];if(this._lastActionsString!==''){k=true;this._lastActionsString='';}}else{this._canvasOffsets=this._structure.getCanvasOffsets(this._sortedActions,this._scale,this._mainDirection);for(const _local_4 of this._sortedActions){this._currentActionsString=this._currentActionsString+(_local_4.actionType+_local_4.actionParameter);if(_local_4.actionType===AvatarAction.EFFECT){const _local_5=parseInt(_local_4.actionParameter);if(this._effectIdInUse!==_local_5)_local_2=true;this._effectIdInUse=_local_5;_local_3=true;}}if(!_local_3){if(this._effectIdInUse>-1)_local_2=true;this._effectIdInUse=-1;}if(_local_2)this._cache.disposeInactiveActions(0);if(this._lastActionsString!=this._currentActionsString){k=true;this._lastActionsString=this._currentActionsString;}}this._actionsSorted=true;return k;}setActionsToParts(){if(!this._sortedActions==null)return;const _local_3=Nitro.instance.time;const _local_4=[];for(const k of this._sortedActions)_local_4.push(k.actionType);for(const k of this._sortedActions){if(k&&k.definition&&k.definition.isAnimation){const _local_2=this._structure.getAnimation(k.definition.state+'.'+k.actionParameter);if(_local_2&&_local_2.hasOverriddenActions()){const _local_5=_local_2.overriddenActionNames();if(_local_5){for(const _local_6 of _local_5){if(_local_4.indexOf(_local_6)>=0)k.overridingAction=_local_2.overridingAction(_local_6);}}}if(_local_2&&_local_2.resetOnToggle){this._animationHasResetOnToggle=true;}}}for(const k of this._sortedActions){if(!(!k||!k.definition)){if(k.definition.isAnimation&&k.actionParameter==='')k.actionParameter='1';this.setActionToParts(k,_local_3);if(k.definition.isAnimation){this._isAnimating=k.definition.isAnimated(k.actionParameter);const _local_2=this._structure.getAnimation(k.definition.state+'.'+k.actionParameter);if(_local_2){this._sprites=this._sprites.concat(_local_2.spriteData);if(_local_2.hasDirectionData())this._directionOffset=_local_2.directionData.offset;if(_local_2.hasAvatarData())this._avatarSpriteData=_local_2.avatarData;}}}}}setActionToParts(k,_arg_2){if(k==null||k.definition==null){return;}if(k.definition.assetPartDefinition==''){return;}if(k.definition.isMain){this._mainAction=k;this._cache.setGeometryType(k.definition.geometryType);}this._cache.setAction(k,_arg_2);this._changes=true;}resetBodyPartCache(k){if(!k)return;if(k.definition.assetPartDefinition==='')return;if(k.definition.isMain){this._mainAction=k;this._cache.setGeometryType(k.definition.geometryType);}this._cache.resetBodyPartCache(k);this._changes=true;}get avatarSpriteData(){return this._avatarSpriteData;}convertToGrayscale(container){let channel=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'CHANNELS_EQUAL';let _local_3=0.33;let _local_4=0.33;let _local_5=0.33;const _local_6=1;switch(channel){case AvatarImage.CHANNELS_UNIQUE:_local_3=0.3;_local_4=0.59;_local_5=0.11;break;case AvatarImage.CHANNELS_RED:_local_3=1;_local_4=0;_local_5=0;break;case AvatarImage.CHANNELS_GREEN:_local_3=0;_local_4=1;_local_5=0;break;case AvatarImage.CHANNELS_BLUE:_local_3=0;_local_4=0;_local_5=1;break;case AvatarImage.CHANNELS_DESATURATED:_local_3=0.3086;_local_4=0.6094;_local_5=0.082;break;}const colorFilter=new ColorMatrixFilter();colorFilter.matrix=[_local_3,_local_4,_local_5,0,0,_local_3,_local_4,_local_5,0,0,_local_3,_local_4,_local_5,0,0,0,0,0,1,0];container.filters.push(colorFilter);return container;}errorThis(k){}logThis(k){}isPlaceholder(){return false;}forceActionUpdate(){this._lastActionsString='';}get animationHasResetOnToggle(){return this._animationHasResetOnToggle;}get mainAction(){return this._mainAction.actionType;}resetEffect(effect){if(effect===this._effectIdInUse){this.resetActions();this.setActionsToParts();this._animationHasResetOnToggle=true;this._changes=true;if(this._effectListener)this._effectListener.resetEffect(effect);}}}AvatarImage.CHANNELS_EQUAL='CHANNELS_EQUAL';AvatarImage.CHANNELS_UNIQUE='CHANNELS_UNIQUE';AvatarImage.CHANNELS_RED='CHANNELS_RED';AvatarImage.CHANNELS_GREEN='CHANNELS_GREEN';AvatarImage.CHANNELS_BLUE='CHANNELS_BLUE';AvatarImage.CHANNELS_DESATURATED='CHANNELS_DESATURATED';AvatarImage.DEFAULT_ACTION='Default';AvatarImage.DEFAULT_DIRECTION=2;AvatarImage.DEFAULT_AVATAR_SET=AvatarSetType.FULL;","map":null,"metadata":{},"sourceType":"module"}