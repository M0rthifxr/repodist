{"ast":null,"code":"import{Graphics}from'@pixi/graphics';import{Rectangle}from'@pixi/math';import{TextureUtils}from'../../../../../../../room/utils/TextureUtils';import{RoomVisualization}from'../../RoomVisualization';export class PlaneVisualizationLayer{constructor(material,color,align){let offset=arguments.length>3&&arguments[3]!==undefined?arguments[3]:0;this._material=void 0;this._color=void 0;this._offset=void 0;this._align=void 0;this._bitmapData=void 0;this._isDisposed=void 0;this._material=material;this._offset=offset;this._align=align;this._color=color;this._bitmapData=null;this._isDisposed=false;}get offset(){return this._offset;}get align(){return this._align;}get disposed(){return this._isDisposed;}dispose(){this._isDisposed=true;this._material=null;this.clearCache();}clearCache(){if(this._bitmapData){this._bitmapData.destroy();this._bitmapData=null;}}render(canvas,width,height,normal,useTexture,offsetX,offsetY){if(!canvas||canvas.width!==width||canvas.height!==height)canvas=null;let bitmapData=null;if(this._material){bitmapData=this._material.render(null,width,height,normal,useTexture,offsetX,offsetY+this.offset,this.align===PlaneVisualizationLayer.ALIGN_TOP);if(bitmapData&&bitmapData!==canvas){if(this._bitmapData)this._bitmapData.destroy();this._bitmapData=bitmapData.clone();bitmapData=this._bitmapData;}}else{if(!canvas){if(this._bitmapData&&this._bitmapData.width===width&&this._bitmapData.height===height)return this._bitmapData;if(this._bitmapData)this._bitmapData.destroy();const graphic=new Graphics().beginFill(0xFFFFFF).drawRect(0,0,width,height).endFill();this._bitmapData=graphic;bitmapData=this._bitmapData;}else{canvas.beginFill(0xFFFFFF).drawRect(0,0,width,height).endFill();bitmapData=canvas;}}if(bitmapData){bitmapData.tint=this._color;if(canvas&&bitmapData!==canvas){let texture=RoomVisualization.getTextureCache(bitmapData);if(!texture){texture=TextureUtils.generateTexture(bitmapData,new Rectangle(0,0,width,height));RoomVisualization.addTextureCache(bitmapData,texture);}canvas.beginTextureFill({texture}).drawRect(0,0,width,height).endFill();bitmapData=canvas;}}return bitmapData;}getMaterial(){return this._material;}getColor(){return this._color;}}PlaneVisualizationLayer.DEFAULT_OFFSET=0;PlaneVisualizationLayer.ALIGN_TOP=1;PlaneVisualizationLayer.ALIGN_BOTTOM=2;PlaneVisualizationLayer.ALIGN_DEFAULT=PlaneVisualizationLayer.ALIGN_TOP;","map":null,"metadata":{},"sourceType":"module"}