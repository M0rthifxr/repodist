{"ast":null,"code":"import{NitroLogger}from'../../core/common/logger/NitroLogger';import{LegacyExternalInterface}from'../externalInterface/LegacyExternalInterface';export class HabboWebTools{static logEventLog(data){try{if(LegacyExternalInterface.available){LegacyExternalInterface.call('logEventLog',data);}}catch(e){NitroLogger.log('External interface not working, failed to log event log.');}}static openPage(pageUrl){try{if(LegacyExternalInterface.available){LegacyExternalInterface.call('openPage',pageUrl);}else{NitroLogger.log('External interface not available, openPage failed.');}}catch(e){NitroLogger.log('Failed to open web page '+pageUrl);}}static openWebPage(pageUrl){window.open(pageUrl);}static sendHeartBeat(){try{if(LegacyExternalInterface.available){LegacyExternalInterface.call('heartBeat');}}catch(e){NitroLogger.log('Failed to send heartbeat');}}static openWebPageAndMinimizeClient(pageUrl){try{if(LegacyExternalInterface.available){HabboWebTools.openPage(pageUrl);}}catch(e){NitroLogger.log('Failed to open web page '+pageUrl);}}static closeWebPageAndRestoreClient(){try{if(LegacyExternalInterface.available){LegacyExternalInterface.call('closeWebPageAndRestoreClient');}}catch(e){NitroLogger.log('Failed to close web page and restore client!');}}static openHabblet(name){let param=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;try{if(LegacyExternalInterface.available){LegacyExternalInterface.call('openHabblet',name,param);}}catch(e){NitroLogger.log('Failed to open Habblet '+name);}}static closeHabblet(name){let param=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;try{if(LegacyExternalInterface.available){LegacyExternalInterface.call('closeHabblet',name,param);}}catch(e){NitroLogger.log('Failed to close Habblet '+name);}}static send(reasonCode,reasonString){try{if(LegacyExternalInterface.available){LegacyExternalInterface.call('disconnect',reasonCode,reasonString);}}catch(e){NitroLogger.log('Failed to close send ');}}static showGame(gameUrl){try{if(LegacyExternalInterface.available){LegacyExternalInterface.callGame('showGame',gameUrl);}}catch(e){NitroLogger.log('Failed to open game: '+e);}}static hideGame(){try{if(LegacyExternalInterface.available){LegacyExternalInterface.callGame('hideGame');}}catch(e){NitroLogger.log('Failed to hide game');}}static open(url){try{if(LegacyExternalInterface.available){LegacyExternalInterface.call('openExternalLink',escape(url));}else{NitroLogger.log('External interface not available. Could not request to open: '+url);}}catch(e){NitroLogger.log('External interface not working. Could not request to open: '+url);}}static roomVisited(roomId){try{if(LegacyExternalInterface.available){LegacyExternalInterface.call('roomVisited',roomId);}else{NitroLogger.log('External interface not available. Could not store last room visit.');}}catch(e){NitroLogger.log('External interface not working. Could not store last room visit.');}}static openMinimail(target){try{if(LegacyExternalInterface.available){LegacyExternalInterface.call('openMinimail',target);}else{NitroLogger.log('External interface not available. Could not open minimail.');}}catch(e){NitroLogger.log('External interface not working. Could not open minimail.');}}static openNews(){try{if(LegacyExternalInterface.available){LegacyExternalInterface.call('openNews');}else{NitroLogger.log('External interface not available. Could not open news.');}}catch(e){NitroLogger.log('External interface not working. Could not open news.');}}static closeNews(){try{if(LegacyExternalInterface.available){LegacyExternalInterface.call('closeNews');}else{NitroLogger.log('External interface not available. Could not close news.');}}catch(e){NitroLogger.log('External interface not working. Could not close news.');}}static openAvatars(){try{if(LegacyExternalInterface.available){LegacyExternalInterface.call('openAvatars');}else{NitroLogger.log('External interface not available. Could not open avatars.');}}catch(e){NitroLogger.log('External interface not working. Could not open avatars.');}}static openRoomEnterAd(){try{if(LegacyExternalInterface.available){LegacyExternalInterface.call('openRoomEnterAd');}else{NitroLogger.log('External interface not available. Could not open roomenterad.');}}catch(e){NitroLogger.log('External interface not working. Could not open roomenterad.');}}static updateFigure(figure){try{if(LegacyExternalInterface.available){LegacyExternalInterface.call('updateFigure',figure);}else{NitroLogger.log('External interface not available. Could not update figure.');}}catch(e){NitroLogger.log('External interface not working. Could not update figure.');}}}HabboWebTools.ADVERTISEMENT='advertisement';HabboWebTools.OPENLINK='openlink';HabboWebTools.OPENROOM='openroom';","map":null,"metadata":{},"sourceType":"module"}