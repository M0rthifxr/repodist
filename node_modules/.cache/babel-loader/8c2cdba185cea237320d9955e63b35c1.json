{"ast":null,"code":"import{Nitro}from'../../../../Nitro';import{RoomObjectVariable}from'../../RoomObjectVariable';import{RoomObjectVisualizationType}from'../../RoomObjectVisualizationType';import{AnimationData}from'../data/AnimationData';import{AnimationStateData}from'../data/AnimationStateData';import{DirectionData}from'../data/DirectionData';import{LayerData}from'../data/LayerData';import{FurnitureAnimatedVisualization}from'../furniture/FurnitureAnimatedVisualization';import{FurnitureVisualizationData}from'../furniture/FurnitureVisualizationData';import{ExperienceData}from'./ExperienceData';import{PetVisualizationData}from'./PetVisualizationData';export class PetVisualization extends FurnitureAnimatedVisualization{constructor(){super();this._data=void 0;this._posture=void 0;this._gesture=void 0;this._isSleeping=void 0;this._headDirection=void 0;this._headOnly=void 0;this._nonHeadSprites=void 0;this._headSprites=void 0;this._saddleSprites=void 0;this._animationOver=void 0;this._paletteIndex=void 0;this._paletteName=void 0;this._customLayerIds=void 0;this._customPartIds=void 0;this._customPaletteIds=void 0;this._isRiding=void 0;this._color=void 0;this._experience=void 0;this._experienceTimestamp=void 0;this._experienceData=void 0;this._previousAnimationDirection=void 0;this._animationStates=void 0;this._data=null;this._posture='';this._gesture='';this._isSleeping=false;this._headDirection=-1;this._headOnly=false;this._nonHeadSprites=[];this._headSprites=[];this._saddleSprites=[];this._animationOver=false;this._paletteIndex=-1;this._paletteName='';this._customLayerIds=[];this._customPartIds=[];this._customPaletteIds=[];this._isRiding=false;this._color=0xFFFFFF;this._experience=0;this._experienceTimestamp=0;this._experienceData=null;this._previousAnimationDirection=-1;this._animationStates=[];while(this._animationStates.length<PetVisualization.ANIMATION_INDEX_COUNT)this._animationStates.push(new AnimationStateData());}initialize(data){if(!(data instanceof PetVisualizationData))return false;const texture=this.getPetAdditionAsset(PetVisualization.PET_EXPERIENCE_BUBBLE);if(texture){this._experienceData=new ExperienceData(texture);}return super.initialize(data);}dispose(){super.dispose();if(this._animationStates){while(this._animationStates.length){const animationState=this._animationStates[0];if(animationState)animationState.dispose();this._animationStates.pop();}this._animationStates=null;}}getAnimationId(animationData){return animationData.animationId;}update(geometry,time,update,skipUpdate){super.update(geometry,time,update,skipUpdate);this.updateExperienceBubble(time);}updateExperienceBubble(time){if(!this._experienceData)return;this._experienceData.alpha=0;if(this._experienceTimestamp){const difference=time-this._experienceTimestamp;if(difference<PetVisualization.EXPERIENCE_BUBBLE_VISIBLE_IN_MS){this._experienceData.alpha=Math.sin(difference/PetVisualization.EXPERIENCE_BUBBLE_VISIBLE_IN_MS*Math.PI)*0xFF;}else{this._experienceTimestamp=0;}const sprite=this.getSprite(this.totalSprites-1);if(sprite){if(this._experienceData.alpha>0){const texture=this._experienceData.renderBubble(this._experience);if(texture){sprite.texture=texture;sprite.offsetX=-20;sprite.offsetY=-80;sprite.alpha=this._experienceData.alpha;sprite.visible=true;sprite.relativeDepth=-0.2;return;}}sprite.texture=null;sprite.visible=false;}}}updateModel(scale){const model=this.object&&this.object.model;if(!model)return false;if(this.updateModelCounter===model.updateCounter)return false;const posture=model.getValue(RoomObjectVariable.FIGURE_POSTURE);const gesture=model.getValue(RoomObjectVariable.FIGURE_GESTURE);this.setPostureAndGesture(posture,gesture);let alphaMultiplier=model.getValue(RoomObjectVariable.FURNITURE_ALPHA_MULTIPLIER)||null;if(alphaMultiplier===null||isNaN(alphaMultiplier))alphaMultiplier=1;if(this._alphaMultiplier!==alphaMultiplier){this._alphaMultiplier=alphaMultiplier;this._alphaChanged=true;}this._isSleeping=model.getValue(RoomObjectVariable.FIGURE_SLEEP)>0;const headDirection=model.getValue(RoomObjectVariable.HEAD_DIRECTION);if(!isNaN(headDirection)&&this._data.isAllowedToTurnHead){this._headDirection=headDirection;}else{this._headDirection=this.object.getDirection().x;}this._experience=model.getValue(RoomObjectVariable.FIGURE_GAINED_EXPERIENCE);this._experienceTimestamp=model.getValue(RoomObjectVariable.FIGURE_EXPERIENCE_TIMESTAMP);const customPaletteIndex=model.getValue(RoomObjectVariable.PET_PALETTE_INDEX);const customLayerIds=model.getValue(RoomObjectVariable.PET_CUSTOM_LAYER_IDS);const customPartIds=model.getValue(RoomObjectVariable.PET_CUSTOM_PARTS_IDS);const customPaletteIds=model.getValue(RoomObjectVariable.PET_CUSTOM_PALETTE_IDS);const isRiding=model.getValue(RoomObjectVariable.PET_IS_RIDING);const headOnly=model.getValue(RoomObjectVariable.PET_HEAD_ONLY);const color=model.getValue(RoomObjectVariable.PET_COLOR);if(customPaletteIndex!==this._paletteIndex){this._paletteIndex=customPaletteIndex;this._paletteName=this._paletteIndex.toString();}this._customLayerIds=customLayerIds?customLayerIds:[];this._customPartIds=customPartIds?customPartIds:[];this._customPaletteIds=customPaletteIds?customPaletteIds:[];this._isRiding=!isNaN(isRiding)&&isRiding>0;this._headOnly=!isNaN(headOnly)&&headOnly>0;if(!isNaN(color)&&this._color!==color)this._color=color;this.updateModelCounter=model.updateCounter;return true;}updateAnimation(scale){if(this.object){const direction=this.object.getDirection().x;if(direction!==this._previousAnimationDirection){this._previousAnimationDirection=direction;this.resetAllAnimationFrames();}}return super.updateAnimation(scale);}setPostureAndGesture(posture,gesture){if(posture!==this._posture){this._posture=posture;this.setAnimationForIndex(PetVisualization.POSTURE_ANIMATION_INDEX,this._data.postureToAnimation(this._scale,posture));}if(this._data.getGestureDisabled(this._scale,posture))gesture=null;if(gesture!==this._gesture){this._gesture=gesture;this.setAnimationForIndex(PetVisualization.GESTURE_ANIMATION_INDEX,this._data.gestureToAnimation(this._scale,gesture));}}getAnimationStateData(k){if(k>=0&&k<this._animationStates.length)return this._animationStates[k];return null;}setAnimationForIndex(k,_arg_2){const animationStateData=this.getAnimationStateData(k);if(animationStateData){if(this.setSubAnimation(animationStateData,_arg_2))this._animationOver=false;}}resetAllAnimationFrames(){this._animationOver=false;let index=this._animationStates.length-1;while(index>=0){const stateData=this._animationStates[index];if(stateData)stateData.setLayerCount(this.animatedLayerCount);index--;}}updateAnimations(scale){if(this._animationOver)return 0;let animationOver=true;let _local_3=0;let index=0;while(index<this._animationStates.length){const stateData=this._animationStates[index];if(stateData){if(!stateData.animationOver){const _local_6=this.updateFramesForAnimation(stateData,scale);_local_3=_local_3|_local_6;if(!stateData.animationOver){animationOver=false;}else{if(AnimationData.isTransitionFromAnimation(stateData.animationId)||AnimationData.isTransitionToAnimation(stateData.animationId)){this.setAnimationForIndex(index,stateData.animationAfterTransitionId);animationOver=false;}}}}index++;}this._animationOver=animationOver;return _local_3;}getSpriteAssetName(scale,layerId){if(this._headOnly&&this.isNonHeadSprite(layerId))return null;if(this._isRiding&&this._parser3(layerId))return null;const totalSprites=this.totalSprites;if(layerId<totalSprites-PetVisualization.ADDITIONAL_SPRITE_COUNT){const validScale=this.getValidSize(scale);if(layerId<totalSprites-(1+PetVisualization.ADDITIONAL_SPRITE_COUNT)){if(layerId>=FurnitureVisualizationData.LAYER_LETTERS.length)return null;const layerLetter=FurnitureVisualizationData.LAYER_LETTERS[layerId];if(validScale===1)return this._type+'_icon_'+layerLetter;return this._type+'_'+validScale+'_'+layerLetter+'_'+this.getDirection(scale,layerId)+'_'+this.getFrameNumber(validScale,layerId);}return this._type+'_'+validScale+'_sd_'+this.getDirection(scale,layerId)+'_0';}return null;}getLayerColor(scale,layerId,colorId){if(layerId<this.totalSprites-PetVisualization.ADDITIONAL_SPRITE_COUNT)return this._color;return 0xFFFFFF;}getLayerXOffset(scale,direction,layerId){let offset=super.getLayerXOffset(scale,direction,layerId);let index=this._animationStates.length-1;while(index>=0){const stateData=this._animationStates[index];if(stateData){const frame=stateData.getFrame(layerId);if(frame)offset+=frame.x;}index--;}return offset;}getLayerYOffset(scale,direction,layerId){let offset=super.getLayerYOffset(scale,direction,layerId);let index=this._animationStates.length-1;while(index>=0){const stateData=this._animationStates[index];if(stateData){const frame=stateData.getFrame(layerId);if(frame)offset+=frame.y;}index--;}return offset;}getLayerZOffset(scale,direction,layerId){if(!this._data)return LayerData.DEFAULT_ZOFFSET;return this._data.getLayerZOffset(scale,this.getDirection(scale,layerId),layerId);}getDirection(scale,layerId){if(!this.isHeadSprite(layerId))return this._direction;return this._data.getValidDirection(scale,this._headDirection);}getFrameNumber(scale,layerId){let index=this._animationStates.length-1;while(index>=0){const stateData=this._animationStates[index];if(stateData){const frame=stateData.getFrame(layerId);if(frame)return frame.id;}index--;}return super.getFrameNumber(scale,layerId);}isHeadSprite(layerId){if(this._headSprites[layerId]===undefined){const isHead=this._data.getLayerTag(this._scale,DirectionData.USE_DEFAULT_DIRECTION,layerId)===PetVisualization.HEAD;const isHair=this._data.getLayerTag(this._scale,DirectionData.USE_DEFAULT_DIRECTION,layerId)===PetVisualization.HAIR;if(isHead||isHair)this._headSprites[layerId]=true;else this._headSprites[layerId]=false;}return this._headSprites[layerId];}isNonHeadSprite(layerId){if(this._nonHeadSprites[layerId]===undefined){if(layerId<this.totalSprites-(1+PetVisualization.ADDITIONAL_SPRITE_COUNT)){const tag=this._data.getLayerTag(this._scale,DirectionData.USE_DEFAULT_DIRECTION,layerId);if(tag&&tag.length>0&&tag!==PetVisualization.HEAD&&tag!==PetVisualization.HAIR){this._nonHeadSprites[layerId]=true;}else{this._nonHeadSprites[layerId]=false;}}else{this._nonHeadSprites[layerId]=true;}}return this._nonHeadSprites[layerId];}_parser3(layerId){if(this._saddleSprites[layerId]===undefined){if(this._data.getLayerTag(this._scale,DirectionData.USE_DEFAULT_DIRECTION,layerId)===PetVisualization.SADDLE){this._saddleSprites[layerId]=true;}else{this._saddleSprites[layerId]=false;}}return this._saddleSprites[layerId];}getAsset(name){let layerId=arguments.length>1&&arguments[1]!==undefined?arguments[1]:-1;if(!this.asset)return null;const layerIndex=this._customLayerIds.indexOf(layerId);let paletteName=this._paletteName;let partId=-1;let paletteId=-1;if(layerIndex>-1){partId=this._customPartIds[layerIndex];paletteId=this._customPaletteIds[layerIndex];paletteName=paletteId>-1?paletteId.toString():this._paletteName;}if(!isNaN(partId)&&partId>-1){name=name+'_'+partId;}return this.asset.getAssetWithPalette(name,paletteName);}getAdditionalLayerCount(){return super.getAdditionalLayerCount()+PetVisualization.ADDITIONAL_SPRITE_COUNT;}setLayerCount(count){super.setLayerCount(count);this._headSprites=[];}getPostureForAsset(scale,name){const parts=name.split('_');let length=parts.length;let i=0;while(i<parts.length){if(parts[i]==='64'||parts[i]==='32'){length=i+3;break;}i++;}let posture=null;if(length<parts.length){let part=parts[length];part=part.split('@')[0];posture=this._data.animationToPosture(scale,parseInt(part)/100,false);if(!posture)posture=this._data.getGestureForAnimationId(scale,parseInt(part)/100);}return posture;}getPetAdditionAsset(name){return Nitro.instance.core.asset.getTexture(name);}}PetVisualization.TYPE=RoomObjectVisualizationType.PET_ANIMATED;PetVisualization.HEAD='head';PetVisualization.SADDLE='saddle';PetVisualization.HAIR='hair';PetVisualization.ADDITIONAL_SPRITE_COUNT=1;PetVisualization.EXPERIENCE_BUBBLE_VISIBLE_IN_MS=1000;PetVisualization.PET_EXPERIENCE_BUBBLE='avatar_addition_pet_experience_bubble';PetVisualization.POSTURE_ANIMATION_INDEX=0;PetVisualization.GESTURE_ANIMATION_INDEX=1;PetVisualization.ANIMATION_INDEX_COUNT=2;","map":null,"metadata":{},"sourceType":"module"}