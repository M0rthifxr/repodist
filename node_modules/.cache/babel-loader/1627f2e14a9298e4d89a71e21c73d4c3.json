{"ast":null,"code":"import{TalentTrackLevel}from'./TalentTrackLevel';import{TalentTrackRewardProduct}from'./TalentTrackRewardProduct';import{TalentTrackTask}from'./TalentTrackTask';export class TalentTrackParser{constructor(){this._type=void 0;this._levels=void 0;}flush(){this._type=null;this._levels=null;return true;}parse(wrapper){if(!wrapper)return false;this._type=wrapper.readString();this._levels=[];const levelsCount=wrapper.readInt();for(let i=0;i<levelsCount;i++){const levelId=wrapper.readInt();const levelState=wrapper.readInt();const levelAchievements=[];const achievementsCount=wrapper.readInt();for(let j=0;j<achievementsCount;j++){const id=wrapper.readInt();const index=wrapper.readInt();const code=wrapper.readString();const state=wrapper.readInt();const progress=wrapper.readInt();const achievementProgress=wrapper.readInt();levelAchievements.push(new TalentTrackTask(id,index,code,state,progress,achievementProgress));}const levelPerks=[];const perksCount=wrapper.readInt();for(let j=0;j<perksCount;j++)levelPerks.push(wrapper.readString());const levelItems=[];const itemsCount=wrapper.readInt();for(let j=0;j<itemsCount;j++){const name=wrapper.readString();const unknownInt=wrapper.readInt();levelItems.push(new TalentTrackRewardProduct(name,unknownInt));}this._levels.push(new TalentTrackLevel(levelId,levelState,levelAchievements,levelPerks,levelItems));}return true;}get type(){return this._type;}get levels(){return this._levels;}}","map":null,"metadata":{},"sourceType":"module"}