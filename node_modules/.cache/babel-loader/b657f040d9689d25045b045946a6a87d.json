{"ast":null,"code":"import{IssueMessageData}from'@nitrots/nitro-renderer';import{useCallback,useMemo,useState}from'react';import{GetSessionDataManager}from'../../../../api';import{NitroCardContentView,NitroCardHeaderView,NitroCardTabsItemView,NitroCardTabsView,NitroCardView}from'../../../../common';import{useModToolsContext}from'../../ModToolsContext';import{ModToolsIssueInfoView}from'./ModToolsIssueInfoView';import{ModToolsMyIssuesTabView}from'./ModToolsMyIssuesTabView';import{ModToolsOpenIssuesTabView}from'./ModToolsOpenIssuesTabView';import{ModToolsPickedIssuesTabView}from'./ModToolsPickedIssuesTabView';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const TABS=['Open Issues','My Issues','Picked Issues'];export const ModToolsTicketsView=props=>{const{onCloseClick=null}=props;const{modToolsState=null}=useModToolsContext();const{tickets=null}=modToolsState;const[currentTab,setCurrentTab]=useState(0);const[issueInfoWindows,setIssueInfoWindows]=useState([]);const openIssues=useMemo(()=>{if(!tickets)return[];return tickets.filter(issue=>issue.state===IssueMessageData.STATE_OPEN);},[tickets]);const myIssues=useMemo(()=>{if(!tickets)return[];return tickets.filter(issue=>issue.state===IssueMessageData.STATE_PICKED&&issue.pickerUserId===GetSessionDataManager().userId);},[tickets]);const pickedIssues=useMemo(()=>{if(!tickets)return[];return tickets.filter(issue=>issue.state===IssueMessageData.STATE_PICKED);},[tickets]);const onIssueInfoClosed=useCallback(issueId=>{const indexOfValue=issueInfoWindows.indexOf(issueId);if(indexOfValue===-1)return;const newValues=Array.from(issueInfoWindows);newValues.splice(indexOfValue,1);setIssueInfoWindows(newValues);},[issueInfoWindows]);const onIssueHandleClicked=useCallback(issueId=>{if(issueInfoWindows.indexOf(issueId)===-1){const newValues=Array.from(issueInfoWindows);newValues.push(issueId);setIssueInfoWindows(newValues);}else{onIssueInfoClosed(issueId);}},[issueInfoWindows,onIssueInfoClosed]);const CurrentTabComponent=useCallback(()=>{switch(currentTab){case 0:return/*#__PURE__*/_jsx(ModToolsOpenIssuesTabView,{openIssues:openIssues});case 1:return/*#__PURE__*/_jsx(ModToolsMyIssuesTabView,{myIssues:myIssues,onIssueHandleClick:onIssueHandleClicked});case 2:return/*#__PURE__*/_jsx(ModToolsPickedIssuesTabView,{pickedIssues:pickedIssues});default:return null;}},[currentTab,myIssues,onIssueHandleClicked,openIssues,pickedIssues]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(NitroCardView,{className:\"nitro-mod-tools-tickets\",children:[/*#__PURE__*/_jsx(NitroCardHeaderView,{headerText:'Tickets',onCloseClick:onCloseClick}),/*#__PURE__*/_jsx(NitroCardTabsView,{children:TABS.map((tab,index)=>{return/*#__PURE__*/_jsx(NitroCardTabsItemView,{isActive:currentTab===index,onClick:event=>setCurrentTab(index),children:tab},index);})}),/*#__PURE__*/_jsx(NitroCardContentView,{gap:1,children:/*#__PURE__*/_jsx(CurrentTabComponent,{})})]}),issueInfoWindows&&issueInfoWindows.length>0&&issueInfoWindows.map(issueId=>/*#__PURE__*/_jsx(ModToolsIssueInfoView,{issueId:issueId,onIssueInfoClosed:onIssueInfoClosed},issueId))]});};","map":null,"metadata":{},"sourceType":"module"}