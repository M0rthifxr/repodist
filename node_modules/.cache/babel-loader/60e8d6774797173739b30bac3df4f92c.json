{"ast":null,"code":"import{MouseEventType}from'../../../../ui/MouseEventType';import{RoomObjectWidgetRequestEvent}from'../../../events/RoomObjectWidgetRequestEvent';import{RoomObjectVariable}from'../../RoomObjectVariable';import{FurnitureLogic}from'./FurnitureLogic';export class FurnitureEditableInternalLinkLogic extends FurnitureLogic{constructor(){super();this._showStateOnceRendered=void 0;this._updateCount=void 0;this._showStateOnceRendered=false;this._updateCount=0;}getEventTypes(){const types=[RoomObjectWidgetRequestEvent.INERNAL_LINK];return this.mergeTypes(super.getEventTypes(),types);}initialize(asset){super.initialize(asset);if(asset.logic){if(asset.logic.action){if(asset.logic.action.startState===1)this._showStateOnceRendered=true;}}}update(time){super.update(time);if(!this._showStateOnceRendered)return;this._updateCount++;if(this._showStateOnceRendered&&this._updateCount>20){this.setAutomaticStateIndex(1);this._showStateOnceRendered=false;}}setAutomaticStateIndex(state){if(!this.object)return;if(this.object.model){this.object.model.setValue(RoomObjectVariable.FURNITURE_AUTOMATIC_STATE_INDEX,state);}}mouseEvent(event,geometry){if(!event||!geometry)return;if(event.type===MouseEventType.DOUBLE_CLICK){this.setAutomaticStateIndex(0);}super.mouseEvent(event,geometry);}useObject(){if(!this.object||!this.eventDispatcher)return;this.eventDispatcher.dispatchEvent(new RoomObjectWidgetRequestEvent(RoomObjectWidgetRequestEvent.INERNAL_LINK,this.object));}}","map":null,"metadata":{},"sourceType":"module"}