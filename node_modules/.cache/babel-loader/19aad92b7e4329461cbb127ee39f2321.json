{"ast":null,"code":"import{Nitro}from'../../Nitro';export class Motions{static get TIMER_TIME(){return 1000/Nitro.instance.ticker.FPS;}static runMotion(k){if(Motions._RUNNING_MOTIONS.indexOf(k)===-1&&Motions._QUEUED_MOTIONS.indexOf(k)===-1){if(Motions._IS_UPDATING){Motions._QUEUED_MOTIONS.push(k);}else{Motions._RUNNING_MOTIONS.push(k);k.start();}Motions.startTimer();}return k;}static removeMotion(k){let _local_2=Motions._RUNNING_MOTIONS.indexOf(k);if(_local_2>-1){if(Motions._IS_UPDATING){_local_2=Motions._REMOVED_MOTIONS.indexOf(k);if(_local_2==-1)Motions._REMOVED_MOTIONS.push(k);}else{Motions._RUNNING_MOTIONS.splice(_local_2,1);if(k.running)k.stop();if(!Motions._RUNNING_MOTIONS.length)Motions.stopTimer();}}else{_local_2=Motions._QUEUED_MOTIONS.indexOf(k);if(_local_2>-1)Motions._QUEUED_MOTIONS.splice(_local_2,1);}}static getMotionByTag(k){for(const _local_2 of Motions._RUNNING_MOTIONS){if(_local_2.tag==k)return _local_2;}for(const _local_2 of Motions._QUEUED_MOTIONS){if(_local_2.tag==k)return _local_2;}return null;}static getMotionByTarget(k){for(const _local_2 of Motions._RUNNING_MOTIONS){if(_local_2.target==k)return _local_2;}for(const _local_2 of Motions._QUEUED_MOTIONS){if(_local_2.target==k)return _local_2;}return null;}static getMotionByTagAndTarget(k,_arg_2){for(const _local_3 of Motions._RUNNING_MOTIONS){if(_local_3.tag==k&&_local_3.target==_arg_2)return _local_3;}for(const _local_3 of Motions._QUEUED_MOTIONS){if(_local_3.tag==k&&_local_3.target==_arg_2)return _local_3;}return null;}static get isRunning(){return!!Motions._TIMER;}static get isUpdating(){return Motions._IS_UPDATING;}static onTick(){Motions._IS_UPDATING=true;const _local_2=Nitro.instance.time;let _local_3=null;// eslint-disable-next-line no-cond-assign\nwhile(_local_3=Motions._QUEUED_MOTIONS.pop())Motions._RUNNING_MOTIONS.push(_local_3);// eslint-disable-next-line no-cond-assign\nwhile(_local_3=Motions._REMOVED_MOTIONS.pop()){Motions._RUNNING_MOTIONS.splice(Motions._RUNNING_MOTIONS.indexOf(_local_3),1);if(_local_3.running)_local_3.stop();}for(_local_3 of Motions._RUNNING_MOTIONS){if(_local_3.running){_local_3.tick(_local_2);if(_local_3.complete){Motions.removeMotion(_local_3);}}else{Motions.removeMotion(_local_3);}}if(!Motions._RUNNING_MOTIONS.length)Motions.stopTimer();Motions._IS_UPDATING=false;}static startTimer(){if(!Motions._TIMER){Motions._TIMER=setInterval(Motions.onTick,Motions.TIMER_TIME);}}static stopTimer(){if(Motions._TIMER){clearInterval(Motions._TIMER);Motions._TIMER=null;}}getNumRunningMotions(k){let _local_2=0;for(const _local_3 of Motions._RUNNING_MOTIONS){if(_local_3.target===k)_local_2++;}return _local_2;}}Motions._QUEUED_MOTIONS=[];Motions._RUNNING_MOTIONS=[];Motions._REMOVED_MOTIONS=[];Motions._TIMER=null;Motions._IS_UPDATING=false;","map":null,"metadata":{},"sourceType":"module"}