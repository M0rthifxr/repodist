{"ast":null,"code":"import{useEffect,useState}from'react';import{LocalizeText,NavigatorSearchResultViewDisplayMode}from'../../../../api';import{AutoGrid,Column,Flex,Grid}from'../../../../common';import{NavigatorSearchResultItemView}from'./NavigatorSearchResultItemView';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export const NavigatorSearchResultView=props=>{const{searchResult=null,...rest}=props;const[isExtended,setIsExtended]=useState(true);const[displayMode,setDisplayMode]=useState(0);const getResultTitle=()=>{let name=searchResult.code;if(!name||!name.length)return searchResult.data;if(name.startsWith('${'))return name.slice(2,name.length-1);return'navigator.searchcode.title.'+name;};const toggleDisplayMode=()=>{setDisplayMode(prevValue=>{if(prevValue===NavigatorSearchResultViewDisplayMode.LIST)return NavigatorSearchResultViewDisplayMode.THUMBNAILS;return NavigatorSearchResultViewDisplayMode.LIST;});};useEffect(()=>{if(!searchResult)return;//setIsExtended(searchResult.closed);\nsetDisplayMode(searchResult.mode);},[searchResult,props]);const gridHasTwoColumns=displayMode>=NavigatorSearchResultViewDisplayMode.THUMBNAILS;return/*#__PURE__*/_jsxs(Column,{className:\"bg-white\",gap:0,children:[/*#__PURE__*/_jsxs(Flex,{fullWidth:true,alignItems:\"center\",justifyContent:\"between\",className:\"px-2 py-1\",children:[/*#__PURE__*/_jsxs(Flex,{grow:true,pointer:true,alignItems:\"center\",gap:1,onClick:event=>setIsExtended(prevValue=>!prevValue),children:[/*#__PURE__*/_jsx(\"i\",{className:isExtended?'icon icon-nav-minus':'icon icon-nav-plus'}),/*#__PURE__*/_jsxs(\"div\",{className:\"nav-category\",children:[\" \",LocalizeText(getResultTitle())]})]}),/*#__PURE__*/_jsx(\"i\",{className:displayMode===NavigatorSearchResultViewDisplayMode.LIST?'icon icon-nav-thumbnail':displayMode>=NavigatorSearchResultViewDisplayMode.THUMBNAILS?'icon icon-nav-inline':null,onClick:toggleDisplayMode})]}),\" \",isExtended&&/*#__PURE__*/_jsx(_Fragment,{children:gridHasTwoColumns?/*#__PURE__*/_jsx(AutoGrid,{columnCount:3,...rest,columnMinWidth:110,columnMinHeight:130,className:\"mx-2\",children:searchResult.rooms.length>0&&searchResult.rooms.map((room,index)=>/*#__PURE__*/_jsx(NavigatorSearchResultItemView,{roomData:room,thumbnail:true},index))}):/*#__PURE__*/_jsx(Grid,{columnCount:1,className:\"navigator-grid\",gap:0,children:searchResult.rooms.length>0&&searchResult.rooms.map((room,index)=>/*#__PURE__*/_jsx(NavigatorSearchResultItemView,{roomData:room},index))})})]})// <div className=\"nitro-navigator-search-result bg-white rounded mb-2 overflow-hidden\">\n//     <div className=\"d-flex flex-column\">\n//         <div className=\"d-flex align-items-center px-2 py-1 text-black\">\n//             <i className={ 'text-secondary fas ' + (isExtended ? 'fa-minus' : 'fa-plus') } onClick={ toggleExtended }></i>\n//             <div className=\"ms-2 flex-grow-1\">{ LocalizeText(getResultTitle()) }</div>\n//             <i className={ 'text-secondary fas ' + classNames({ 'fa-bars': (displayMode === NavigatorSearchResultViewDisplayMode.LIST), 'fa-th': displayMode >= NavigatorSearchResultViewDisplayMode.THUMBNAILS })}></i>\n//         </div>\n//         { isExtended &&\n//             <div className={ 'nitro-navigator-result-list row row-cols-' + classNames({ '1': (displayMode === NavigatorSearchResultViewDisplayMode.LIST), '2': (displayMode >= NavigatorSearchResultViewDisplayMode.THUMBNAILS) }) }>\n//                 { searchResult.rooms.length > 0 && searchResult.rooms.map((room, index) =>\n//                     {\n//                         return <NavigatorSearchResultItemView key={ index } roomData={ room } />\n//                     }) }\n//             </div> }\n//     </div>\n// </div>\n// <div className=\"nitro-navigator-result-list p-2\">\n//     <div className=\"d-flex mb-2 small cursor-pointer\" onClick={ toggleList }>\n//         <i className={ \"fas \" + classNames({ 'fa-plus': !isExtended, 'fa-minus': isExtended })}></i>\n//         <div className=\"align-self-center w-100 ml-2\">{ LocalizeText(getListCode()) }</div>\n//         <i className={ \"fas \" + classNames({ 'fa-bars': displayMode === NavigatorResultListViewDisplayMode.LIST, 'fa-th': displayMode >= NavigatorResultListViewDisplayMode.THUMBNAILS })} onClick={ toggleDisplayMode }></i>\n//     </div>\n//     <div className={ 'row mr-n2 row-cols-' + classNames({ '1': displayMode === NavigatorResultListViewDisplayMode.LIST, '2': displayMode >= NavigatorResultListViewDisplayMode.THUMBNAILS }) }>\n//         { isExtended && resultList && resultList.rooms.map((room, index) =>\n//             {\n//                 return <NavigatorResultView key={ index } result={ room } />\n//             })\n//         }\n//     </div>\n// </div>\n;};","map":null,"metadata":{},"sourceType":"module"}