{"ast":null,"code":"import{useCallback,useEffect,useMemo,useRef,useState}from'react';import{AutoSizer,CellMeasurer,CellMeasurerCache,List}from'react-virtualized';import{AddEventLinkTracker,RemoveLinkEventTracker}from'../../api';import{Column,Flex,Text}from'../../common';import{ChatHistoryContextProvider}from'./ChatHistoryContext';import{ChatHistoryMessageHandler}from'./ChatHistoryMessageHandler';import{ChatEntryType}from'./common/ChatEntryType';import{ChatHistoryState}from'./common/ChatHistoryState';import{SetChatHistory}from'./common/GetChatHistory';import{RoomHistoryState}from'./common/RoomHistoryState';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export const ChatHistoryView=props=>{const[isVisible,setIsVisible]=useState(false);const[chatHistoryUpdateId,setChatHistoryUpdateId]=useState(-1);const[roomHistoryUpdateId,setRoomHistoryUpdateId]=useState(-1);const[chatHistoryState,setChatHistoryState]=useState(new ChatHistoryState());const[roomHistoryState,setRoomHistoryState]=useState(new RoomHistoryState());const elementRef=useRef(null);const cache=useMemo(()=>new CellMeasurerCache({defaultHeight:25,fixedWidth:true}),[]);const RowRenderer=props=>{const item=chatHistoryState.chats[props.index];const isDark=props.index%2===0;return/*#__PURE__*/_jsx(CellMeasurer,{cache:cache,columnIndex:0,parent:props.parent,rowIndex:props.index,children:/*#__PURE__*/_jsxs(Flex,{style:props.style,className:\"p-1\",gap:1,children:[/*#__PURE__*/_jsx(Text,{variant:\"muted\",children:item.timestamp}),item.type===ChatEntryType.TYPE_CHAT&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Text,{pointer:true,noWrap:true,dangerouslySetInnerHTML:{__html:item.name+':'}}),/*#__PURE__*/_jsx(Text,{textBreak:true,wrap:true,grow:true,children:item.message})]}),item.type===ChatEntryType.TYPE_ROOM_INFO&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"i\",{className:\"icon icon-small-room\"}),/*#__PURE__*/_jsx(Text,{variant:\"danger\",textBreak:true,wrap:true,grow:true,children:item.name})]})]},props.key)},props.key);};const onResize=info=>cache.clearAll();const linkReceived=useCallback(url=>{const parts=url.split('/');if(parts.length<2)return;switch(parts[1]){case'show':setIsVisible(true);return;case'hide':setIsVisible(false);return;case'toggle':setIsVisible(prevValue=>!prevValue);return;}},[]);useEffect(()=>{const linkTracker={linkReceived,eventUrlPrefix:'chat-history/'};AddEventLinkTracker(linkTracker);return()=>RemoveLinkEventTracker(linkTracker);},[linkReceived]);useEffect(()=>{const chatState=new ChatHistoryState();const roomState=new RoomHistoryState();SetChatHistory(chatState);chatState.notifier=()=>setChatHistoryUpdateId(prevValue=>prevValue+1);roomState.notifier=()=>setRoomHistoryUpdateId(prevValue=>prevValue+1);setChatHistoryState(chatState);setRoomHistoryState(roomState);return()=>{chatState.notifier=null;roomState.notifier=null;};},[]);useEffect(()=>{if(elementRef&&elementRef.current&&isVisible)elementRef.current.scrollToRow(-1);},[isVisible]);return/*#__PURE__*/_jsxs(ChatHistoryContextProvider,{value:{chatHistoryState,roomHistoryState},children:[/*#__PURE__*/_jsx(ChatHistoryMessageHandler,{}),isVisible&&/*#__PURE__*/_jsxs(Flex,{gap:2,className:\"nitro-chat-history\",children:[/*#__PURE__*/_jsx(Column,{className:\"chat-history-content h-100\",children:/*#__PURE__*/_jsx(Column,{className:\"h-100\",children:/*#__PURE__*/_jsx(AutoSizer,{defaultWidth:300,defaultHeight:200,onResize:onResize,children:_ref=>{let{height,width}=_ref;return/*#__PURE__*/_jsx(List,{ref:elementRef,width:width,height:height,rowCount:chatHistoryState.chats.length,rowHeight:cache.rowHeight,className:'chat-history-list',rowRenderer:RowRenderer,deferredMeasurementCache:cache});}})})}),/*#__PURE__*/_jsx(Flex,{className:\"chat-toggle\",onClick:event=>setIsVisible(false)})]})]});};","map":null,"metadata":{},"sourceType":"module"}