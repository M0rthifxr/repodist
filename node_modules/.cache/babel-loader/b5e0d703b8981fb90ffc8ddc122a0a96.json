{"ast":null,"code":"import{ActionType}from'./ActionType';export class ActionDefinition{constructor(data){this._id=void 0;this._state=void 0;this._precedence=void 0;this._activePartSet=void 0;this._assetPartDefinition=void 0;this._lay=void 0;this._geometryType=void 0;this._isMain=void 0;this._isDefault=void 0;this._isAnimation=void 0;this._startFromFrameZero=void 0;this._prevents=void 0;this._preventHeadTurn=void 0;this._types=void 0;this._params=void 0;this._defaultParameterValue=void 0;this._canvasOffsets=void 0;this._id=data.id;this._state=data.state;this._precedence=data.precedence;this._activePartSet=data.activePartSet;this._assetPartDefinition=data.assetPartDefinition;this._lay=data.lay;this._geometryType=data.geometryType;this._isMain=data.main||false;this._isDefault=data.isDefault||false;this._isAnimation=data.animation||false;this._startFromFrameZero=data.startFromFrameZero||false;this._prevents=data.prevents||[];this._preventHeadTurn=data.preventHeadTurn||false;this._types=new Map();this._params=new Map();this._defaultParameterValue='';this._canvasOffsets=null;if(data.params&&data.params.length>0){for(const param of data.params){if(!param)continue;if(param.id==='default')this._defaultParameterValue=param.value;else this._params.set(param.id,param.value);}}if(data.types&&data.types.length>0){for(const type of data.types){if(!type)continue;const action=new ActionType(type);this._types.set(action.id,action);}}}setOffsets(k,_arg_2,_arg_3){if(!this._canvasOffsets)this._canvasOffsets=new Map();let existing=this._canvasOffsets.get(k);if(!existing){existing=new Map();this._canvasOffsets.set(k,existing);}existing.set(_arg_2,_arg_3);}getOffsets(k,_arg_2){if(!this._canvasOffsets)return null;const existing=this._canvasOffsets.get(k);if(!existing)return null;return existing.get(_arg_2);}getType(id){if(!id)return null;const existing=this._types.get(parseInt(id));if(!existing)return null;return existing;}getParameterValue(id){if(!id)return'';const existing=this._params.get(id);if(!existing)return this._defaultParameterValue;return existing;}getPrevents(type){return this._prevents.concat(this.getTypePrevents(type));}getTypePrevents(type){if(!type)return[];const existing=this._types.get(parseInt(type));if(!existing)return[];return existing.prevents;}getPreventHeadTurn(k){if(!k)return this._preventHeadTurn;const type=this.getType(k);if(!type)return this._preventHeadTurn;return type.preventHeadTurn;}isAnimated(k){if(!k)return true;const type=this.getType(k);if(!type)return true;return type.isAnimated;}get id(){return this._id;}get state(){return this._state;}get precedence(){return this._precedence;}get activePartSet(){return this._activePartSet;}get assetPartDefinition(){return this._assetPartDefinition;}get lay(){return this._lay;}get geometryType(){return this._geometryType;}get isMain(){return this._isMain;}get isDefault(){return this._isDefault;}get isAnimation(){return this._isAnimation;}get startFromFrameZero(){return this._startFromFrameZero;}get prevents(){return this._prevents;}get preventHeadTurn(){return this._preventHeadTurn;}get params(){return this._params;}}","map":null,"metadata":{},"sourceType":"module"}