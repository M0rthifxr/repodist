{"ast":null,"code":"import{RoomObjectType}from'@nitrots/nitro-renderer';import{useMemo,useState}from'react';import{GetSessionDataManager,LocalizeText}from'../../../api';import{AutoGrid,Button,Column,Flex,LayoutGridItem,Text}from'../../../common';import{ChatEntryType}from'../../chat-history/common/ChatEntryType';import{GetChatHistory}from'../../chat-history/common/GetChatHistory';import{useHelpContext}from'../HelpContext';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export const SelectReportedUserView=props=>{const[selectedUserId,setSelectedUserId]=useState(-1);const{helpReportState=null,setHelpReportState=null}=useHelpContext();const availableUsers=useMemo(()=>{const users=new Map();GetChatHistory().chats.forEach(chat=>{if(chat.type===ChatEntryType.TYPE_CHAT&&chat.entityType===RoomObjectType.USER&&chat.entityId!==GetSessionDataManager().userId){if(!users.has(chat.entityId)){users.set(chat.entityId,{id:chat.entityId,username:chat.name});}}});return Array.from(users.values());},[]);const submitUser=()=>{if(selectedUserId<=0)return;setHelpReportState(prevValue=>{const reportedUserId=selectedUserId;const currentStep=2;return{...prevValue,reportedUserId,currentStep};});};const selectUser=userId=>{if(selectedUserId===userId)setSelectedUserId(-1);else setSelectedUserId(userId);};const back=()=>{setHelpReportState(prevValue=>{const currentStep=prevValue.currentStep-1;return{...prevValue,currentStep};});};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Column,{gap:1,children:[/*#__PURE__*/_jsx(Text,{fontSize:4,children:LocalizeText('help.emergency.main.step.two.title')}),availableUsers.length>0&&/*#__PURE__*/_jsx(Text,{children:LocalizeText('report.user.pick.user')})]}),/*#__PURE__*/_jsxs(Column,{gap:1,overflow:\"hidden\",children:[!!!availableUsers.length&&/*#__PURE__*/_jsx(Text,{children:LocalizeText('report.user.error.nolist')}),availableUsers.length>0&&/*#__PURE__*/_jsx(AutoGrid,{columnCount:1,columnMinHeight:25,gap:1,children:availableUsers.map((user,index)=>{return/*#__PURE__*/_jsx(LayoutGridItem,{onClick:event=>selectUser(user.id),itemActive:selectedUserId===user.id,children:/*#__PURE__*/_jsx(\"span\",{dangerouslySetInnerHTML:{__html:user.username}})},user.id);})})]}),/*#__PURE__*/_jsxs(Flex,{gap:2,justifyContent:\"between\",children:[/*#__PURE__*/_jsx(Button,{variant:\"secondary\",onClick:back,children:LocalizeText('generic.back')}),/*#__PURE__*/_jsx(Button,{disabled:selectedUserId<=0,onClick:submitUser,children:LocalizeText('help.emergency.main.submit.button')})]})]});};","map":null,"metadata":{},"sourceType":"module"}