{"ast":null,"code":"import{Disposable}from'../common/disposable/Disposable';import{SocketConnection}from'./connections/SocketConnection';export class CommunicationManager extends Disposable{constructor(){super();this._connections=void 0;this._connections=[];}onDispose(){if(!this._connections||!this._connections.length)return;for(const connection of this._connections.values())connection&&connection.dispose();}createConnection(){let stateListener=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;const connection=new SocketConnection(this,stateListener);if(!connection)return;this._connections.push(connection);return connection;}update(time){let index=0;while(index<this._connections.length){const connection=this._connections[index];connection.processReceivedData();if(this.disposed)return;if(connection.disposed)this._connections.splice(index,1);else index++;}}}","map":null,"metadata":{},"sourceType":"module"}