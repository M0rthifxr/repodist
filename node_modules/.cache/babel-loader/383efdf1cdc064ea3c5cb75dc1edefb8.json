{"ast":null,"code":"import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{useCallback,useEffect,useState}from'react';import ReactSlider from'react-slider';import{LocalizeText,WiredFurniType}from'../../../../api';import{Button}from'../../../../common/Button';import{Column}from'../../../../common/Column';import{Flex}from'../../../../common/Flex';import{Text}from'../../../../common/Text';import{useWiredContext}from'../../WiredContext';import{WiredActionBaseView}from'./WiredActionBaseView';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export const WiredActionGiveRewardView=props=>{const[limitEnabled,setLimitEnabled]=useState(false);const[rewardTime,setRewardTime]=useState(1);const[uniqueRewards,setUniqueRewards]=useState(false);const[rewardsLimit,setRewardsLimit]=useState(1);const[limitationInterval,setLimitationInterval]=useState(1);const[rewards,setRewards]=useState([]);const{trigger=null,setIntParams=null,setStringParam=null}=useWiredContext();const addReward=useCallback(()=>{setRewards(rewards=>[...rewards,{isBadge:false,itemCode:'',probability:null}]);},[setRewards]);const removeReward=useCallback(index=>{setRewards(prevValue=>{const newValues=Array.from(prevValue);newValues.splice(index,1);return newValues;});},[setRewards]);const updateReward=useCallback((index,isBadge,itemCode,probability)=>{const rewardsClone=Array.from(rewards);const reward=rewardsClone[index];if(!reward)return;reward.isBadge=isBadge;reward.itemCode=itemCode;reward.probability=probability;setRewards(rewardsClone);},[rewards,setRewards]);const save=useCallback(()=>{let stringRewards=[];for(const reward of rewards){if(!reward.itemCode)continue;const rewardsString=[reward.isBadge?'0':'1',reward.itemCode,reward.probability.toString()];stringRewards.push(rewardsString.join(','));}if(stringRewards.length>0){setStringParam(stringRewards.join(';'));setIntParams([rewardTime,uniqueRewards?1:0,rewardsLimit,limitationInterval]);}},[rewardTime,uniqueRewards,rewardsLimit,limitationInterval,rewards,setIntParams,setStringParam]);useEffect(()=>{const readRewards=[];if(trigger.stringData.length>0&&trigger.stringData.includes(';')){const splittedRewards=trigger.stringData.split(';');for(const rawReward of splittedRewards){const reward=rawReward.split(',');if(reward.length!==3)continue;readRewards.push({isBadge:reward[0]==='0',itemCode:reward[1],probability:Number(reward[2])});}}if(readRewards.length===0)readRewards.push({isBadge:false,itemCode:'',probability:null});setRewardTime(trigger.intData.length>0?trigger.intData[0]:0);setUniqueRewards(trigger.intData.length>1?trigger.intData[1]===1:false);setRewardsLimit(trigger.intData.length>2?trigger.intData[2]:0);setLimitationInterval(trigger.intData.length>3?trigger.intData[3]:0);setLimitEnabled(trigger.intData.length>3?trigger.intData[3]>0:false);setRewards(readRewards);},[trigger]);return/*#__PURE__*/_jsxs(WiredActionBaseView,{requiresFurni:WiredFurniType.STUFF_SELECTION_OPTION_NONE,hasSpecialInput:true,save:save,children:[/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",gap:1,children:[/*#__PURE__*/_jsx(\"input\",{className:\"form-check-input\",type:\"checkbox\",id:\"limitEnabled\",onChange:event=>setLimitEnabled(event.target.checked)}),/*#__PURE__*/_jsx(Text,{children:LocalizeText('wiredfurni.params.prizelimit',['amount'],[limitEnabled?rewardsLimit.toString():''])})]}),!limitEnabled&&/*#__PURE__*/_jsx(Text,{center:true,className:\"bg-muted rounded p-1\",children:\"Reward limit not set. Make sure rewards are badges or non-tradeable items.\"}),limitEnabled&&/*#__PURE__*/_jsx(ReactSlider,{className:'wired-slider',min:1,max:1000,value:rewardsLimit,onChange:event=>setRewardsLimit(event)}),/*#__PURE__*/_jsx(\"hr\",{className:\"m-0 bg-dark\"}),/*#__PURE__*/_jsxs(Column,{gap:1,children:[/*#__PURE__*/_jsx(Text,{gfbold:true,children:\"How often can a user be rewarded?\"}),/*#__PURE__*/_jsxs(Flex,{gap:1,children:[/*#__PURE__*/_jsxs(\"select\",{className:\"form-select form-select-sm w-100\",value:rewardTime,onChange:e=>setRewardTime(Number(e.target.value)),children:[/*#__PURE__*/_jsx(\"option\",{value:\"0\",children:\"Once\"}),/*#__PURE__*/_jsxs(\"option\",{value:\"3\",children:[\"Once every \",limitationInterval,\" minutes\"]}),/*#__PURE__*/_jsxs(\"option\",{value:\"2\",children:[\"Once every \",limitationInterval,\" hours\"]}),/*#__PURE__*/_jsxs(\"option\",{value:\"1\",children:[\"Once every \",limitationInterval,\" days\"]})]}),rewardTime>0&&/*#__PURE__*/_jsx(\"input\",{type:\"number\",className:\"form-control form-control-sm\",value:limitationInterval,onChange:event=>setLimitationInterval(Number(event.target.value))})]})]}),/*#__PURE__*/_jsx(\"hr\",{className:\"m-0 bg-dark\"}),/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",gap:1,children:[/*#__PURE__*/_jsx(\"input\",{className:\"form-check-input\",type:\"checkbox\",id:\"uniqueRewards\",checked:uniqueRewards,onChange:e=>setUniqueRewards(e.target.checked)}),/*#__PURE__*/_jsx(Text,{children:\"Unique rewards\"})]}),/*#__PURE__*/_jsx(Text,{center:true,className:\"bg-muted rounded p-1\",children:\"If checked each reward will be given once to each user. This will disable the probabilities option.\"}),/*#__PURE__*/_jsx(\"hr\",{className:\"m-0 bg-dark\"}),/*#__PURE__*/_jsxs(Flex,{justifyContent:\"between\",alignItems:\"center\",children:[/*#__PURE__*/_jsx(Text,{gfbold:true,children:\"Rewards\"}),/*#__PURE__*/_jsx(Button,{variant:\"success\",onClick:addReward,children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:\"plus\"})})]}),/*#__PURE__*/_jsx(Column,{gap:1,children:rewards&&rewards.map((reward,index)=>{return/*#__PURE__*/_jsxs(Flex,{gap:1,children:[/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",gap:1,children:[/*#__PURE__*/_jsx(\"input\",{className:\"form-check-input\",type:\"checkbox\",checked:reward.isBadge,onChange:e=>updateReward(index,e.target.checked,reward.itemCode,reward.probability)}),/*#__PURE__*/_jsx(Text,{children:\"Badge?\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control form-control-sm\",value:reward.itemCode,onChange:e=>updateReward(index,reward.isBadge,e.target.value,reward.probability),placeholder:\"Item Code\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",className:\"form-control form-control-sm\",value:reward.probability,onChange:e=>updateReward(index,reward.isBadge,reward.itemCode,Number(e.target.value)),placeholder:\"Probability\"}),index>0&&/*#__PURE__*/_jsx(Button,{variant:\"danger\",onClick:event=>removeReward(index),children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:\"trash\"})})]},index);})})]});};","map":null,"metadata":{},"sourceType":"module"}