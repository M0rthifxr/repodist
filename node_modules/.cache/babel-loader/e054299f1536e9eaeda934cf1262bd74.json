{"ast":null,"code":"import{MouseEventType}from'../../../../ui/MouseEventType';import{RoomObjectStateChangedEvent}from'../../../events/RoomObjectStateChangedEvent';import{RoomObjectVariable}from'../../RoomObjectVariable';import{FurnitureLogic}from'./FurnitureLogic';export class FurnitureFireworksLogic extends FurnitureLogic{getEventTypes(){const types=[RoomObjectStateChangedEvent.STATE_CHANGE];return this.mergeTypes(super.getEventTypes(),types);}initialize(asset){super.initialize(asset);if(asset.logic){if(asset.logic.particleSystems&&asset.logic.particleSystems.length){this.object.model.setValue(RoomObjectVariable.FURNITURE_FIREWORKS_DATA,asset.logic.particleSystems);}}}mouseEvent(event,geometry){if(!event||!geometry||!this.object)return;let objectEvent=null;switch(event.type){case MouseEventType.DOUBLE_CLICK:switch(event.spriteTag){case'start_stop':objectEvent=new RoomObjectStateChangedEvent(RoomObjectStateChangedEvent.STATE_CHANGE,this.object,1);break;case'reset':objectEvent=new RoomObjectStateChangedEvent(RoomObjectStateChangedEvent.STATE_CHANGE,this.object,2);break;}if(this.eventDispatcher&&objectEvent){this.eventDispatcher.dispatchEvent(objectEvent);return;}break;}super.mouseEvent(event,geometry);}useObject(){if(!this.object||!this.eventDispatcher)return;this.eventDispatcher.dispatchEvent(new RoomObjectStateChangedEvent(RoomObjectStateChangedEvent.STATE_CHANGE,this.object,0));}}","map":null,"metadata":{},"sourceType":"module"}