{"ast":null,"code":"import{LayerData}from'./LayerData';export class DirectionData{constructor(layerCount){this._layers=void 0;this._layers=[];this.createLayers(layerCount);}createLayers(count){if(!count)return;for(let i=0;i<count;i++)this._layers.push(new LayerData());}dispose(){this._layers=[];}setFromDirection(directionData){if(!directionData)return;const totalLayers=this.layerCount;if(totalLayers!==directionData.layerCount)return;for(let i=0;i<totalLayers;i++){const localLayer=this.getLayer(i);const directionLayer=directionData.getLayer(i);if(!localLayer)continue;localLayer.setFromLayer(directionLayer);}}getLayer(layerId){const existing=this._layers[layerId];if(!existing)return null;return existing;}getLayerTag(layerId){const existing=this.getLayer(layerId);if(!existing)return LayerData.DEFAULT_TAG;return existing.tag;}setLayerTag(layerId,tag){const existing=this.getLayer(layerId);if(!existing)return;existing.tag=tag;}getLayerInk(layerId){const existing=this.getLayer(layerId);if(!existing)return LayerData.DEFAULT_INK;return existing.ink;}setLayerInk(layerId,ink){const existing=this.getLayer(layerId);if(!existing)return;if(isNaN(ink))return;existing.ink=ink;}getLayerAlpha(layerId){const existing=this.getLayer(layerId);if(!existing)return LayerData.DEFAULT_ALPHA;return existing.alpha;}setLayerAlpha(layerId,alpha){const existing=this.getLayer(layerId);if(!existing)return;if(isNaN(alpha))return;existing.alpha=alpha;}getLayerIgnoreMouse(layerId){const existing=this.getLayer(layerId);if(!existing)return LayerData.DEFAULT_IGNORE_MOUSE;return existing.ignoreMouse;}setLayerIgnoreMouse(layerId,flag){const existing=this.getLayer(layerId);if(!existing)return;existing.ignoreMouse=flag||false;}getLayerXOffset(layerId){const existing=this.getLayer(layerId);if(!existing)return LayerData.DEFAULT_XOFFSET;return existing.xOffset;}setLayerXOffset(layerId,offset){const existing=this.getLayer(layerId);if(!existing)return;if(isNaN(offset))return;existing.xOffset=offset;}getLayerYOffset(layerId){const existing=this.getLayer(layerId);if(!existing)return LayerData.DEFAULT_YOFFSET;return existing.yOffset;}setLayerYOffset(layerId,offset){const existing=this.getLayer(layerId);if(!existing)return;if(isNaN(offset))return;existing.yOffset=offset;}getLayerZOffset(layerId){const existing=this.getLayer(layerId);if(!existing)return LayerData.DEFAULT_ZOFFSET;return existing.zOffset;}setLayerZOffset(layerId,offset){const existing=this.getLayer(layerId);if(!existing)return;if(isNaN(offset))return;existing.zOffset=offset;}get layerCount(){return this._layers.length;}}DirectionData.USE_DEFAULT_DIRECTION=-1;","map":null,"metadata":{},"sourceType":"module"}