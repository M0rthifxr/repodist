{"ast":null,"code":"export class AnimationFrame{constructor(){this._id=void 0;this._x=void 0;this._y=void 0;this._repeats=void 0;this._frameRepeats=void 0;this._remainingFrameRepeats=void 0;this._activeSequence=void 0;this._activeSequenceOffset=void 0;this._isLastFrame=void 0;this._isRecycled=void 0;}static allocate(id,x,y,repeats,frameRepeats,isLastFrame){let activeSequence=arguments.length>6&&arguments[6]!==undefined?arguments[6]:-1;let sequenceOffset=arguments.length>7&&arguments[7]!==undefined?arguments[7]:0;const frame=AnimationFrame.POOL.length?AnimationFrame.POOL.pop():new AnimationFrame();if(repeats<1)repeats=1;if(frameRepeats<0)frameRepeats=AnimationFrame.FRAME_REPEAT_FOREVER;frame._id=id;frame._x=x||0;frame._y=y||0;frame._repeats=repeats;frame._frameRepeats=frameRepeats;frame._remainingFrameRepeats=frameRepeats;frame._isLastFrame=isLastFrame;frame._isRecycled=false;if(activeSequence>=0){frame._activeSequence=activeSequence;frame._activeSequenceOffset=sequenceOffset;}else{frame._activeSequence=-1;frame._activeSequenceOffset=0;}return frame;}get id(){if(this._id>=0)return this._id;return-this._id*Math.random();}get x(){return this._x;}get y(){return this._y;}get repeats(){return this._repeats;}get frameRepeats(){return this._frameRepeats;}get isLastFrame(){return this._isLastFrame;}get remainingFrameRepeats(){if(this._frameRepeats<0)return AnimationFrame.FRAME_REPEAT_FOREVER;return this._remainingFrameRepeats;}set remainingFrameRepeats(k){if(k<0)k=0;if(this._frameRepeats>0&&k>this._frameRepeats)k=this._frameRepeats;this._remainingFrameRepeats=k;}get activeSequence(){return this._activeSequence;}get activeSequenceOffset(){return this._activeSequenceOffset;}recycle(){if(this._isRecycled)return;this._isRecycled=true;if(AnimationFrame.POOL.length<AnimationFrame.POOL_SIZE_LIMIT)AnimationFrame.POOL.push(this);}}AnimationFrame.FRAME_REPEAT_FOREVER=-1;AnimationFrame.SEQUENCE_NOT_DEFINED=-1;AnimationFrame.POOL_SIZE_LIMIT=3000;AnimationFrame.POOL=[];","map":null,"metadata":{},"sourceType":"module"}