{"ast":null,"code":"import classNames from'classnames';import useEventCallback from'@restart/hooks/useEventCallback';import*as React from'react';import{useCallback,useContext,useMemo,useRef}from'react';import BaseModal from'@restart/ui/Modal';import Fade from'./Fade';import OffcanvasBody from'./OffcanvasBody';import OffcanvasToggling from'./OffcanvasToggling';import ModalContext from'./ModalContext';import NavbarContext from'./NavbarContext';import OffcanvasHeader from'./OffcanvasHeader';import OffcanvasTitle from'./OffcanvasTitle';import{useBootstrapPrefix}from'./ThemeProvider';import BootstrapModalManager,{getSharedManager}from'./BootstrapModalManager';import{jsx as _jsx}from\"react/jsx-runtime\";const defaultProps={show:false,backdrop:true,keyboard:true,scroll:false,autoFocus:true,enforceFocus:true,restoreFocus:true,placement:'start'};function DialogTransition(props){return/*#__PURE__*/_jsx(OffcanvasToggling,{...props});}function BackdropTransition(props){return/*#__PURE__*/_jsx(Fade,{...props});}const Offcanvas=/*#__PURE__*/React.forwardRef((_ref,ref)=>{let{bsPrefix,className,children,'aria-labelledby':ariaLabelledby,placement,/* BaseModal props */show,backdrop,keyboard,scroll,onEscapeKeyDown,onShow,onHide,container,autoFocus,enforceFocus,restoreFocus,restoreFocusOptions,onEntered,onExit,onExiting,onEnter,onEntering,onExited,backdropClassName,manager:propsManager,...props}=_ref;const modalManager=useRef();bsPrefix=useBootstrapPrefix(bsPrefix,'offcanvas');const{onToggle}=useContext(NavbarContext)||{};const handleHide=useEventCallback(()=>{onToggle==null?void 0:onToggle();onHide==null?void 0:onHide();});const modalContext=useMemo(()=>({onHide:handleHide}),[handleHide]);function getModalManager(){if(propsManager)return propsManager;if(scroll){// Have to use a different modal manager since the shared\n// one handles overflow.\nif(!modalManager.current)modalManager.current=new BootstrapModalManager({handleContainerOverflow:false});return modalManager.current;}return getSharedManager();}const handleEnter=function(node){if(node)node.style.visibility='visible';for(var _len=arguments.length,args=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){args[_key-1]=arguments[_key];}onEnter==null?void 0:onEnter(node,...args);};const handleExited=function(node){if(node)node.style.visibility='';for(var _len2=arguments.length,args=new Array(_len2>1?_len2-1:0),_key2=1;_key2<_len2;_key2++){args[_key2-1]=arguments[_key2];}onExited==null?void 0:onExited(...args);};const renderBackdrop=useCallback(backdropProps=>/*#__PURE__*/_jsx(\"div\",{...backdropProps,className:classNames(`${bsPrefix}-backdrop`,backdropClassName)}),[backdropClassName,bsPrefix]);const renderDialog=dialogProps=>/*#__PURE__*/_jsx(\"div\",{role:\"dialog\",...dialogProps,...props,className:classNames(className,bsPrefix,`${bsPrefix}-${placement}`),\"aria-labelledby\":ariaLabelledby,children:children});return/*#__PURE__*/_jsx(ModalContext.Provider,{value:modalContext,children:/*#__PURE__*/_jsx(BaseModal,{show:show,ref:ref,backdrop:backdrop,container:container,keyboard:keyboard,autoFocus:autoFocus,enforceFocus:enforceFocus&&!scroll,restoreFocus:restoreFocus,restoreFocusOptions:restoreFocusOptions,onEscapeKeyDown:onEscapeKeyDown,onShow:onShow,onHide:handleHide,onEnter:handleEnter,onEntering:onEntering,onEntered:onEntered,onExit:onExit,onExiting:onExiting,onExited:handleExited,manager:getModalManager(),transition:DialogTransition,backdropTransition:BackdropTransition,renderBackdrop:renderBackdrop,renderDialog:renderDialog})});});Offcanvas.displayName='Offcanvas';Offcanvas.defaultProps=defaultProps;export default Object.assign(Offcanvas,{Body:OffcanvasBody,Header:OffcanvasHeader,Title:OffcanvasTitle});","map":null,"metadata":{},"sourceType":"module"}