{"ast":null,"code":"import{Vector3D}from'./Vector3D';export class Matrix4x4{constructor(){let k=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;let _arg_2=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;let _arg_3=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;let _arg_4=arguments.length>3&&arguments[3]!==undefined?arguments[3]:0;let _arg_5=arguments.length>4&&arguments[4]!==undefined?arguments[4]:0;let _arg_6=arguments.length>5&&arguments[5]!==undefined?arguments[5]:0;let _arg_7=arguments.length>6&&arguments[6]!==undefined?arguments[6]:0;let _arg_8=arguments.length>7&&arguments[7]!==undefined?arguments[7]:0;let _arg_9=arguments.length>8&&arguments[8]!==undefined?arguments[8]:0;this._data=void 0;this._data=[k,_arg_2,_arg_3,_arg_4,_arg_5,_arg_6,_arg_7,_arg_8,_arg_9];}static getXRotationMatrix(k){const _local_2=k*Math.PI/180;const _local_3=Math.cos(_local_2);const _local_4=Math.sin(_local_2);return new Matrix4x4(1,0,0,0,_local_3,-_local_4,0,_local_4,_local_3);}static getYRotationMatrix(k){const _local_2=k*Math.PI/180;const _local_3=Math.cos(_local_2);const _local_4=Math.sin(_local_2);return new Matrix4x4(_local_3,0,_local_4,0,1,0,-_local_4,0,_local_3);}static getZRotationMatrix(k){const _local_2=k*Math.PI/180;const _local_3=Math.cos(_local_2);const _local_4=Math.sin(_local_2);return new Matrix4x4(_local_3,-_local_4,0,_local_4,_local_3,0,0,0,1);}identity(){this._data=[1,0,0,0,1,0,0,0,1];return this;}vectorMultiplication(k){const _local_2=k.x*this._data[0]+k.y*this._data[3]+k.z*this._data[6];const _local_3=k.x*this._data[1]+k.y*this._data[4]+k.z*this._data[7];const _local_4=k.x*this._data[2]+k.y*this._data[5]+k.z*this._data[8];return new Vector3D(_local_2,_local_3,_local_4);}multiply(k){const _local_2=this._data[0]*k.data[0]+this._data[1]*k.data[3]+this._data[2]*k.data[6];const _local_3=this._data[0]*k.data[1]+this._data[1]*k.data[4]+this._data[2]*k.data[7];const _local_4=this._data[0]*k.data[2]+this._data[1]*k.data[5]+this._data[2]*k.data[8];const _local_5=this._data[3]*k.data[0]+this._data[4]*k.data[3]+this._data[5]*k.data[6];const _local_6=this._data[3]*k.data[1]+this._data[4]*k.data[4]+this._data[5]*k.data[7];const _local_7=this._data[3]*k.data[2]+this._data[4]*k.data[5]+this._data[5]*k.data[8];const _local_8=this._data[6]*k.data[0]+this._data[7]*k.data[3]+this._data[8]*k.data[6];const _local_9=this._data[6]*k.data[1]+this._data[7]*k.data[4]+this._data[8]*k.data[7];const _local_10=this._data[6]*k.data[2]+this._data[7]*k.data[5]+this._data[8]*k.data[8];return new Matrix4x4(_local_2,_local_3,_local_4,_local_5,_local_6,_local_7,_local_8,_local_9,_local_10);}scalarMultiply(k){let index=0;while(index<this._data.length){this._data[index]=this._data[index]*k;index++;}}rotateX(k){const _local_2=k*Math.PI/180;const _local_3=Math.cos(_local_2);const _local_4=Math.sin(_local_2);const _local_5=new Matrix4x4(1,0,0,0,_local_3,-_local_4,0,_local_4,_local_3);return _local_5.multiply(this);}rotateY(k){const _local_2=k*Math.PI/180;const _local_3=Math.cos(_local_2);const _local_4=Math.sin(_local_2);const _local_5=new Matrix4x4(_local_3,0,_local_4,0,1,0,-_local_4,0,_local_3);return _local_5.multiply(this);}rotateZ(k){const _local_2=k*Math.PI/180;const _local_3=Math.cos(_local_2);const _local_4=Math.sin(_local_2);const _local_5=new Matrix4x4(_local_3,-_local_4,0,_local_4,_local_3,0,0,0,1);return _local_5.multiply(this);}skew(){}transpose(){return new Matrix4x4(this._data[0],this._data[3],this._data[6],this._data[1],this._data[4],this._data[7],this._data[2],this._data[5],this._data[8]);}equals(k){return false;}get data(){return this._data;}}Matrix4x4.IDENTITY=new Matrix4x4(1,0,0,0,1,0,0,0,1);Matrix4x4.TOLERANS=1E-18;","map":null,"metadata":{},"sourceType":"module"}