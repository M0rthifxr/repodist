{"ast":null,"code":"import{useCallback,useState}from'react';import{RoomWidgetRoomObjectMessage,RoomWidgetUpdateInfostandFurniEvent,RoomWidgetUpdateInfostandPetEvent,RoomWidgetUpdateInfostandRentableBotEvent,RoomWidgetUpdateInfostandUserEvent,RoomWidgetUpdateRoomObjectEvent}from'../../../../api';import{Column}from'../../../../common';import{UseEventDispatcherHook}from'../../../../hooks';import{useRoomContext}from'../../RoomContext';import{InfoStandWidgetBotView}from'./InfoStandWidgetBotView';import{InfoStandWidgetFurniView}from'./InfoStandWidgetFurniView';import{InfoStandWidgetPetView}from'./InfoStandWidgetPetView';import{InfoStandWidgetRentableBotView}from'./InfoStandWidgetRentableBotView';import{InfoStandWidgetUserView}from'./InfoStandWidgetUserView';import{jsx as _jsx}from\"react/jsx-runtime\";export const InfoStandWidgetView=props=>{const{eventDispatcher=null,widgetHandler=null}=useRoomContext();const[infoStandEvent,setInfoStandEvent]=useState(null);const closeInfostand=useCallback(()=>{setInfoStandEvent(null);},[]);const onRoomWidgetUpdateEvent=useCallback(event=>{switch(event.type){case RoomWidgetUpdateRoomObjectEvent.OBJECT_SELECTED:{const roomObjectEvent=event;widgetHandler.processWidgetMessage(new RoomWidgetRoomObjectMessage(RoomWidgetRoomObjectMessage.GET_OBJECT_INFO,roomObjectEvent.id,roomObjectEvent.category));return;}case RoomWidgetUpdateRoomObjectEvent.OBJECT_DESELECTED:{const roomObjectEvent=event;closeInfostand();return;}case RoomWidgetUpdateRoomObjectEvent.FURNI_REMOVED:case RoomWidgetUpdateRoomObjectEvent.USER_REMOVED:{const roomObjectEvent=event;setInfoStandEvent(prevValue=>{switch(event.type){case RoomWidgetUpdateRoomObjectEvent.FURNI_REMOVED:if(prevValue instanceof RoomWidgetUpdateInfostandFurniEvent){if(prevValue.id===roomObjectEvent.id)return null;}break;case RoomWidgetUpdateRoomObjectEvent.USER_REMOVED:if(prevValue instanceof RoomWidgetUpdateInfostandUserEvent||prevValue instanceof RoomWidgetUpdateInfostandRentableBotEvent){if(prevValue.roomIndex===roomObjectEvent.id)return null;}else if(prevValue instanceof RoomWidgetUpdateInfostandPetEvent){if(prevValue.roomIndex===roomObjectEvent.id)return null;}break;}return prevValue;});return;}case RoomWidgetUpdateInfostandFurniEvent.FURNI:case RoomWidgetUpdateInfostandUserEvent.OWN_USER:case RoomWidgetUpdateInfostandUserEvent.PEER:case RoomWidgetUpdateInfostandUserEvent.BOT:case RoomWidgetUpdateInfostandRentableBotEvent.RENTABLE_BOT:case RoomWidgetUpdateInfostandPetEvent.PET_INFO:{setInfoStandEvent(event);return;}default:console.log(event);return;}},[widgetHandler,closeInfostand]);UseEventDispatcherHook(RoomWidgetUpdateRoomObjectEvent.OBJECT_SELECTED,eventDispatcher,onRoomWidgetUpdateEvent);UseEventDispatcherHook(RoomWidgetUpdateRoomObjectEvent.OBJECT_DESELECTED,eventDispatcher,onRoomWidgetUpdateEvent);UseEventDispatcherHook(RoomWidgetUpdateRoomObjectEvent.USER_REMOVED,eventDispatcher,onRoomWidgetUpdateEvent);UseEventDispatcherHook(RoomWidgetUpdateRoomObjectEvent.FURNI_REMOVED,eventDispatcher,onRoomWidgetUpdateEvent);UseEventDispatcherHook(RoomWidgetUpdateInfostandFurniEvent.FURNI,eventDispatcher,onRoomWidgetUpdateEvent);UseEventDispatcherHook(RoomWidgetUpdateInfostandUserEvent.OWN_USER,eventDispatcher,onRoomWidgetUpdateEvent);UseEventDispatcherHook(RoomWidgetUpdateInfostandUserEvent.PEER,eventDispatcher,onRoomWidgetUpdateEvent);UseEventDispatcherHook(RoomWidgetUpdateInfostandUserEvent.BOT,eventDispatcher,onRoomWidgetUpdateEvent);UseEventDispatcherHook(RoomWidgetUpdateInfostandRentableBotEvent.RENTABLE_BOT,eventDispatcher,onRoomWidgetUpdateEvent);UseEventDispatcherHook(RoomWidgetUpdateInfostandPetEvent.PET_INFO,eventDispatcher,onRoomWidgetUpdateEvent);UseEventDispatcherHook(RoomWidgetUpdateInfostandPetEvent.PET_INFO,eventDispatcher,onRoomWidgetUpdateEvent);const getInfostandView=useCallback(()=>{if(!infoStandEvent)return null;switch(infoStandEvent.type){case RoomWidgetUpdateInfostandFurniEvent.FURNI:return/*#__PURE__*/_jsx(InfoStandWidgetFurniView,{furniData:infoStandEvent,close:closeInfostand});case RoomWidgetUpdateInfostandUserEvent.OWN_USER:case RoomWidgetUpdateInfostandUserEvent.PEER:return/*#__PURE__*/_jsx(InfoStandWidgetUserView,{userData:infoStandEvent,setUserData:setInfoStandEvent,close:closeInfostand});case RoomWidgetUpdateInfostandUserEvent.BOT:return/*#__PURE__*/_jsx(InfoStandWidgetBotView,{botData:infoStandEvent,close:closeInfostand});case RoomWidgetUpdateInfostandRentableBotEvent.RENTABLE_BOT:return/*#__PURE__*/_jsx(InfoStandWidgetRentableBotView,{rentableBotData:infoStandEvent,close:closeInfostand});case RoomWidgetUpdateInfostandPetEvent.PET_INFO:return/*#__PURE__*/_jsx(InfoStandWidgetPetView,{petData:infoStandEvent,close:closeInfostand});}return null;},[infoStandEvent,closeInfostand]);if(!infoStandEvent)return null;return/*#__PURE__*/_jsx(Column,{alignItems:\"end\",className:\"nitro-infostand-container\",children:getInfostandView()});};","map":null,"metadata":{},"sourceType":"module"}