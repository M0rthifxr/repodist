{"ast":null,"code":"import{ChatlineData}from'./ChatlineData';export class ChatRecordData{constructor(wrapper){this._recordType=void 0;this._context=void 0;this._chatlog=void 0;this._context=new Map();this._chatlog=[];this._recordType=wrapper.readByte();const contextCount=wrapper.readShort();for(let i=0;i<contextCount;i++){const key=wrapper.readString();const type=wrapper.readByte();switch(type){case 0:this._context.set(key,wrapper.readBoolean());break;case 1:this._context.set(key,wrapper.readInt());break;case 2:this._context.set(key,wrapper.readString());break;default:throw new Error('Unknown data type '+type);}}const chatCount=wrapper.readShort();for(let i=0;i<chatCount;i++){const timestamp=wrapper.readString();const habboId=wrapper.readInt();const username=wrapper.readString();const message=wrapper.readString();const hasHighlighting=wrapper.readBoolean();this._chatlog.push(new ChatlineData(timestamp,habboId,username,message,hasHighlighting));}}get recordType(){return this._recordType;}get context(){return this._context;}get chatlog(){return this._chatlog;}get roomId(){return this.getInt('roomId');}get roomName(){return this._context.get('roomName');}get groupId(){return this.getInt('groupId');}get threadId(){return this.getInt('threadId');}get messageId(){return this.getInt('messageId');}getInt(k){const value=this._context.get(k);if(!value){return 0;}return value;}}ChatRecordData.TYPE_SIMPLE=0;ChatRecordData.TYPE_ROOM_CHAT=1;ChatRecordData.TYPE_IM_SESSION=2;ChatRecordData.TYPE_DISCUSSION_THREAD=3;ChatRecordData.TYPE_DISCUSSION_MESSAGE=4;ChatRecordData.TYPE_SELFIE=5;ChatRecordData.TYPE_PHOTO=6;","map":null,"metadata":{},"sourceType":"module"}