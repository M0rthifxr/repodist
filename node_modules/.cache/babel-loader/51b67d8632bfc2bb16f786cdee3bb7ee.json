{"ast":null,"code":"import{PlaneMaterialCellMatrix}from'./PlaneMaterialCellMatrix';export class PlaneMaterial{constructor(){this._planeMaterialItems=void 0;this._isCached=void 0;this._planeMaterialItems=[];this._isCached=false;}dispose(){if(this._planeMaterialItems&&this._planeMaterialItems.length){for(const item of this._planeMaterialItems){if(!item)continue;item.dispose();}this._planeMaterialItems=null;}this._isCached=false;}clearCache(){if(!this._isCached)return;if(this._planeMaterialItems&&this._planeMaterialItems.length){for(const item of this._planeMaterialItems){if(!item)continue;item.clearCache();}}this._isCached=false;}addMaterialCellMatrix(totalColumns,repeatMode,align){let normalMinX=arguments.length>3&&arguments[3]!==undefined?arguments[3]:-1;let normalMaxX=arguments.length>4&&arguments[4]!==undefined?arguments[4]:1;let normalMinY=arguments.length>5&&arguments[5]!==undefined?arguments[5]:-1;let normalMaxY=arguments.length>6&&arguments[6]!==undefined?arguments[6]:1;const cellMatrix=new PlaneMaterialCellMatrix(totalColumns,repeatMode,align,normalMinX,normalMaxX,normalMinY,normalMaxY);this._planeMaterialItems.push(cellMatrix);return cellMatrix;}getMaterialCellMatrix(normal){if(!normal)return null;if(this._planeMaterialItems&&this._planeMaterialItems.length){for(const item of this._planeMaterialItems){if(!item)continue;if(normal.x>=item.normalMinX&&normal.x<=item.normalMaxX&&normal.y>=item.normalMinY&&normal.y<=item.normalMaxY)return item;}}return null;}render(canvas,width,height,normal,useTexture,offsetX,offsetY,topAlign){if(width<1)width=1;if(height<1)height=1;const cellMatrix=this.getMaterialCellMatrix(normal);if(!cellMatrix)return null;this._isCached=true;return cellMatrix.render(canvas,width,height,normal,useTexture,offsetX,offsetY,topAlign);}}PlaneMaterial.MIN_NORMAL_COORDINATE_VALUE=-1;PlaneMaterial.MAX_NORMAL_COORDINATE_VALUE=1;","map":null,"metadata":{},"sourceType":"module"}