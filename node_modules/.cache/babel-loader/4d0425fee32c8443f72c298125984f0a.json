{"ast":null,"code":"import{PollChoice}from'./PollChoice';import{PollQuestion}from'./PollQuestion';export class PollContentsParser{constructor(){this._id=-1;this._startMessage='';this._endMessage='';this._numQuestions=0;this._questionArray=[];this._npsPoll=false;}flush(){this._id=-1;this._startMessage='';this._endMessage='';this._numQuestions=0;this._questionArray=[];return true;}parse(wrapper){this._id=wrapper.readInt();this._startMessage=wrapper.readString();this._endMessage=wrapper.readString();this._numQuestions=wrapper.readInt();for(let i=0;i<this._numQuestions;i++){const question=this.parsePollQuestion(wrapper);const childrenCount=wrapper.readInt();for(let j=0;j<childrenCount;j++){question.children.push(this.parsePollQuestion(wrapper));}this._questionArray.push(question);}this._npsPoll=wrapper.readBoolean();return true;}parsePollQuestion(k){const pollQuestion=new PollQuestion();pollQuestion.questionId=k.readInt();pollQuestion.sortOrder=k.readInt();pollQuestion.questionType=k.readInt();pollQuestion.questionText=k.readString();pollQuestion.questionCategory=k.readInt();pollQuestion.questionAnswerType=k.readInt();pollQuestion.questionAnswerCount=k.readInt();if(pollQuestion.questionType==1||pollQuestion.questionType==2){for(let i=0;i<pollQuestion.questionAnswerCount;i++){pollQuestion.questionChoices.push(new PollChoice(k.readString(),k.readString(),k.readInt()));}}return pollQuestion;}get id(){return this._id;}get startMessage(){return this._startMessage;}get endMessage(){return this._endMessage;}get numQuestions(){return this._numQuestions;}get questionArray(){return this._questionArray;}get npsPoll(){return this._npsPoll;}}","map":null,"metadata":{},"sourceType":"module"}