{"ast":null,"code":"import{RoomEngineUseProductEvent,RoomObjectCategory,RoomObjectType,RoomObjectVariable,RoomSessionDanceEvent,RoomSessionPetStatusUpdateEvent,RoomSessionUserDataUpdateEvent,RoomWidgetEnum,SetRelationshipStatusComposer}from'@nitrots/nitro-renderer';import{SendMessageComposer}from'../../..';import{GetRoomEngine,GetSessionDataManager,IsOwnerOfFurniture}from'../../../..';import{MessengerFriend}from'../../../../friends/MessengerFriend';import{FurniCategory}from'../../../../inventory/FurniCategory';import{RoomWidgetAvatarInfoEvent,RoomWidgetUpdateDanceStatusEvent,RoomWidgetUpdateUserDataEvent,RoomWidgetUseProductBubbleEvent,UseProductItem}from'../events';import{RoomWidgetAvatarExpressionMessage,RoomWidgetChangePostureMessage,RoomWidgetDanceMessage,RoomWidgetRoomObjectMessage,RoomWidgetUseProductMessage,RoomWidgetUserActionMessage}from'../messages';import{RoomWidgetHandler}from'./RoomWidgetHandler';export class RoomWidgetAvatarInfoHandler extends RoomWidgetHandler{processEvent(event){switch(event.type){case RoomSessionUserDataUpdateEvent.USER_DATA_UPDATED:this.container.eventDispatcher.dispatchEvent(new RoomWidgetUpdateUserDataEvent());return;case RoomSessionDanceEvent.RSDE_DANCE:const danceEvent=event;let isDancing=false;const userData=this.container.roomSession.userDataManager.getUserData(GetSessionDataManager().userId);if(userData&&userData.roomIndex===danceEvent.roomIndex)isDancing=danceEvent.danceId!==0;this.container.eventDispatcher.dispatchEvent(new RoomWidgetUpdateDanceStatusEvent(isDancing));return;case RoomEngineUseProductEvent.USE_PRODUCT_FROM_INVENTORY:return;case RoomEngineUseProductEvent.USE_PRODUCT_FROM_ROOM:this.processUsableRoomObject(event.objectId);return;case RoomSessionPetStatusUpdateEvent.PET_STATUS_UPDATE:this.processRoomSessionPetStatusUpdateEvent(event);return;}}processWidgetMessage(message){let userId=0;if(message instanceof RoomWidgetUserActionMessage)userId=message.userId;switch(message.type){case RoomWidgetRoomObjectMessage.GET_OWN_CHARACTER_INFO:this.processOwnCharacterInfo();break;case RoomWidgetUserActionMessage.START_NAME_CHANGE:// habbo help - start name change\nbreak;case RoomWidgetUserActionMessage.REQUEST_PET_UPDATE:break;case RoomWidgetUseProductMessage.PET_PRODUCT:{const productMessage=message;this.container.roomSession.usePetProduct(productMessage.objectId,productMessage.petId);break;}case RoomWidgetUserActionMessage.HARVEST_PET:this.container.roomSession.harvestPet(userId);break;case RoomWidgetUserActionMessage.COMPOST_PLANT:this.container.roomSession.compostPlant(userId);break;case RoomWidgetDanceMessage.DANCE:{const danceMessage=message;this.container.roomSession.sendDanceMessage(danceMessage.style);break;}case RoomWidgetAvatarExpressionMessage.AVATAR_EXPRESSION:{const expressionMessage=message;this.container.roomSession.sendExpressionMessage(expressionMessage.animation.ordinal);break;}case RoomWidgetChangePostureMessage.CHANGE_POSTURE:{const postureMessage=message;this.container.roomSession.sendPostureMessage(postureMessage.posture);break;}case RoomWidgetUserActionMessage.RELATIONSHIP_NONE:{SendMessageComposer(new SetRelationshipStatusComposer(userId,MessengerFriend.RELATIONSHIP_NONE));break;}case RoomWidgetUserActionMessage.RELATIONSHIP_HEART:{SendMessageComposer(new SetRelationshipStatusComposer(userId,MessengerFriend.RELATIONSHIP_HEART));break;}case RoomWidgetUserActionMessage.RELATIONSHIP_SMILE:{SendMessageComposer(new SetRelationshipStatusComposer(userId,MessengerFriend.RELATIONSHIP_SMILE));break;}case RoomWidgetUserActionMessage.RELATIONSHIP_BOBBA:{SendMessageComposer(new SetRelationshipStatusComposer(userId,MessengerFriend.RELATIONSHIP_BOBBA));break;}}return null;}processOwnCharacterInfo(){const userId=GetSessionDataManager().userId;const userName=GetSessionDataManager().userName;const allowNameChange=GetSessionDataManager().canChangeName;const userData=this.container.roomSession.userDataManager.getUserData(userId);if(!userData)return;this.container.eventDispatcher.dispatchEvent(new RoomWidgetAvatarInfoEvent(userId,userName,userData.type,userData.roomIndex,allowNameChange));}processUsableRoomObject(objectId){const roomId=this.container.roomSession.roomId;const roomObject=GetRoomEngine().getRoomObject(roomId,objectId,RoomObjectCategory.FLOOR);if(!roomObject||!IsOwnerOfFurniture(roomObject))return;const ownerId=roomObject.model.getValue(RoomObjectVariable.FURNITURE_OWNER_ID);const typeId=roomObject.model.getValue(RoomObjectVariable.FURNITURE_TYPE_ID);const furniData=GetSessionDataManager().getFloorItemData(typeId);const parts=furniData.customParams.split(' ');const part=parts.length?parseInt(parts[0]):-1;if(part===-1)return;this.processUseableProduct(roomId,objectId,part,furniData.specialType,ownerId);}processUseableProduct(roomId,objectId,part,specialType,ownerId){let arg6=arguments.length>5&&arguments[5]!==undefined?arguments[5]:-1;const useProductBubbles=[];const roomObjects=GetRoomEngine().getRoomObjects(roomId,RoomObjectCategory.UNIT);for(const roomObject of roomObjects){const userData=this.container.roomSession.userDataManager.getUserDataByIndex(roomObject.id);let replace=false;if(!userData||userData.type!==RoomObjectType.PET){}else{if(userData.ownerId===ownerId){if(userData.hasSaddle&&specialType===FurniCategory.PET_SADDLE)replace=true;const figureParts=userData.figure.split(' ');const figurePart=figureParts.length?parseInt(figureParts[0]):-1;if(figurePart===part){if(specialType===FurniCategory.MONSTERPLANT_REVIVAL){if(!userData.canRevive)continue;}if(specialType===FurniCategory.MONSTERPLANT_REBREED){if(userData.petLevel<7||userData.canRevive||userData.canBreed)continue;}if(specialType===FurniCategory.MONSTERPLANT_FERTILIZE){if(userData.petLevel>=7||userData.canRevive)continue;}useProductBubbles.push(new UseProductItem(userData.roomIndex,RoomObjectCategory.UNIT,userData.name,objectId,roomObject.id,arg6,replace));}}}}if(useProductBubbles.length)this.container.eventDispatcher.dispatchEvent(new RoomWidgetUseProductBubbleEvent(RoomWidgetUseProductBubbleEvent.USE_PRODUCT_BUBBLES,useProductBubbles));}processRoomSessionPetStatusUpdateEvent(event){}get type(){return RoomWidgetEnum.AVATAR_INFO;}get eventTypes(){return[RoomSessionUserDataUpdateEvent.USER_DATA_UPDATED,RoomSessionDanceEvent.RSDE_DANCE,RoomEngineUseProductEvent.USE_PRODUCT_FROM_INVENTORY,RoomEngineUseProductEvent.USE_PRODUCT_FROM_ROOM,RoomSessionPetStatusUpdateEvent.PET_STATUS_UPDATE];}// UserNameUpdateEvent.UNUE_NAME_UPDATED\n// RoomSessionNestBreedingSuccessEvent.RSPFUE_NEST_BREEDING_SUCCESS\n// RoomSessionPetLevelUpdateEvent.RSPLUE_PET_LEVEL_UPDATE\nget messageTypes(){return[RoomWidgetRoomObjectMessage.GET_OWN_CHARACTER_INFO,RoomWidgetUserActionMessage.START_NAME_CHANGE,RoomWidgetUserActionMessage.REQUEST_PET_UPDATE,RoomWidgetUseProductMessage.PET_PRODUCT,RoomWidgetUserActionMessage.REQUEST_BREED_PET,RoomWidgetUserActionMessage.HARVEST_PET,RoomWidgetUserActionMessage.REVIVE_PET,RoomWidgetUserActionMessage.COMPOST_PLANT,RoomWidgetDanceMessage.DANCE,RoomWidgetAvatarExpressionMessage.AVATAR_EXPRESSION,RoomWidgetChangePostureMessage.CHANGE_POSTURE,RoomWidgetUserActionMessage.RELATIONSHIP_NONE,RoomWidgetUserActionMessage.RELATIONSHIP_HEART,RoomWidgetUserActionMessage.RELATIONSHIP_SMILE,RoomWidgetUserActionMessage.RELATIONSHIP_BOBBA];}}","map":null,"metadata":{},"sourceType":"module"}