{"ast":null,"code":"import{Vector3d}from'../../../../../room/utils/Vector3d';import{RoomObjectFloorHoleEvent}from'../../../events/RoomObjectFloorHoleEvent';import{ObjectDataUpdateMessage}from'../../../messages/ObjectDataUpdateMessage';import{RoomObjectVariable}from'../../RoomObjectVariable';import{FurnitureMultiStateLogic}from'./FurnitureMultiStateLogic';export class FurnitureFloorHoleLogic extends FurnitureMultiStateLogic{constructor(){super();this._currentState=void 0;this._currentLocation=void 0;this._currentState=-1;this._currentLocation=null;}getEventTypes(){const types=[RoomObjectFloorHoleEvent.ADD_HOLE,RoomObjectFloorHoleEvent.REMOVE_HOLE];return this.mergeTypes(super.getEventTypes(),types);}onDispose(){if(this._currentState===FurnitureFloorHoleLogic.STATE_HOLE){this.eventDispatcher.dispatchEvent(new RoomObjectFloorHoleEvent(RoomObjectFloorHoleEvent.REMOVE_HOLE,this.object));}super.onDispose();}update(time){super.update(time);this.handleAutomaticStateUpdate();}processUpdateMessage(message){super.processUpdateMessage(message);if(!this.object)return;if(message instanceof ObjectDataUpdateMessage){this.handleStateUpdate(this.object.getState(0));}const location=this.object.getLocation();if(!this._currentLocation){this._currentLocation=new Vector3d();}else{if(location.x!==this._currentLocation.x||location.y!==this._currentLocation.y){if(this._currentState===FurnitureFloorHoleLogic.STATE_HOLE){if(this.eventDispatcher)this.eventDispatcher.dispatchEvent(new RoomObjectFloorHoleEvent(RoomObjectFloorHoleEvent.ADD_HOLE,this.object));}}}this._currentLocation.assign(location);}handleStateUpdate(state){if(state===this._currentState)return;if(this.eventDispatcher){if(state===FurnitureFloorHoleLogic.STATE_HOLE){this.eventDispatcher.dispatchEvent(new RoomObjectFloorHoleEvent(RoomObjectFloorHoleEvent.ADD_HOLE,this.object));}else if(this._currentState===FurnitureFloorHoleLogic.STATE_HOLE){this.eventDispatcher.dispatchEvent(new RoomObjectFloorHoleEvent(RoomObjectFloorHoleEvent.REMOVE_HOLE,this.object));}}this._currentState=state;}handleAutomaticStateUpdate(){if(!this.object)return;const model=this.object.model;if(!model)return;const stateIndex=model.getValue(RoomObjectVariable.FURNITURE_AUTOMATIC_STATE_INDEX);if(!isNaN(stateIndex))this.handleStateUpdate(stateIndex%2);}}FurnitureFloorHoleLogic.STATE_HOLE=0;","map":null,"metadata":{},"sourceType":"module"}