{"ast":null,"code":"import{NitroManager}from'../../core/common/NitroManager';import{RoomEngineEvent}from'../room/events/RoomEngineEvent';import{RoomSessionEvent}from'./events/RoomSessionEvent';import{GenericErrorHandler}from'./handler/GenericErrorHandler';import{PollHandler}from'./handler/PollHandler';import{RoomChatHandler}from'./handler/RoomChatHandler';import{RoomDataHandler}from'./handler/RoomDataHandler';import{RoomDimmerPresetsHandler}from'./handler/RoomDimmerPresetsHandler';import{RoomPermissionsHandler}from'./handler/RoomPermissionsHandler';import{RoomPresentHandler}from'./handler/RoomPresentHandler';import{RoomSessionHandler}from'./handler/RoomSessionHandler';import{RoomUsersHandler}from'./handler/RoomUsersHandler';import{WordQuizHandler}from'./handler/WordQuizHandler';import{RoomSession}from'./RoomSession';export class RoomSessionManager extends NitroManager{constructor(communication,roomEngine){super();this._communication=void 0;this._roomEngine=void 0;this._handlers=void 0;this._sessions=void 0;this._pendingSession=void 0;this._sessionStarting=void 0;this._viewerSession=void 0;this._communication=communication;this._roomEngine=roomEngine;this._handlers=[];this._sessions=new Map();this._pendingSession=null;this._sessionStarting=false;this._viewerSession=null;this.onRoomEngineEvent=this.onRoomEngineEvent.bind(this);}onInit(){this.createHandlers();this.processPendingSession();this._roomEngine.events.addEventListener(RoomEngineEvent.ENGINE_INITIALIZED,this.onRoomEngineEvent);}onDispose(){this._roomEngine.events.removeEventListener(RoomEngineEvent.ENGINE_INITIALIZED,this.onRoomEngineEvent);super.onDispose();}createHandlers(){const connection=this._communication&&this._communication.connection;if(!connection)return;this._handlers.push(new RoomChatHandler(connection,this),new RoomDataHandler(connection,this),new RoomDimmerPresetsHandler(connection,this),new RoomPermissionsHandler(connection,this),new RoomSessionHandler(connection,this),new RoomUsersHandler(connection,this),new RoomPresentHandler(connection,this),new GenericErrorHandler(connection,this),new WordQuizHandler(connection,this),new PollHandler(connection,this));}setHandlers(session){if(!this._handlers||!this._handlers.length)return;for(const handler of this._handlers){if(!handler)continue;handler.setRoomId(session.roomId);}}onRoomEngineEvent(event){this.processPendingSession();}processPendingSession(){if(!this._pendingSession||!this._roomEngine.ready)return;this.addSession(this._pendingSession);this._pendingSession=null;}getSession(id){const existing=this._sessions.get(this.getRoomId(id));if(!existing)return null;return existing;}createSession(roomId){let password=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;const session=new RoomSession();session.roomId=roomId;session.password=password;return this.addSession(session);}addSession(roomSession){if(!this._roomEngine.ready){this._pendingSession=roomSession;return false;}this._sessionStarting=true;if(this._sessions.get(this.getRoomId(roomSession.roomId))){this.removeSession(roomSession.roomId,false);}roomSession.setConnection(this._communication.connection);this._sessions.set(this.getRoomId(roomSession.roomId),roomSession);this.events.dispatchEvent(new RoomSessionEvent(RoomSessionEvent.CREATED,roomSession));this._viewerSession=roomSession;this.startSession(this._viewerSession);return true;}startSession(session){if(session.state===RoomSessionEvent.STARTED)return false;this._sessionStarting=false;if(!session.start()){this.removeSession(session.roomId);return false;}this.events.dispatchEvent(new RoomSessionEvent(RoomSessionEvent.STARTED,session));this.setHandlers(session);return true;}removeSession(id){let openLandingView=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;const session=this.getSession(id);if(!session)return;this._sessions.delete(this.getRoomId(id));this.events.dispatchEvent(new RoomSessionEvent(RoomSessionEvent.ENDED,session,openLandingView));session.dispose();}sessionUpdate(id,type){const session=this.getSession(id);if(!session)return;switch(type){case RoomSessionHandler.RS_CONNECTED:return;case RoomSessionHandler.RS_READY:return;case RoomSessionHandler.RS_DISCONNECTED:this.removeSession(id);return;}}sessionReinitialize(fromRoomId,toRoomId){const existing=this.getSession(fromRoomId);if(!existing)return;this._sessions.delete(this.getRoomId(fromRoomId));existing.reset(toRoomId);this._sessions.set(this.getRoomId(toRoomId),existing);this.setHandlers(existing);}getRoomId(id){return'hard_coded_room_id';}get communication(){return this._communication;}get roomEngine(){return this._roomEngine;}get viewerSession(){return this._viewerSession;}}","map":null,"metadata":{},"sourceType":"module"}