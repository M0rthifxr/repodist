{"ast":null,"code":"import{RoomObjectWidgetRequestEvent}from'../../../events/RoomObjectWidgetRequestEvent';import{ObjectDataUpdateMessage}from'../../../messages/ObjectDataUpdateMessage';import{MapDataType}from'../../data/type/MapDataType';import{RoomObjectVariable}from'../../RoomObjectVariable';import{FurnitureLogic}from'./FurnitureLogic';export class FurnitureMannequinLogic extends FurnitureLogic{getEventTypes(){const types=[RoomObjectWidgetRequestEvent.MANNEQUIN];return this.mergeTypes(super.getEventTypes(),types);}processUpdateMessage(message){super.processUpdateMessage(message);if(message instanceof ObjectDataUpdateMessage){message.data.writeRoomObjectModel(this.object.model);this.processObjectData();}}processObjectData(){if(!this.object||!this.object.model)return;const data=new MapDataType();data.initializeFromRoomObjectModel(this.object.model);this.object.model.setValue(RoomObjectVariable.FURNITURE_MANNEQUIN_GENDER,data.getValue(FurnitureMannequinLogic.GENDER));this.object.model.setValue(RoomObjectVariable.FURNITURE_MANNEQUIN_FIGURE,data.getValue(FurnitureMannequinLogic.FIGURE));this.object.model.setValue(RoomObjectVariable.FURNITURE_MANNEQUIN_NAME,data.getValue(FurnitureMannequinLogic.OUTFIT_NAME));}useObject(){if(!this.object||!this.eventDispatcher)return;this.eventDispatcher.dispatchEvent(new RoomObjectWidgetRequestEvent(RoomObjectWidgetRequestEvent.MANNEQUIN,this.object));}}FurnitureMannequinLogic.GENDER='GENDER';FurnitureMannequinLogic.FIGURE='FIGURE';FurnitureMannequinLogic.OUTFIT_NAME='OUTFIT_NAME';","map":null,"metadata":{},"sourceType":"module"}