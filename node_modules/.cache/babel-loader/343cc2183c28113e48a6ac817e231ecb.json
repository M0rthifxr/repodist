{"ast":null,"code":"import{MouseEventType}from'../../../../ui/MouseEventType';import{RoomObjectFurnitureActionEvent}from'../../../events/RoomObjectFurnitureActionEvent';import{FurnitureLogic}from'./FurnitureLogic';export class FurnitureDiceLogic extends FurnitureLogic{constructor(){super();this._noTags=void 0;this._noTagsLastStateActivate=void 0;this._noTags=false;this._noTagsLastStateActivate=false;}getEventTypes(){const types=[RoomObjectFurnitureActionEvent.DICE_ACTIVATE,RoomObjectFurnitureActionEvent.DICE_OFF];return this.mergeTypes(super.getEventTypes(),types);}mouseEvent(event,geometry){if(!event||!geometry||!this.object)return;let objectEvent=null;switch(event.type){case MouseEventType.DOUBLE_CLICK:if(this._noTags){if(!this._noTagsLastStateActivate||this.object.getState(0)===0||this.object.getState(0)===100){objectEvent=new RoomObjectFurnitureActionEvent(RoomObjectFurnitureActionEvent.DICE_ACTIVATE,this.object);this._noTagsLastStateActivate=true;}else{objectEvent=new RoomObjectFurnitureActionEvent(RoomObjectFurnitureActionEvent.DICE_OFF,this.object);this._noTagsLastStateActivate=false;}}else{if(event.spriteTag==='activate'||this.object.getState(0)===0||this.object.getState(0)===100){objectEvent=new RoomObjectFurnitureActionEvent(RoomObjectFurnitureActionEvent.DICE_ACTIVATE,this.object);}else if(event.spriteTag==='deactivate'){objectEvent=new RoomObjectFurnitureActionEvent(RoomObjectFurnitureActionEvent.DICE_OFF,this.object);}}if(objectEvent&&this.eventDispatcher)this.eventDispatcher.dispatchEvent(objectEvent);return;}super.mouseEvent(event,geometry);}}","map":null,"metadata":{},"sourceType":"module"}