{"ast":null,"code":"import{RoomObjectFurnitureActionEvent}from'../../../events/RoomObjectFurnitureActionEvent';import{RoomObjectWidgetRequestEvent}from'../../../events/RoomObjectWidgetRequestEvent';import{ObjectItemDataUpdateMessage}from'../../../messages/ObjectItemDataUpdateMessage';import{RoomObjectVariable}from'../../RoomObjectVariable';import{FurnitureLogic}from'./FurnitureLogic';export class FurnitureStickieLogic extends FurnitureLogic{getEventTypes(){const types=[RoomObjectWidgetRequestEvent.STICKIE,RoomObjectFurnitureActionEvent.STICKIE];return this.mergeTypes(super.getEventTypes(),types);}initialize(asset){super.initialize(asset);this.updateColor();if(this.object)this.object.model.setValue(RoomObjectVariable.FURNITURE_IS_STICKIE,'');}processUpdateMessage(message){super.processUpdateMessage(message);if(message instanceof ObjectItemDataUpdateMessage){this.eventDispatcher&&this.eventDispatcher.dispatchEvent(new RoomObjectWidgetRequestEvent(RoomObjectWidgetRequestEvent.STICKIE,this.object));}this.updateColor();}updateColor(){if(!this.object)return;const furnitureData=this.object.model.getValue(RoomObjectVariable.FURNITURE_DATA);let colorIndex=FurnitureStickieLogic.STICKIE_COLORS.indexOf(furnitureData);if(colorIndex<0)colorIndex=3;this.object.model.setValue(RoomObjectVariable.FURNITURE_COLOR,colorIndex+1);}useObject(){if(!this.object||!this.eventDispatcher)return;this.eventDispatcher.dispatchEvent(new RoomObjectFurnitureActionEvent(RoomObjectFurnitureActionEvent.STICKIE,this.object));}}FurnitureStickieLogic.STICKIE_COLORS=['9CCEFF','FF9CFF','9CFF9C','FFFF33'];","map":null,"metadata":{},"sourceType":"module"}