{"ast":null,"code":"import{GetAvatarPalette,GetAvatarRenderManager,GetAvatarSetType,GetClubMemberLevel,GetConfiguration}from'../../../api';import{AvatarEditorGridColorItem}from'./AvatarEditorGridColorItem';import{AvatarEditorGridPartItem}from'./AvatarEditorGridPartItem';import{CategoryData}from'./CategoryData';import{FigureData}from'./FigureData';export class AvatarEditorUtilities{static getGender(gender){switch(gender){case FigureData.MALE:case'm':case'M':gender=FigureData.MALE;break;case FigureData.FEMALE:case'f':case'F':gender=FigureData.FEMALE;break;default:gender=FigureData.MALE;}return gender;}static hasFigureSetId(setId){return this.FIGURE_SET_IDS.indexOf(setId)>=0;}static createCategory(model,name){if(!model||!name||!this.CURRENT_FIGURE)return null;const partItems=[];const colorItems=[];let i=0;while(i<this.MAX_PALETTES){colorItems.push([]);i++;}const setType=GetAvatarSetType(name);if(!setType)return null;const palette=GetAvatarPalette(setType.paletteID);if(!palette)return null;let colorIds=this.CURRENT_FIGURE.getColorIds(name);if(!colorIds)colorIds=[];const partColors=new Array(colorIds.length);const clubItemsDimmed=this.clubItemsDimmed;const clubMemberLevel=GetClubMemberLevel();for(const partColor of palette.colors.getValues()){if(partColor.isSelectable&&(clubItemsDimmed||clubMemberLevel>=partColor.clubLevel)){let i=0;while(i<this.MAX_PALETTES){const isDisabled=clubMemberLevel<partColor.clubLevel;const colorItem=new AvatarEditorGridColorItem(partColor,isDisabled);colorItems[i].push(colorItem);i++;}if(name!==FigureData.FACE){let i=0;while(i<colorIds.length){if(partColor.id===colorIds[i])partColors[i]=partColor;i++;}}}}let mandatorySetIds=[];if(clubItemsDimmed){mandatorySetIds=GetAvatarRenderManager().getMandatoryAvatarPartSetIds(this.CURRENT_FIGURE.gender,2);}else{mandatorySetIds=GetAvatarRenderManager().getMandatoryAvatarPartSetIds(this.CURRENT_FIGURE.gender,clubMemberLevel);}const isntMandatorySet=mandatorySetIds.indexOf(name)===-1;if(isntMandatorySet){const partItem=new AvatarEditorGridPartItem(null,null,false);partItem.isClear=true;partItems.push(partItem);}const usesColors=name!==FigureData.FACE;const partSets=setType.partSets;const totalPartSets=partSets.length;i=totalPartSets-1;while(i>=0){const partSet=partSets.getWithIndex(i);let isValidGender=false;if(partSet.gender===FigureData.UNISEX){isValidGender=true;}else if(partSet.gender===this.CURRENT_FIGURE.gender){isValidGender=true;}if(partSet.isSelectable&&isValidGender&&(clubItemsDimmed||clubMemberLevel>=partSet.clubLevel)){const isDisabled=clubMemberLevel<partSet.clubLevel;let isValid=true;if(partSet.isSellable)isValid=this.hasFigureSetId(partSet.id);if(isValid)partItems.push(new AvatarEditorGridPartItem(partSet,partColors,usesColors,isDisabled));}i--;}partItems.sort(this.clubItemsFirst?this.clubSorter:this.noobSorter);// if(this._forceSellableClothingVisibility || GetNitroInstance().getConfiguration<boolean>(\"avatareditor.support.sellablefurni\", false))\n// {\n//     _local_31 = (this._manager.windowManager.assets.getAssetByName(\"camera_zoom_in\") as BitmapDataAsset);\n//     _local_32 = (_local_31.content as BitmapData).clone();\n//     _local_33 = (AvatarEditorView._Str_6802.clone() as IWindowContainer);\n//     _local_33.name = AvatarEditorGridView.GET_MORE;\n//     _local_7 = new AvatarEditorGridPartItem(_local_33, k, null, null, false);\n//     _local_7._Str_3093 = _local_32;\n//     _local_3.push(_local_7);\n// }\ni=0;while(i<this.MAX_PALETTES){colorItems[i].sort(this.colorSorter);i++;}return new CategoryData(name,partItems,colorItems);}static clubSorter(a,b){const clubLevelA=!a.partSet?9999999999:a.partSet.clubLevel;const clubLevelB=!b.partSet?9999999999:b.partSet.clubLevel;const isSellableA=!a.partSet?false:a.partSet.isSellable;const isSellableB=!b.partSet?false:b.partSet.isSellable;if(isSellableA&&!isSellableB)return 1;if(isSellableB&&!isSellableA)return-1;if(clubLevelA>clubLevelB)return-1;if(clubLevelA<clubLevelB)return 1;if(a.partSet.id>b.partSet.id)return-1;if(a.partSet.id<b.partSet.id)return 1;return 0;}static colorSorter(a,b){const clubLevelA=!a.partColor?-1:a.partColor.clubLevel;const clubLevelB=!b.partColor?-1:b.partColor.clubLevel;if(clubLevelA<clubLevelB)return-1;if(clubLevelA>clubLevelB)return 1;if(a.partColor.index<b.partColor.index)return-1;if(a.partColor.index>b.partColor.index)return 1;return 0;}static noobSorter(a,b){const clubLevelA=!a.partSet?-1:a.partSet.clubLevel;const clubLevelB=!b.partSet?-1:b.partSet.clubLevel;const isSellableA=!a.partSet?false:a.partSet.isSellable;const isSellableB=!b.partSet?false:b.partSet.isSellable;if(isSellableA&&!isSellableB)return 1;if(isSellableB&&!isSellableA)return-1;if(clubLevelA<clubLevelB)return-1;if(clubLevelA>clubLevelB)return 1;if(a.partSet.id<b.partSet.id)return-1;if(a.partSet.id>b.partSet.id)return 1;return 0;}static avatarSetFirstSelectableColor(name){const setType=GetAvatarSetType(name);if(!setType)return-1;const palette=GetAvatarPalette(setType.paletteID);if(!palette)return-1;for(const color of palette.colors.getValues()){if(!color.isSelectable||GetClubMemberLevel()<color.clubLevel)continue;return color.id;}return-1;}static get clubItemsFirst(){return GetConfiguration('avatareditor.show.clubitems.first',true);}static get clubItemsDimmed(){return GetConfiguration('avatareditor.show.clubitems.dimmed',true);}}AvatarEditorUtilities.MAX_PALETTES=2;AvatarEditorUtilities.CURRENT_FIGURE=null;AvatarEditorUtilities.FIGURE_SET_IDS=[];AvatarEditorUtilities.BOUND_FURNITURE_NAMES=[];","map":null,"metadata":{},"sourceType":"module"}