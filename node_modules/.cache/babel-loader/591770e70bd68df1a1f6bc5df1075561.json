{"ast":null,"code":"import{RemoveFriendComposer,SendRoomInviteComposer}from'@nitrots/nitro-renderer';import{useCallback,useEffect,useMemo,useState}from'react';import{AddEventLinkTracker,LocalizeText,RemoveLinkEventTracker,SendMessageComposer}from'../../../../api';import{Flex,NitroCardAccordionSetView,NitroCardAccordionView,NitroCardContentView,NitroCardHeaderView,NitroCardView}from'../../../../common';import{NitroCardAccordionSetInnerView}from'../../../../common/card/accordion/NitroCardAccordionSetInnerView';import{useFriends}from'../../../../hooks';import{FriendsListGroupView}from'./friends-list-group/FriendsListGroupView';import{FriendsListRequestView}from'./friends-list-request/FriendsListRequestView';import{FriendsRemoveConfirmationView}from'./FriendsListRemoveConfirmationView';import{FriendsRoomInviteView}from'./FriendsListRoomInviteView';import{FriendsSearchView}from'./FriendsListSearchView';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export const FriendsListView=props=>{const[isVisible,setIsVisible]=useState(false);const[selectedFriendsIds,setSelectedFriendsIds]=useState([]);const[showRoomInvite,setShowRoomInvite]=useState(false);const[showRemoveFriendsConfirmation,setShowRemoveFriendsConfirmation]=useState(false);const{onlineFriends=[],offlineFriends=[],requests=[],requestFriend=null}=useFriends();const removeFriendsText=useMemo(()=>{if(!selectedFriendsIds||!selectedFriendsIds.length)return'';const userNames=[];for(const userId of selectedFriendsIds){let existingFriend=onlineFriends.find(f=>f.id===userId);if(!existingFriend)existingFriend=offlineFriends.find(f=>f.id===userId);if(!existingFriend)continue;userNames.push(existingFriend.name);}return LocalizeText('friendlist.removefriendconfirm.userlist',['user_names'],[userNames.join(', ')]);},[offlineFriends,onlineFriends,selectedFriendsIds]);const selectFriend=useCallback(userId=>{if(userId<0)return;setSelectedFriendsIds(prevValue=>{const newValue=[...prevValue];const existingUserIdIndex=newValue.indexOf(userId);if(existingUserIdIndex>-1){newValue.splice(existingUserIdIndex,1);}else{newValue.push(userId);}return newValue;});},[setSelectedFriendsIds]);const sendRoomInvite=message=>{if(selectedFriendsIds.length===0||!message||message.length===0)return;SendMessageComposer(new SendRoomInviteComposer(message,selectedFriendsIds));setShowRoomInvite(false);};const removeSelectedFriends=()=>{if(selectedFriendsIds.length===0)return;setSelectedFriendsIds(prevValue=>{SendMessageComposer(new RemoveFriendComposer(...prevValue));return[];});setShowRemoveFriendsConfirmation(false);};useEffect(()=>{const linkTracker={linkReceived:url=>{const parts=url.split('/');if(parts.length<2)return;switch(parts[1]){case'show':setIsVisible(true);return;case'hide':setIsVisible(false);return;case'toggle':setIsVisible(prevValue=>!prevValue);return;case'request':if(parts.length<4)return;requestFriend(parseInt(parts[2]),parts[3]);}},eventUrlPrefix:'friends/'};AddEventLinkTracker(linkTracker);return()=>RemoveLinkEventTracker(linkTracker);},[requestFriend]);if(!isVisible)return null;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(NitroCardView,{className:\"nitro-friends\",uniqueKey:\"nitro-friends\",theme:\"friendlist\",children:[/*#__PURE__*/_jsx(NitroCardHeaderView,{headerText:LocalizeText('friendlist.friends'),onCloseClick:event=>setIsVisible(false)}),/*#__PURE__*/_jsx(NitroCardContentView,{overflow:\"hidden\",gap:1,className:\"text-black p-0\",children:/*#__PURE__*/_jsxs(NitroCardAccordionView,{fullHeight:true,overflow:\"hidden\",children:[/*#__PURE__*/_jsxs(NitroCardAccordionSetView,{className:\"friend-headers\",headerText:LocalizeText('friendlist.friends'),isExpanded:true,children:[/*#__PURE__*/_jsx(NitroCardAccordionSetInnerView,{headerText:LocalizeText('friendlist.friends')+` (${onlineFriends.length})`,isExpanded:true,children:/*#__PURE__*/_jsx(FriendsListGroupView,{list:onlineFriends,selectedFriendsIds:selectedFriendsIds,selectFriend:selectFriend})}),/*#__PURE__*/_jsx(NitroCardAccordionSetInnerView,{headerText:LocalizeText('friendlist.friends.offlinecaption')+` (${offlineFriends.length})`,isExpanded:true,children:/*#__PURE__*/_jsx(FriendsListGroupView,{list:offlineFriends,selectedFriendsIds:selectedFriendsIds,selectFriend:selectFriend})}),selectedFriendsIds&&selectedFriendsIds.length===0&&/*#__PURE__*/_jsxs(Flex,{gap:1,className:\"friend-active-tab p-1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"friend-follow-icon\"}),/*#__PURE__*/_jsx(\"div\",{className:\"friend-profile-icon\"}),/*#__PURE__*/_jsx(\"div\",{className:\"friend-delete-icon\"})]}),selectedFriendsIds&&selectedFriendsIds.length>0&&/*#__PURE__*/_jsxs(Flex,{gap:1,className:\"friend-active-tab p-1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"friend-follow-icon active\",onClick:()=>setShowRoomInvite(true)}),/*#__PURE__*/_jsx(\"div\",{className:\"friend-profile-icon active\"}),/*#__PURE__*/_jsx(\"div\",{className:\"friend-delete-icon active\",onClick:event=>setShowRemoveFriendsConfirmation(true)})]})]}),/*#__PURE__*/_jsx(FriendsListRequestView,{className:\"friend-headers\",headerText:LocalizeText('friendlist.tab.friendrequests')+` (${requests.length})`,isExpanded:false}),/*#__PURE__*/_jsx(FriendsSearchView,{className:\"search-headers\",headerText:LocalizeText('people.search.title')})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"friendlist-bottom p-1\"})]}),showRoomInvite&&/*#__PURE__*/_jsx(FriendsRoomInviteView,{selectedFriendsIds:selectedFriendsIds,onCloseClick:()=>setShowRoomInvite(false),sendRoomInvite:sendRoomInvite}),showRemoveFriendsConfirmation&&/*#__PURE__*/_jsx(FriendsRemoveConfirmationView,{selectedFriendsIds:selectedFriendsIds,removeFriendsText:removeFriendsText,onCloseClick:()=>setShowRemoveFriendsConfirmation(false),removeSelectedFriends:removeSelectedFriends})]});};","map":null,"metadata":{},"sourceType":"module"}