{"ast":null,"code":"import{AvatarFigureContainer}from'@nitrots/nitro-renderer';import{GetAvatarRenderManager}from'../../../api';import{Randomizer}from'../../../api/utils';import{FigureData}from'./FigureData';function getTotalColors(partSet){const parts=partSet.parts;let totalColors=0;for(const part of parts)totalColors=Math.max(totalColors,part.colorLayerIndex);return totalColors;}function getRandomSetTypes(requiredSets,options){options=options.filter(option=>requiredSets.indexOf(option)===-1);return[...requiredSets,...Randomizer.getRandomElements(options,Randomizer.getRandomNumber(options.length)+1)];}function getRandomPartSet(setType,gender){let clubLevel=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;let figureSetIds=arguments.length>3&&arguments[3]!==undefined?arguments[3]:[];if(!setType)return null;const options=setType.partSets.getValues().filter(option=>{if(!option.isSelectable||option.gender!=='U'&&option.gender!==gender||option.clubLevel>clubLevel||option.isSellable&&figureSetIds.indexOf(option.id)===-1)return null;return option;});if(!options||!options.length)return null;return Randomizer.getRandomElement(options);}function getRandomColors(palette,partSet){let clubLevel=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;if(!palette)return[];const options=palette.colors.getValues().filter(option=>{if(!option.isSelectable||option.clubLevel>clubLevel)return null;return option;});if(!options||!options.length)return null;return Randomizer.getRandomElements(options,getTotalColors(partSet));}export function generateRandomFigure(figureData,gender){let clubLevel=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;let figureSetIds=arguments.length>3&&arguments[3]!==undefined?arguments[3]:[];let ignoredSets=arguments.length>4&&arguments[4]!==undefined?arguments[4]:[];const structure=GetAvatarRenderManager().structure;const figureContainer=new AvatarFigureContainer('');const requiredSets=getRandomSetTypes(structure.getMandatorySetTypeIds(gender,clubLevel),FigureData.SET_TYPES);for(const setType of ignoredSets){const partSetId=figureData.getPartSetId(setType);const colors=figureData.getColorIds(setType);figureContainer.updatePart(setType,partSetId,colors);}for(const type of requiredSets){if(figureContainer.hasPartType(type))continue;const setType=structure.figureData.getSetType(type);const selectedSet=getRandomPartSet(setType,gender,clubLevel,figureSetIds);if(!selectedSet)continue;let selectedColors=[];if(selectedSet.isColorable){selectedColors=getRandomColors(structure.figureData.getPalette(setType.paletteID),selectedSet,clubLevel).map(color=>color.id);}figureContainer.updatePart(setType.type,selectedSet.id,selectedColors);}return figureContainer.getFigureString();}","map":null,"metadata":{},"sourceType":"module"}