{"ast":null,"code":"import{AlphaTolerance}from'../../../../../room/object/enum/AlphaTolerance';import{RoomObjectSpriteVisualization}from'../../../../../room/object/visualization/RoomObjectSpriteVisualization';import{RoomObjectVariable}from'../../RoomObjectVariable';import{RoomObjectVisualizationType}from'../../RoomObjectVisualizationType';import{ColorData}from'../data/ColorData';import{LayerData}from'../data/LayerData';import{FurnitureVisualizationData}from'./FurnitureVisualizationData';export class FurnitureVisualization extends RoomObjectSpriteVisualization{constructor(){super();this._data=void 0;this._type=void 0;this._direction=void 0;this._lastCameraAngle=void 0;this._selectedColor=void 0;this._furnitureLift=void 0;this._alphaMultiplier=void 0;this._alphaChanged=void 0;this._clickUrl=void 0;this._clickHandling=void 0;this._cacheDirection=void 0;this._cacheScale=void 0;this._cacheSize=void 0;this._layerCount=void 0;this._shadowLayerIndex=void 0;this._updatedLayers=void 0;this._assetNames=void 0;this._spriteTags=void 0;this._spriteInks=void 0;this._spriteAlphas=void 0;this._spriteColors=void 0;this._spriteMouseCaptures=void 0;this._spriteXOffsets=void 0;this._spriteYOffsets=void 0;this._spriteZOffsets=void 0;this._animationNumber=void 0;this._data=null;this._type=null;this._direction=0;this._lastCameraAngle=NaN;this._selectedColor=0;this._furnitureLift=0;this._alphaMultiplier=1;this._alphaChanged=false;this._clickUrl=null;this._clickHandling=false;this._cacheDirection=-1;this._cacheScale=0;this._cacheSize=-1;this._layerCount=0;this._shadowLayerIndex=-1;this._updatedLayers=[];this._assetNames=[];this._spriteTags=[];this._spriteInks=[];this._spriteAlphas=[];this._spriteColors=[];this._spriteMouseCaptures=[];this._spriteXOffsets=[];this._spriteYOffsets=[];this._spriteZOffsets=[];this._animationNumber=0;}initialize(data){this.reset();if(!(data instanceof FurnitureVisualizationData))return false;this._type=data.type;this._data=data;return true;}dispose(){super.dispose();this._data=null;this._updatedLayers=null;this._assetNames=null;this._spriteTags=null;this._spriteInks=null;this._spriteAlphas=null;this._spriteColors=null;this._spriteMouseCaptures=null;this._spriteXOffsets=null;this._spriteYOffsets=null;this._spriteZOffsets=null;}reset(){super.reset();this.setDirection(-1);this._data=null;this._updatedLayers=[];this._assetNames=[];this._spriteTags=[];this._spriteInks=[];this._spriteAlphas=[];this._spriteColors=[];this._spriteMouseCaptures=[];this._spriteXOffsets=[];this._spriteYOffsets=[];this._spriteZOffsets=[];this.createSprites(0);}resetLayers(scale,direction){if(this._cacheDirection===direction&&this._cacheScale===scale)return;this._updatedLayers=[];this._assetNames=[];this._spriteTags=[];this._spriteInks=[];this._spriteAlphas=[];this._spriteColors=[];this._spriteMouseCaptures=[];this._spriteXOffsets=[];this._spriteYOffsets=[];this._spriteZOffsets=[];this._cacheDirection=direction;this._cacheScale=scale;this._cacheSize=this.getValidSize(scale);this.setLayerCount((this._data&&this._data.getLayerCount(scale)||0)+this.getAdditionalLayerCount());}update(geometry,time,update,skipUpdate){if(!geometry)return;const scale=geometry.scale;let updateSprites=false;if(this.updateObject(scale,geometry.direction.x))updateSprites=true;if(this.updateModel(scale))updateSprites=true;let number=0;if(skipUpdate){this._animationNumber=this._animationNumber|this.updateAnimation(scale);}else{number=this.updateAnimation(scale)|this._animationNumber;this._animationNumber=0;}if(updateSprites||number!==0){this.updateSprites(scale,updateSprites,number);this._scale=scale;this.updateSpriteCounter++;}}updateObject(scale,direction){if(!this.object)return false;if(this.updateObjectCounter===this.object.updateCounter&&scale===this._scale&&this._lastCameraAngle===direction)return false;let offsetDirection=this.object.getDirection().x-(direction+135);offsetDirection=(offsetDirection%360+360)%360;if(this._data){const validDirection=this._data.getValidDirection(scale,offsetDirection);this.setDirection(validDirection);}this._lastCameraAngle=direction;this._scale=scale;this.updateObjectCounter=this.object.updateCounter;this.resetLayers(scale,this._direction);return true;}updateModel(scale){const model=this.object&&this.object.model;if(!model)return false;if(this.updateModelCounter===model.updateCounter)return false;this._selectedColor=model.getValue(RoomObjectVariable.FURNITURE_COLOR);this._clickUrl=model.getValue(RoomObjectVariable.FURNITURE_AD_URL);this._clickHandling=this._clickUrl&&this._clickUrl!==''&&this._clickUrl.indexOf('http')===0||false;this._furnitureLift=model.getValue(RoomObjectVariable.FURNITURE_LIFT_AMOUNT)||0;let alphaMultiplier=model.getValue(RoomObjectVariable.FURNITURE_ALPHA_MULTIPLIER);if(isNaN(alphaMultiplier))alphaMultiplier=1;if(this._alphaMultiplier!==alphaMultiplier){this._alphaMultiplier=alphaMultiplier;this._alphaChanged=true;}this.updateModelCounter=model.updateCounter;return true;}updateSprites(scale,update,animation){if(this._layerCount!==this.totalSprites)this.createSprites(this._layerCount);if(update){let layerId=this.totalSprites-1;while(layerId>=0){this.updateSprite(scale,layerId);layerId--;}}else{let layerId=0;while(animation>0){if(animation)this.updateSprite(scale,layerId);layerId++;animation=animation>>1;}}this._alphaChanged=false;}updateSprite(scale,layerId){const assetName=this.getSpriteAssetName(scale,layerId);const sprite=this.getSprite(layerId);if(assetName&&sprite){const assetData=this.getAsset(assetName,layerId);if(assetData&&assetData.texture){sprite.visible=true;sprite.type=this._type;sprite.texture=assetData.texture;sprite.flipH=assetData.flipH;sprite.flipV=assetData.flipV;sprite.direction=this._direction;let relativeDepth=0;if(layerId!==this._shadowLayerIndex){sprite.tag=this.getLayerTag(scale,this._direction,layerId);sprite.alpha=this.getLayerAlpha(scale,this._direction,layerId);sprite.color=this.getLayerColor(scale,layerId,this._selectedColor);sprite.offsetX=assetData.offsetX+this.getLayerXOffset(scale,this._direction,layerId);sprite.offsetY=assetData.offsetY+this.getLayerYOffset(scale,this._direction,layerId);sprite.blendMode=this.getLayerInk(scale,this._direction,layerId);sprite.alphaTolerance=this.getLayerIgnoreMouse(scale,this._direction,layerId)?AlphaTolerance.MATCH_NOTHING:AlphaTolerance.MATCH_OPAQUE_PIXELS;relativeDepth=this.getLayerZOffset(scale,this._direction,layerId);relativeDepth=relativeDepth-layerId*0.001;}else{sprite.offsetX=assetData.offsetX;sprite.offsetY=assetData.offsetY+this.getLayerYOffset(scale,this._direction,layerId);sprite.alpha=48*this._alphaMultiplier;sprite.alphaTolerance=AlphaTolerance.MATCH_NOTHING;relativeDepth=1;}sprite.relativeDepth=relativeDepth*FurnitureVisualization.DEPTH_MULTIPLIER;sprite.name=assetName;sprite.libraryAssetName=this.getLibraryAssetNameForSprite(assetData,sprite);sprite.posture=this.getPostureForAsset(scale,assetData.source);sprite.clickHandling=this._clickHandling;}else{this.resetSprite(sprite);}}else{if(sprite)this.resetSprite(sprite);}}getLibraryAssetNameForSprite(asset,sprite){return asset.source;}getPostureForAssetFile(scale,_arg_2){return null;}resetSprite(sprite){if(!sprite)return;sprite.texture=null;sprite.libraryAssetName='';sprite.posture='';sprite.tag='';sprite.offsetX=0;sprite.offsetY=0;sprite.flipH=false;sprite.flipV=false;sprite.relativeDepth=0;sprite.clickHandling=false;}getSpriteAssetName(scale,layerId){if(!this._data||layerId>=FurnitureVisualizationData.LAYER_LETTERS.length)return'';let assetName=this._assetNames[layerId];let updated=this._updatedLayers[layerId];if(!assetName||!assetName.length){assetName=this.cacheSpriteAssetName(scale,layerId,true);updated=this._cacheSize!==1;}if(updated)assetName+=this.getFrameNumber(scale,layerId);return assetName;}cacheSpriteAssetName(scale,layerId,cache){const type=this._type;const size=cache?this._cacheSize:this.getValidSize(scale);let layerCode='';const isntIcon=size!==1;if(layerId!==this._shadowLayerIndex){layerCode=FurnitureVisualizationData.LAYER_LETTERS[layerId]||'';}else{layerCode='sd';}if(layerCode==='')return null;const assetName=this._type+(isntIcon?'_'+size+'_'+layerCode+'_'+this._direction+'_':'_icon_'+layerCode);if(cache){this._assetNames[layerId]=assetName;this._updatedLayers[layerId]=isntIcon;}return assetName;}getLayerTag(scale,direction,layerId){const existing=this._spriteTags[layerId];if(existing!==undefined)return existing;if(!this._data)return LayerData.DEFAULT_TAG;const tag=this._data.getLayerTag(scale,direction,layerId);this._spriteTags[layerId]=tag;return tag;}getLayerInk(scale,direction,layerId){const existing=this._spriteInks[layerId];if(existing!==undefined)return existing;if(!this._data)return LayerData.DEFAULT_INK;const ink=this._data.getLayerInk(scale,direction,layerId);this._spriteInks[layerId]=ink;return ink;}getLayerAlpha(scale,direction,layerId){if(!this._alphaChanged){const existing=this._spriteAlphas[layerId];if(existing!==undefined)return existing;}if(!this._data)return LayerData.DEFAULT_ALPHA;let alpha=this._data.getLayerAlpha(scale,direction,layerId);if(this._alphaMultiplier!==null)alpha=alpha*this._alphaMultiplier;this._spriteAlphas[layerId]=alpha;return alpha;}getLayerColor(scale,layerId,colorId){const existing=this._spriteColors[layerId];if(existing!==undefined)return existing;if(!this._data)return ColorData.DEFAULT_COLOR;const color=this._data.getLayerColor(scale,layerId,colorId);this._spriteColors[layerId]=color;return color;}getLayerIgnoreMouse(scale,direction,layerId){const existing=this._spriteMouseCaptures[layerId];if(existing!==undefined)return existing;if(!this._data)return LayerData.DEFAULT_IGNORE_MOUSE;const ignoreMouse=this._data.getLayerIgnoreMouse(scale,direction,layerId);this._spriteMouseCaptures[layerId]=ignoreMouse;return ignoreMouse;}getLayerXOffset(scale,direction,layerId){const existing=this._spriteXOffsets[layerId];if(existing!==undefined)return existing;if(!this._data)return LayerData.DEFAULT_XOFFSET;const xOffset=this._data.getLayerXOffset(scale,direction,layerId);this._spriteXOffsets[layerId]=xOffset;return xOffset;}getLayerYOffset(scale,direction,layerId){if(layerId===this._shadowLayerIndex)return Math.ceil(this._furnitureLift*(scale/2));const existing=this._spriteYOffsets[layerId];if(existing!==undefined)return existing;if(!this._data)return LayerData.DEFAULT_YOFFSET;const yOffset=this._data.getLayerYOffset(scale,direction,layerId);this._spriteYOffsets[layerId]=yOffset;return yOffset;}getLayerZOffset(scale,direction,layerId){const existing=this._spriteZOffsets[layerId];if(existing!==undefined)return existing;if(!this._data)return LayerData.DEFAULT_ZOFFSET;const zOffset=this._data.getLayerZOffset(scale,direction,layerId);this._spriteZOffsets[layerId]=zOffset;return zOffset;}getValidSize(scale){if(!this._data)return scale;return this._data.getValidSize(scale);}setLayerCount(count){this._layerCount=count;this._shadowLayerIndex=count-this.getAdditionalLayerCount();}setDirection(direction){if(this._direction===direction)return;this._direction=direction;}getAdditionalLayerCount(){return 1;}updateAnimation(scale){return 0;}getFrameNumber(scale,layerId){return 0;}getPostureForAsset(scale,name){return null;}getAsset(name){let layerId=arguments.length>1&&arguments[1]!==undefined?arguments[1]:-1;if(!this.asset)return null;return this.asset.getAsset(name);}get direction(){return this._direction;}}FurnitureVisualization.DEPTH_MULTIPLIER=Math.sqrt(0.5);FurnitureVisualization.TYPE=RoomObjectVisualizationType.FURNITURE_STATIC;","map":null,"metadata":{},"sourceType":"module"}