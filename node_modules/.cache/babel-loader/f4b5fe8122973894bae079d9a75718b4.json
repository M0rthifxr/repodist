{"ast":null,"code":"import{useCallback,useState}from'react';import{LocalizeText,RoomWidgetChooserContentEvent,RoomWidgetRequestWidgetMessage,RoomWidgetUpdateRoomObjectEvent}from'../../../../api';import{UseEventDispatcherHook}from'../../../../hooks';import{useRoomContext}from'../../RoomContext';import{ChooserWidgetView}from'./ChooserWidgetView';import{jsx as _jsx}from\"react/jsx-runtime\";export const UserChooserWidgetView=props=>{const[isVisible,setIsVisible]=useState(false);const[items,setItems]=useState(null);const[refreshTimeout,setRefreshTimeout]=useState(null);const{eventDispatcher=null,widgetHandler=null}=useRoomContext();const refreshChooser=useCallback(()=>{if(!isVisible)return;setRefreshTimeout(prevValue=>{if(prevValue)clearTimeout(prevValue);return setTimeout(()=>widgetHandler.processWidgetMessage(new RoomWidgetRequestWidgetMessage(RoomWidgetRequestWidgetMessage.USER_CHOOSER)),100);});},[isVisible,widgetHandler]);const onRoomWidgetChooserContentEvent=useCallback(event=>{setItems(event.items);setIsVisible(true);},[]);UseEventDispatcherHook(RoomWidgetChooserContentEvent.USER_CHOOSER_CONTENT,eventDispatcher,onRoomWidgetChooserContentEvent);const onRoomWidgetRoomObjectUpdateEvent=useCallback(event=>{if(!isVisible)return;switch(event.type){case RoomWidgetUpdateRoomObjectEvent.USER_ADDED:case RoomWidgetUpdateRoomObjectEvent.USER_REMOVED:refreshChooser();return;}},[isVisible,refreshChooser]);UseEventDispatcherHook(RoomWidgetUpdateRoomObjectEvent.USER_ADDED,eventDispatcher,onRoomWidgetRoomObjectUpdateEvent);UseEventDispatcherHook(RoomWidgetUpdateRoomObjectEvent.USER_REMOVED,eventDispatcher,onRoomWidgetRoomObjectUpdateEvent);const close=useCallback(()=>{setIsVisible(false);setItems(null);},[]);if(!isVisible)return null;return/*#__PURE__*/_jsx(ChooserWidgetView,{title:LocalizeText('widget.chooser.user.title'),displayItemId:false,items:items,onCloseClick:close});};","map":null,"metadata":{},"sourceType":"module"}