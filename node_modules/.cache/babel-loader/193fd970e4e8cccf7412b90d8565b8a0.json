{"ast":null,"code":"import{AnimationData}from'./AnimationData';import{SizeData}from'./SizeData';export class AnimationSizeData extends SizeData{constructor(layerCount,angle){super(layerCount,angle);this._animations=void 0;this._animationIds=void 0;this._animations=new Map();this._animationIds=[];}dispose(){super.dispose();for(const animation of this._animations.values()){if(!animation)continue;animation.dispose();}this._animations.clear();this._animationIds=[];}defineAnimations(animations){if(!animations)return true;for(const key in animations){const animation=animations[key];if(!animation)return false;let animationId=parseInt(key.split('_')[0]);let isTransition=false;const transitionTo=animation.transitionTo;const transitionFrom=animation.transitionFrom;if(transitionTo!==undefined){animationId=AnimationData.getTransitionToAnimationId(transitionTo);isTransition=true;}if(transitionFrom!==undefined){animationId=AnimationData.getTransitionFromAnimationId(transitionFrom);isTransition=true;}const animationData=this.createAnimationData();if(!animationData.initialize(animation)){animationData.dispose();return false;}const immediateChangeFrom=animation.immediateChangeFrom;if(immediateChangeFrom!==undefined){const changes=immediateChangeFrom.split(',');const changeIds=[];for(const change of changes){const changeId=parseInt(change);if(changeIds.indexOf(changeId)===-1)changeIds.push(changeId);}animationData.setImmediateChanges(changeIds);}this._animations.set(animationId,animationData);if(!isTransition)this._animationIds.push(animationId);}return true;}createAnimationData(){return new AnimationData();}hasAnimation(animationId){if(!this._animations.get(animationId))return false;return true;}getAnimationCount(){return this._animationIds.length||0;}getAnimationId(animationId){const totalAnimations=this.getAnimationCount();if(animationId<0||totalAnimations<=0)return 0;return this._animationIds[animationId%totalAnimations];}isImmediateChange(animationId,_arg_2){const animation=this._animations.get(animationId);if(!animation)return false;return animation.isImmediateChange(_arg_2);}getStartFrame(animationId,direction){const animation=this._animations.get(animationId);if(!animation)return 0;return animation.getStartFrame(direction);}getFrame(animationId,direction,layerId,frameCount){const animation=this._animations.get(animationId);if(!animation)return null;return animation.getFrame(direction,layerId,frameCount);}getFrameFromSequence(animationId,direction,layerId,sequenceId,offset,frameCount){const animation=this._animations.get(animationId);if(!animation)return null;return animation.getFrameFromSequence(direction,layerId,sequenceId,offset,frameCount);}}","map":null,"metadata":{},"sourceType":"module"}