{"ast":null,"code":"import{LocalizeText}from'../utils';import{GetGroupChatData}from'./GetGroupChatData';import{GroupType}from'./GroupType';import{MessengerThreadChat}from'./MessengerThreadChat';import{MessengerThreadChatGroup}from'./MessengerThreadChatGroup';export class MessengerThread{constructor(participant){let isNew=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;this._threadId=void 0;this._participant=void 0;this._groups=void 0;this._lastUpdated=void 0;this._unreadCount=void 0;this._threadId=++MessengerThread.THREAD_ID;this._participant=participant;this._groups=[];this._lastUpdated=new Date();this._unreadCount=0;if(isNew){this.addMessage(null,LocalizeText('messenger.moderationinfo'),0,null,MessengerThreadChat.SECURITY_NOTIFICATION);this._unreadCount=0;}}addMessage(senderId,message){let secondsSinceSent=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;let extraData=arguments.length>3&&arguments[3]!==undefined?arguments[3]:null;let type=arguments.length>4&&arguments[4]!==undefined?arguments[4]:0;const isGroupChat=senderId<0&&extraData;const userId=isGroupChat?GetGroupChatData(extraData).userId:senderId;const group=this.getLastGroup(userId);if(!group)return;if(isGroupChat)group.type=GroupType.GROUP_CHAT;const chat=new MessengerThreadChat(senderId,message,secondsSinceSent,extraData,type);group.addChat(chat);this._lastUpdated=new Date();this._unreadCount++;return chat;}getLastGroup(userId){let group=this._groups[this._groups.length-1];if(group&&group.userId===userId)return group;group=new MessengerThreadChatGroup(userId);this._groups.push(group);return group;}setRead(){this._unreadCount=0;}get threadId(){return this._threadId;}get participant(){return this._participant;}get groups(){return this._groups;}get lastUpdated(){return this._lastUpdated;}get unreadCount(){return this._unreadCount;}get unread(){return this._unreadCount>0;}}MessengerThread.MESSAGE_RECEIVED='MT_MESSAGE_RECEIVED';MessengerThread.THREAD_ID=0;","map":null,"metadata":{},"sourceType":"module"}