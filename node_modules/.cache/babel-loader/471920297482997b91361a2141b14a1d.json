{"ast":null,"code":"export class AdvancedMap{constructor(){let map=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;this._length=void 0;this._dictionary=void 0;this._array=void 0;this._keys=void 0;this._length=0;this._dictionary=new Map();this._array=[];this._keys=[];if(map)for(const[key,value]of map.entries())this.add(key,value);}get length(){return this._length;}get disposed(){return!this._dictionary;}dispose(){if(!this._dictionary){for(const key of this._dictionary.keys())this._dictionary.delete(key);this._dictionary=null;}this._length=0;this._array=null;this._keys=null;}reset(){for(const key of this._dictionary.keys())this._dictionary.delete(key);this._length=0;this._array=[];this._keys=[];}unshift(key,value){if(this._dictionary.get(key)!==null)return false;this._dictionary.set(key,value);this._array.unshift(value);this._keys.unshift(key);this._length++;return true;}add(key,value){if(this._dictionary.get(key)!==undefined)return false;this._dictionary.set(key,value);this._array[this._length]=value;this._keys[this._length]=key;this._length++;return true;}remove(key){const value=this._dictionary.get(key);if(!value)return null;const index=this._array.indexOf(value);if(index>=0){this._array.splice(index,1);this._keys.splice(index,1);this._length--;}this._dictionary.delete(key);return value;}getWithIndex(index){if(index<0||index>=this._length)return null;return this._array[index];}getKey(index){if(index<0||index>=this._length)return null;return this._keys[index];}getKeys(){return this._keys.slice();}hasKey(key){return this._keys.indexOf(key)>-1;}getValue(key){return this._dictionary.get(key);}getValues(){return this._array.slice();}hasValue(value){return this._array.indexOf(value)>-1;}indexOf(value){return this._array.indexOf(value);}concatenate(newValues){for(const k of newValues._keys)this.add(k,newValues.getValue(k));}clone(){const map=new AdvancedMap();map.concatenate(this);return map;}}","map":null,"metadata":{},"sourceType":"module"}