{"ast":null,"code":"import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{RoomObjectOperationType}from'@nitrots/nitro-renderer';import{useCallback,useEffect,useState}from'react';import{ProcessRoomObjectOperation,RoomWidgetUpdateDecorateModeEvent,RoomWidgetUpdateRoomObjectEvent}from'../../../../../api';import{UseEventDispatcherHook}from'../../../../../hooks';import{useRoomContext}from'../../../RoomContext';import{ObjectLocationView}from'../../object-location/ObjectLocationView';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export const FurnitureManipulationMenuView=props=>{const[isVisible,setIsVisible]=useState(false);const[objectId,setObjectId]=useState(-1);const[objectType,setObjectType]=useState(-1);const{roomSession=null,eventDispatcher=null,widgetHandler=null}=useRoomContext();const rotateFurniture=useCallback(()=>{ProcessRoomObjectOperation(objectId,objectType,RoomObjectOperationType.OBJECT_ROTATE_POSITIVE);},[objectId,objectType]);const moveFurniture=useCallback(()=>{ProcessRoomObjectOperation(objectId,objectType,RoomObjectOperationType.OBJECT_MOVE);},[objectId,objectType]);const pickupFurniture=useCallback(()=>{ProcessRoomObjectOperation(objectId,objectType,RoomObjectOperationType.OBJECT_PICKUP);},[objectId,objectType]);const onRoomWidgetRoomObjectUpdateEvent=useCallback(event=>{switch(event.type){case RoomWidgetUpdateRoomObjectEvent.OBJECT_REQUEST_MANIPULATION:{setIsVisible(true);setObjectId(event.id);setObjectType(event.category);return;}case RoomWidgetUpdateRoomObjectEvent.FURNI_REMOVED:{if(event.id===objectId){setIsVisible(false);setObjectId(-1);setObjectType(-1);}return;}case RoomWidgetUpdateRoomObjectEvent.OBJECT_DESELECTED:{setIsVisible(false);setObjectId(-1);setObjectType(-1);return;}}},[objectId]);UseEventDispatcherHook(RoomWidgetUpdateRoomObjectEvent.OBJECT_REQUEST_MANIPULATION,eventDispatcher,onRoomWidgetRoomObjectUpdateEvent);UseEventDispatcherHook(RoomWidgetUpdateRoomObjectEvent.OBJECT_DESELECTED,eventDispatcher,onRoomWidgetRoomObjectUpdateEvent);const onRoomWidgetUpdateDecorateModeEvent=useCallback(event=>{if(event.isDecorating)return;moveFurniture();setIsVisible(false);setObjectId(-1);setObjectType(-1);},[moveFurniture]);UseEventDispatcherHook(RoomWidgetUpdateDecorateModeEvent.UPDATE_DECORATE,eventDispatcher,onRoomWidgetUpdateDecorateModeEvent);useEffect(()=>{if(!isVisible){eventDispatcher.dispatchEvent(new RoomWidgetUpdateDecorateModeEvent(false));return;}eventDispatcher.dispatchEvent(new RoomWidgetUpdateDecorateModeEvent(true));moveFurniture();},[eventDispatcher,isVisible,moveFurniture]);if(!isVisible)return null;return/*#__PURE__*/_jsx(ObjectLocationView,{objectId:objectId,category:objectType,children:/*#__PURE__*/_jsxs(\"div\",{className:\"btn-group\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-primary btn-sm\",onClick:pickupFurniture,children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:\"times\"})}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-primary btn-sm\",onClick:rotateFurniture,children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:\"undo\"})})]})});};","map":null,"metadata":{},"sourceType":"module"}