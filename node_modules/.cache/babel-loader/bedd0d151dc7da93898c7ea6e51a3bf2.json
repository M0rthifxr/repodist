{"ast":null,"code":"import{Nitro}from'../../../nitro/Nitro';import{NitroLogger}from'../../common/logger/NitroLogger';import{EventDispatcher}from'../../events/EventDispatcher';import{EvaWireFormat}from'../codec/evawire/EvaWireFormat';import{SocketConnectionEvent}from'../events/SocketConnectionEvent';import{MessageClassManager}from'../messages/MessageClassManager';import{WebSocketEventEnum}from'./enums/WebSocketEventEnum';export class SocketConnection extends EventDispatcher{constructor(communicationManager,stateListener){super();this._communicationManager=void 0;this._stateListener=void 0;this._socket=void 0;this._messages=void 0;this._codec=void 0;this._dataBuffer=void 0;this._isReady=void 0;this._pendingClientMessages=void 0;this._pendingServerMessages=void 0;this._isAuthenticated=void 0;this._communicationManager=communicationManager;this._stateListener=stateListener;this._socket=null;this._messages=new MessageClassManager();this._codec=new EvaWireFormat();this._dataBuffer=null;this._isReady=false;this._pendingClientMessages=[];this._pendingServerMessages=[];this._isAuthenticated=false;this.onOpen=this.onOpen.bind(this);this.onClose=this.onClose.bind(this);this.onError=this.onError.bind(this);this.onMessage=this.onMessage.bind(this);}init(socketUrl){if(this._stateListener){this._stateListener.connectionInit(socketUrl);}this.createSocket(socketUrl);}onDispose(){super.onDispose();this.destroySocket();this._communicationManager=null;this._stateListener=null;this._messages=null;this._codec=null;this._dataBuffer=null;}onReady(){if(this._isReady)return;this._isReady=true;if(this._pendingServerMessages&&this._pendingServerMessages.length)this.processWrappers(...this._pendingServerMessages);if(this._pendingClientMessages&&this._pendingClientMessages.length)this.send(...this._pendingClientMessages);this._pendingServerMessages=[];this._pendingClientMessages=[];}createSocket(socketUrl){if(!socketUrl)return;this.destroySocket();this._dataBuffer=new ArrayBuffer(0);this._socket=new WebSocket(socketUrl);this._socket.addEventListener(WebSocketEventEnum.CONNECTION_OPENED,this.onOpen);this._socket.addEventListener(WebSocketEventEnum.CONNECTION_CLOSED,this.onClose);this._socket.addEventListener(WebSocketEventEnum.CONNECTION_ERROR,this.onError);this._socket.addEventListener(WebSocketEventEnum.CONNECTION_MESSAGE,this.onMessage);}destroySocket(){if(!this._socket)return;this._socket.removeEventListener(WebSocketEventEnum.CONNECTION_OPENED,this.onOpen);this._socket.removeEventListener(WebSocketEventEnum.CONNECTION_CLOSED,this.onClose);this._socket.removeEventListener(WebSocketEventEnum.CONNECTION_ERROR,this.onError);this._socket.removeEventListener(WebSocketEventEnum.CONNECTION_MESSAGE,this.onMessage);if(this._socket.readyState===WebSocket.OPEN)this._socket.close();this._socket=null;}onOpen(event){this.dispatchConnectionEvent(SocketConnectionEvent.CONNECTION_OPENED,event);}onClose(event){this.dispatchConnectionEvent(SocketConnectionEvent.CONNECTION_CLOSED,event);}onError(event){this.dispatchConnectionEvent(SocketConnectionEvent.CONNECTION_ERROR,event);}onMessage(event){if(!event)return;//this.dispatchConnectionEvent(SocketConnectionEvent.CONNECTION_MESSAGE, event);\nconst reader=new FileReader();reader.readAsArrayBuffer(event.data);reader.onloadend=()=>{this._dataBuffer=this.concatArrayBuffers(this._dataBuffer,reader.result);this.processReceivedData();};}dispatchConnectionEvent(type,event){this.dispatchEvent(new SocketConnectionEvent(type,this,event));}authenticated(){this._isAuthenticated=true;}send(){for(var _len=arguments.length,composers=new Array(_len),_key=0;_key<_len;_key++){composers[_key]=arguments[_key];}if(this.disposed||!composers)return false;composers=[...composers];if(this._isAuthenticated&&!this._isReady){if(!this._pendingClientMessages)this._pendingClientMessages=[];this._pendingClientMessages.push(...composers);return false;}for(const composer of composers){if(!composer)continue;const header=this._messages.getComposerId(composer);if(header===-1){NitroLogger.log(`Unknown Composer: ${composer.constructor.name}`);continue;}const message=composer.getMessageArray();const encoded=this._codec.encode(header,message);if(!encoded){if(Nitro.instance.getConfiguration('system.packet.log'))console.log(`Encoding Failed: ${composer.constructor.name}`);continue;}if(Nitro.instance.getConfiguration('system.packet.log'))console.log(`OutgoingComposer: [${header}] ${composer.constructor.name}`,message);this.write(encoded.getBuffer());}return true;}write(buffer){if(this._socket.readyState!==WebSocket.OPEN)return;this._socket.send(buffer);}processReceivedData(){try{this.processData();}catch(err){NitroLogger.log(err);}}processData(){const wrappers=this.splitReceivedMessages();if(!wrappers||!wrappers.length)return;if(this._isAuthenticated&&!this._isReady){if(!this._pendingServerMessages)this._pendingServerMessages=[];this._pendingServerMessages.push(...wrappers);return;}this.processWrappers(...wrappers);}processWrappers(){for(var _len2=arguments.length,wrappers=new Array(_len2),_key2=0;_key2<_len2;_key2++){wrappers[_key2]=arguments[_key2];}if(!wrappers||!wrappers.length)return;for(const wrapper of wrappers){if(!wrapper)continue;const messages=this.getMessagesForWrapper(wrapper);if(!messages||!messages.length)continue;if(Nitro.instance.getConfiguration('system.packet.log')){console.log(`IncomingMessage: [${wrapper.header}] ${messages[0].constructor.name}`,messages[0].parser);}this.handleMessages(...messages);}}splitReceivedMessages(){if(!this._dataBuffer||!this._dataBuffer.byteLength)return null;return this._codec.decode(this);}concatArrayBuffers(buffer1,buffer2){const array=new Uint8Array(buffer1.byteLength+buffer2.byteLength);array.set(new Uint8Array(buffer1),0);array.set(new Uint8Array(buffer2),buffer1.byteLength);return array.buffer;}getMessagesForWrapper(wrapper){if(!wrapper)return null;const events=this._messages.getEvents(wrapper.header);if(!events||!events.length){if(Nitro.instance.getConfiguration('system.packet.log')){console.log(`IncomingMessage: [${wrapper.header}] UNREGISTERED`,wrapper);}return;}try{//@ts-ignore\nconst parser=new events[0].parserClass();if(!parser||!parser.flush()||!parser.parse(wrapper))return null;for(const event of events)event.parser=parser;}catch(e){NitroLogger.log(`Error parsing message: ${e}`,events[0].constructor.name);return null;}return events;}handleMessages(){for(var _len3=arguments.length,messages=new Array(_len3),_key3=0;_key3<_len3;_key3++){messages[_key3]=arguments[_key3];}messages=[...messages];for(const message of messages){if(!message)continue;message.connection=this;if(message.callBack)message.callBack(message);}}registerMessages(configuration){if(!configuration)return;this._messages.registerMessages(configuration);}addMessageEvent(event){if(!event||!this._messages)return;this._messages.registerMessageEvent(event);}removeMessageEvent(event){if(!event||!this._messages)return;this._messages.removeMessageEvent(event);}get isAuthenticated(){return this._isAuthenticated;}get dataBuffer(){return this._dataBuffer;}set dataBuffer(buffer){this._dataBuffer=buffer;}}","map":null,"metadata":{},"sourceType":"module"}