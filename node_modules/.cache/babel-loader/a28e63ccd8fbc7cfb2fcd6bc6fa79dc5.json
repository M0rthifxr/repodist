{"ast":null,"code":"import{RoomEngineTriggerWidgetEvent,RoomObjectVariable}from'@nitrots/nitro-renderer';import{useCallback,useState}from'react';import{GetRoomEngine,RoomWidgetUpdateRoomObjectEvent}from'../../../../../api';import{LayoutTrophyView}from'../../../../../common';import{UseEventDispatcherHook,UseRoomEngineEvent}from'../../../../../hooks';import{useRoomContext}from'../../../RoomContext';import{FurnitureTrophyData}from'./FurnitureTrophyData';import{jsx as _jsx}from\"react/jsx-runtime\";export const FurnitureTrophyView=props=>{const{eventDispatcher=null,widgetHandler=null}=useRoomContext();const[trophyData,setTrophyData]=useState(null);const onNitroEvent=useCallback(event=>{switch(event.type){case RoomEngineTriggerWidgetEvent.REQUEST_TROPHY:{const widgetEvent=event;const roomObject=GetRoomEngine().getRoomObject(widgetEvent.roomId,widgetEvent.objectId,widgetEvent.category);if(!roomObject)return;let data=roomObject.model.getValue(RoomObjectVariable.FURNITURE_DATA);let extra=roomObject.model.getValue(RoomObjectVariable.FURNITURE_EXTRAS);if(!extra)extra='0';const color=roomObject.model.getValue(RoomObjectVariable.FURNITURE_COLOR);const ownerName=data.substring(0,data.indexOf('\\t'));data=data.substring(ownerName.length+1,data.length);const trophyDate=data.substring(0,data.indexOf('\\t'));const trophyText=data.substr(trophyDate.length+1,data.length);setTrophyData(new FurnitureTrophyData(widgetEvent.objectId,widgetEvent.category,color,ownerName,trophyDate,trophyText));return;}case RoomWidgetUpdateRoomObjectEvent.FURNI_REMOVED:{const widgetEvent=event;setTrophyData(prevState=>{if(!prevState||widgetEvent.id!==prevState.objectId||widgetEvent.category!==prevState.category)return prevState;return null;});return;}}},[]);UseRoomEngineEvent(RoomEngineTriggerWidgetEvent.REQUEST_TROPHY,onNitroEvent);UseEventDispatcherHook(RoomWidgetUpdateRoomObjectEvent.FURNI_REMOVED,widgetHandler.eventDispatcher,onNitroEvent);const processAction=useCallback(function(type){let value=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;switch(type){case'close':setTrophyData(null);return;}},[]);if(!trophyData)return null;return/*#__PURE__*/_jsx(LayoutTrophyView,{color:trophyData.color,message:trophyData.message,date:trophyData.date,senderName:trophyData.ownerName,onCloseClick:()=>processAction('close')});};","map":null,"metadata":{},"sourceType":"module"}