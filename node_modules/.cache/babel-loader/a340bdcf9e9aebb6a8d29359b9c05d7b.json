{"ast":null,"code":"import{RoomWidgetEnumItemExtradataParameter}from'../../../../ui';import{RoomObjectFurnitureActionEvent}from'../../../events/RoomObjectFurnitureActionEvent';import{ObjectDataUpdateMessage}from'../../../messages';import{RoomObjectVariable}from'../../RoomObjectVariable';import{FurnitureMultiStateLogic}from'./FurnitureMultiStateLogic';export class FurnitureSoundMachineLogic extends FurnitureMultiStateLogic{constructor(){super(...arguments);this._disposeEventsAllowed=false;this._isInitialized=false;this._currentState=-1;}getEventTypes(){const types=[RoomObjectFurnitureActionEvent.SOUND_MACHINE_START,RoomObjectFurnitureActionEvent.SOUND_MACHINE_STOP,RoomObjectFurnitureActionEvent.SOUND_MACHINE_DISPOSE,RoomObjectFurnitureActionEvent.SOUND_MACHINE_INIT];return this.mergeTypes(super.getEventTypes(),types);}onDispose(){this.requestDispose();super.onDispose();}processUpdateMessage(message){super.processUpdateMessage(message);if(this.object.model.getValue(RoomObjectVariable.FURNITURE_REAL_ROOM_OBJECT)!==1)return;if(!this._isInitialized)this.requestInit();this.object.model.setValue(RoomWidgetEnumItemExtradataParameter.INFOSTAND_EXTRA_PARAM,RoomWidgetEnumItemExtradataParameter.JUKEBOX);if(message instanceof ObjectDataUpdateMessage){const state=this.object.getState(0);if(state!==this._currentState){this._currentState=state;if(state===1)this.requestPlayList();else if(state===0)this.requestStopPlaying();}}}requestInit(){if(!this.object||!this.eventDispatcher)return;this._disposeEventsAllowed=true;this.eventDispatcher.dispatchEvent(new RoomObjectFurnitureActionEvent(RoomObjectFurnitureActionEvent.SOUND_MACHINE_INIT,this.object));this._isInitialized=true;}requestPlayList(){if(!this.object||!this.eventDispatcher)return;this._disposeEventsAllowed=true;this.eventDispatcher.dispatchEvent(new RoomObjectFurnitureActionEvent(RoomObjectFurnitureActionEvent.SOUND_MACHINE_START,this.object));}requestStopPlaying(){if(!this.object||!this.eventDispatcher)return;this.eventDispatcher.dispatchEvent(new RoomObjectFurnitureActionEvent(RoomObjectFurnitureActionEvent.SOUND_MACHINE_STOP,this.object));}requestDispose(){if(!this._disposeEventsAllowed||!this.object||!this.eventDispatcher)return;this.eventDispatcher.dispatchEvent(new RoomObjectFurnitureActionEvent(RoomObjectFurnitureActionEvent.SOUND_MACHINE_DISPOSE,this.object));}}","map":null,"metadata":{},"sourceType":"module"}