{"ast":null,"code":"import{RoomUnitStatusAction}from'./RoomUnitStatusAction';import{RoomUnitStatusMessage}from'./RoomUnitStatusMessage';export class RoomUnitStatusParser{constructor(){this._statuses=void 0;}flush(){this._statuses=[];return true;}parse(wrapper){if(!wrapper)return false;let totalUnits=wrapper.readInt();while(totalUnits>0){const status=this.parseStatus(wrapper);if(!status){totalUnits--;continue;}this._statuses.push(status);totalUnits--;}return true;}parseStatus(wrapper){if(!wrapper)return null;const unitId=wrapper.readInt();const x=wrapper.readInt();const y=wrapper.readInt();const z=parseFloat(wrapper.readString());const headDirection=wrapper.readInt()%8*45;const direction=wrapper.readInt()%8*45;const actions=wrapper.readString();let targetX=0;let targetY=0;let targetZ=0;let height=0;let canStandUp=false;let didMove=false;const isSlide=false;if(actions){const actionParts=actions.split('/');const statusActions=[];for(const action of actionParts){const parts=action.split(' ');if(parts[0]==='')continue;if(parts.length>=2){switch(parts[0]){case'mv':{const values=parts[1].split(',');if(values.length>=3){targetX=parseInt(values[0]);targetY=parseInt(values[1]);targetZ=parseFloat(values[2]);didMove=true;}break;}case'sit':{const sitHeight=parseFloat(parts[1]);if(parts.length>=3)canStandUp=parts[2]==='1';height=sitHeight;break;}case'lay':{const layHeight=parseFloat(parts[1]);height=Math.abs(layHeight);break;}}statusActions.push(new RoomUnitStatusAction(parts[0],parts[1]));}}// const totalActions = actionParts.length;\n// if(totalActions)\n// {\n//     for(let i = 0; i < totalActions; i++)\n//     {\n//         const action = actionParts[i];\n//         if(!action) continue;\n//         console.log(action);\n//         const [ key, value, extra ] = action.split(' ');\n//         if(!key || !value) continue;\n//         switch(key)\n//         {\n//             case 'mv':\n//                 [ targetX, targetY, targetZ ] = value.split(',').map(a => parseFloat(a));\n//                 didMove = true;\n//                 break;\n//             case 'sit': {\n//                 const sitHeight = parseFloat(value);\n//                 if(extra !== undefined) canStandUp = value === '1';\n//                 height = sitHeight;\n//                 break;\n//             }\n//             case 'lay': {\n//                 const layHeight = parseFloat(value);\n//                 height = layHeight;\n//                 break;\n//             }\n//         }\n//         statusActions.push(new RoomUnitStatusAction(key, value));\n//     }\n// }\nthis._statuses.push(new RoomUnitStatusMessage(unitId,x,y,z,height,headDirection,direction,targetX,targetY,targetZ,didMove,canStandUp,statusActions));}}get statuses(){return this._statuses;}}","map":null,"metadata":{},"sourceType":"module"}