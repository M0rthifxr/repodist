{"ast":null,"code":"import{RoomEngineTriggerWidgetEvent}from'@nitrots/nitro-renderer';export class RoomWidgetHandlerManager{constructor(roomSession,eventDispatcher){this._roomSession=void 0;this._eventDispatcher=void 0;this._handlers=[];this._eventMap=new Map();this._messageMap=new Map();this._roomSession=roomSession;this._eventDispatcher=eventDispatcher;}registerHandler(handler){const eventTypes=handler.eventTypes;eventTypes.push(RoomEngineTriggerWidgetEvent.OPEN_WIDGET,RoomEngineTriggerWidgetEvent.CLOSE_WIDGET);if(eventTypes&&eventTypes.length){for(const name of eventTypes){if(!name)continue;let events=this._eventMap.get(name);if(!events){events=[];this._eventMap.set(name,events);}events.push(handler);}}const messageTypes=handler.messageTypes;if(messageTypes&&messageTypes.length){for(const name of messageTypes){if(!name)continue;let messages=this._messageMap.get(name);if(!messages){messages=[];this._messageMap.set(name,messages);}messages.push(handler);}}handler.container=this;this._handlers.push(handler);}processEvent(event){const handlers=this._eventMap.get(event.type);if(!handlers||!handlers.length)return null;for(const handler of handlers){if(!handler)continue;let dispatch=true;if(event.type===RoomEngineTriggerWidgetEvent.OPEN_WIDGET||event.type===RoomEngineTriggerWidgetEvent.CLOSE_WIDGET){if(event instanceof RoomEngineTriggerWidgetEvent){dispatch=handler.type===event.widget;}}if(dispatch)handler.processEvent(event);}}processWidgetMessage(message){const handlers=this._messageMap.get(message.type);if(!handlers||!handlers.length)return null;for(const handler of handlers){if(!handler)continue;const update=handler.processWidgetMessage(message);if(!update)continue;return update;}return null;}get roomSession(){return this._roomSession;}get eventDispatcher(){return this._eventDispatcher;}}","map":null,"metadata":{},"sourceType":"module"}