{"ast":null,"code":"import{NitroLogger}from'../../../core/common/logger/NitroLogger';import{EventDispatcher}from'../../../core/events/EventDispatcher';import{NitroEvent}from'../../../core/events/NitroEvent';import{FurnitureData}from'./FurnitureData';import{FurnitureType}from'./FurnitureType';export class FurnitureDataLoader extends EventDispatcher{constructor(floorItems,wallItems,localization){super();this._floorItems=void 0;this._wallItems=void 0;this._localization=void 0;this._nitroLogger=void 0;this._floorItems=floorItems;this._wallItems=wallItems;this._localization=localization;this._nitroLogger=new NitroLogger(this.constructor.name);}loadFurnitureData(url){if(!url)return;fetch(url).then(response=>response.json()).then(data=>this.onFurnitureDataLoaded(data)).catch(err=>this.onFurnitureDataError(err));}onFurnitureDataLoaded(data){if(!data)return;if(typeof data.roomitemtypes=='undefined'||typeof data.wallitemtypes=='undefined')this._nitroLogger.warn('Could not find `roomitemtypes` or `wallitemtypes` in furnidata.');if(data.roomitemtypes)this.parseFloorItems(data.roomitemtypes);if(data.wallitemtypes)this.parseWallItems(data.wallitemtypes);this.dispatchEvent(new NitroEvent(FurnitureDataLoader.FURNITURE_DATA_READY));}onFurnitureDataError(error){if(!error)return;console.error(error);this.dispatchEvent(new NitroEvent(FurnitureDataLoader.FURNITURE_DATA_ERROR));}parseFloorItems(data){if(!data||!data.furnitype)return;for(const furniture of data.furnitype){if(!furniture)continue;const colors=[];if(furniture.partcolors){for(const color of furniture.partcolors.color){let colorCode=color;if(colorCode.charAt(0)==='#'){colorCode=colorCode.replace('#','');colors.push(parseInt(colorCode,16));}else{colors.push(parseInt(colorCode,16));}}}const classSplit=furniture.classname.split('*');const className=classSplit[0];const colorIndex=classSplit.length>1?parseInt(classSplit[1]):0;const hasColorIndex=classSplit.length>1;const furnitureData=new FurnitureData(FurnitureType.FLOOR,furniture.id,furniture.classname,className,furniture.category,furniture.name,furniture.description,furniture.revision,furniture.xdim,furniture.ydim,0,colors,hasColorIndex,colorIndex,furniture.adurl,furniture.offerid,furniture.buyout,furniture.rentofferid,furniture.rentbuyout,furniture.bc,furniture.customparams,furniture.specialtype,furniture.canstandon,furniture.cansiton,furniture.canlayon,furniture.excludeddynamic,furniture.furniline,furniture.environment,furniture.rare);this._floorItems.set(furnitureData.id,furnitureData);this.updateLocalizations(furnitureData);}}parseWallItems(data){if(!data||!data.furnitype)return;for(const furniture of data.furnitype){if(!furniture)continue;const furnitureData=new FurnitureData(FurnitureType.WALL,furniture.id,furniture.classname,furniture.classname,furniture.category,furniture.name,furniture.description,furniture.revision,0,0,0,null,false,0,furniture.adurl,furniture.offerid,furniture.buyout,furniture.rentofferid,furniture.rentbuyout,furniture.bc,null,furniture.specialtype,false,false,false,furniture.excludeddynamic,furniture.furniline,furniture.environment,furniture.rare);this._wallItems.set(furnitureData.id,furnitureData);this.updateLocalizations(furnitureData);}}updateLocalizations(furniture){if(!this._localization)return;switch(furniture.type){case FurnitureType.FLOOR:this._localization.setValue('roomItem.name.'+furniture.id,furniture.name);this._localization.setValue('roomItem.desc.'+furniture.id,furniture.description);return;case FurnitureType.WALL:this._localization.setValue('wallItem.name.'+furniture.id,furniture.name);this._localization.setValue('wallItem.desc.'+furniture.id,furniture.description);return;}}}FurnitureDataLoader.FURNITURE_DATA_READY='FDP_FURNITURE_DATA_READY';FurnitureDataLoader.FURNITURE_DATA_ERROR='FDP_FURNITURE_DATA_ERROR';","map":null,"metadata":{},"sourceType":"module"}