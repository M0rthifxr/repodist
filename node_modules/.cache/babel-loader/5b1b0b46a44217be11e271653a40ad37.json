{"ast":null,"code":"import{IgnoredUsersEvent}from'../communication/messages/incoming/user/IgnoredUsersEvent';import{IgnoreResultEvent}from'../communication/messages/incoming/user/IgnoreResultEvent';import{GetIgnoredUsersComposer}from'../communication/messages/outgoing/user/data/GetIgnoredUsersComposer';import{IgnoreUserComposer}from'../communication/messages/outgoing/user/data/IgnoreUserComposer';import{IgnoreUserIdComposer}from'../communication/messages/outgoing/user/data/IgnoreUserIdComposer';import{UnignoreUserComposer}from'../communication/messages/outgoing/user/data/UnignoreUserComposer';export class IgnoredUsersManager{constructor(sessionDataManager){this._sessionDataManager=void 0;this._ignoredUsers=void 0;this._messages=void 0;this._sessionDataManager=sessionDataManager;this._ignoredUsers=[];}init(){if(this._sessionDataManager&&this._sessionDataManager.communication){this._messages=[new IgnoredUsersEvent(this.onIgnoredUsersEvent.bind(this)),new IgnoreResultEvent(this.onIgnoreResultEvent.bind(this))];for(const message of this._messages)this._sessionDataManager.communication.registerMessageEvent(message);}}dispose(){if(this.disposed)return;if(this._messages&&this._messages.length){for(const message of this._messages)this._sessionDataManager.communication.removeMessageEvent(message);this._messages=null;}this._sessionDataManager=null;}requestIgnoredUsers(){this._sessionDataManager.send(new GetIgnoredUsersComposer(this._sessionDataManager.userName));}onIgnoredUsersEvent(event){if(!event)return;const parser=event.getParser();if(!parser)return;this._ignoredUsers=parser.ignoredUsers;}onIgnoreResultEvent(event){if(!event)return;const parser=event.getParser();if(!parser)return;const name=parser.name;switch(parser.result){case 0:return;case 1:this.addUserToIgnoreList(name);return;case 2:this.addUserToIgnoreList(name);this._ignoredUsers.shift();return;case 3:this.removeUserFromIgnoreList(name);return;}}addUserToIgnoreList(name){if(this._ignoredUsers.indexOf(name)<0)this._ignoredUsers.push(name);}removeUserFromIgnoreList(name){const index=this._ignoredUsers.indexOf(name);if(index>=0)this._ignoredUsers.splice(index,1);}ignoreUserId(id){this._sessionDataManager.send(new IgnoreUserIdComposer(id));}ignoreUser(name){this._sessionDataManager.send(new IgnoreUserComposer(name));}unignoreUser(name){this._sessionDataManager.send(new UnignoreUserComposer(name));}isIgnored(name){return this._ignoredUsers.indexOf(name)>=0;}get disposed(){return!!this._sessionDataManager;}}","map":null,"metadata":{},"sourceType":"module"}