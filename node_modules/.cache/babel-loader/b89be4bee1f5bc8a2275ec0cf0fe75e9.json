{"ast":null,"code":"import{QuestionAnsweredEvent}from'../../communication/messages/incoming/poll/QuestionAnsweredEvent';import{QuestionEvent}from'../../communication/messages/incoming/poll/QuestionEvent';import{QuestionFinishedEvent}from'../../communication/messages/incoming/poll/QuestionFinishedEvent';import{RoomSessionWordQuizEvent}from'../events/RoomSessionWordQuizEvent';import{BaseHandler}from'./BaseHandler';export class WordQuizHandler extends BaseHandler{constructor(connection,listener){super(connection,listener);connection.addMessageEvent(new QuestionEvent(this.onQuestionEvent.bind(this)));connection.addMessageEvent(new QuestionAnsweredEvent(this.onQuestionAnsweredEvent.bind(this)));connection.addMessageEvent(new QuestionFinishedEvent(this.onQuestionFinishedEvent.bind(this)));}onQuestionEvent(event){if(!this.listener)return;const session=this.listener.getSession(this.roomId);if(!session)return;const parser=event.getParser();if(!parser)return;const quizEvent=new RoomSessionWordQuizEvent(RoomSessionWordQuizEvent.QUESTION,session,parser.pollId);quizEvent.question=parser.question;quizEvent.duration=parser.duration;quizEvent.pollType=parser.pollType;quizEvent.questionId=parser.questionId;quizEvent.pollId=parser.pollId;this.listener.events.dispatchEvent(quizEvent);}onQuestionAnsweredEvent(event){if(!this.listener)return;const session=this.listener.getSession(this.roomId);if(!session)return;const parser=event.getParser();if(!parser)return;const quizEvent=new RoomSessionWordQuizEvent(RoomSessionWordQuizEvent.ANSWERED,session,parser.userId);quizEvent.value=parser.value;quizEvent.userId=parser.userId;quizEvent.answerCounts=parser.answerCounts;this.listener.events.dispatchEvent(quizEvent);}onQuestionFinishedEvent(event){if(!this.listener)return;const session=this.listener.getSession(this.roomId);if(!session)return;const parser=event.getParser();if(!parser)return;const quizEvent=new RoomSessionWordQuizEvent(RoomSessionWordQuizEvent.FINISHED,session);quizEvent.questionId=parser.questionId;quizEvent.answerCounts=parser.answerCounts;this.listener.events.dispatchEvent(quizEvent);}}","map":null,"metadata":{},"sourceType":"module"}