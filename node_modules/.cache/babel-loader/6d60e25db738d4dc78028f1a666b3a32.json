{"ast":null,"code":"import{AssetManager}from'../../../../core/asset/AssetManager';import{Nitro}from'../../../../nitro/Nitro';import{GraphicAsset}from'./GraphicAsset';import{GraphicAssetPalette}from'./GraphicAssetPalette';export class GraphicAssetCollection{constructor(data,spritesheet){this._referenceCount=void 0;this._referenceTimestamp=void 0;this._name=void 0;this._baseTexture=void 0;this._data=void 0;this._textures=void 0;this._assets=void 0;this._palettes=void 0;this._paletteAssetNames=void 0;if(!data)throw new Error('invalid_collection');this._name=data.name;this._baseTexture=spritesheet&&spritesheet.baseTexture||null;this._data=data;this._textures=new Map();this._assets=new Map();this._palettes=new Map();this._paletteAssetNames=[];if(spritesheet)this.addLibraryAsset(spritesheet.textures);this.define(data);}dispose(){if(this._palettes){for(const palette of this._palettes.values())palette.dispose();this._palettes.clear();}if(this._paletteAssetNames){this.disposePaletteAssets();this._paletteAssetNames=null;}if(this._assets){for(const asset of this._assets.values())asset.recycle();this._assets.clear();}}addReference(){this._referenceCount++;this._referenceTimestamp=Nitro.instance.time;}removeReference(){this._referenceCount--;if(this._referenceCount<=0){this._referenceCount=0;this._referenceTimestamp=Nitro.instance.time;this.disposePaletteAssets(false);}}define(data){const assets=data.assets;const palettes=data.palettes;if(assets)this.defineAssets(assets);if(palettes)this.definePalettes(palettes);}defineAssets(assets){if(!assets)return;for(const name in assets){const asset=assets[name];if(!asset)continue;const x=-asset.x||0;const y=-asset.y||0;let flipH=false;const flipV=false;const usesPalette=asset.usesPalette||false;let source=asset.source||'';if(asset.flipH&&source.length)flipH=true;// if(asset.flipV && source.length) flipV = true;\nif(!source.length)source=name;const texture=this.getLibraryAsset(source);if(!texture)continue;let didAddAsset=this.createAsset(name,source,texture,flipH,flipV,x,y,usesPalette);if(!didAddAsset){const existingAsset=this.getAsset(name);if(existingAsset&&existingAsset.name!==existingAsset.source){didAddAsset=this.replaceAsset(name,source,texture,flipH,flipV,x,y,usesPalette);}}}}definePalettes(palettes){if(!palettes)return;for(const name in palettes){const palette=palettes[name];if(!palette)continue;const id=palette.id.toString();if(this._palettes.get(id))continue;let colorOne=0xFFFFFF;let colorTwo=0xFFFFFF;let color=palette.color1;if(color&&color.length>0)colorOne=parseInt(color,16);color=palette.color2;if(color&&color.length>0)colorTwo=parseInt(color,16);this._palettes.set(id,new GraphicAssetPalette(palette.rgb,colorOne,colorTwo));}}createAsset(name,source,texture,flipH,flipV,x,y,usesPalette){if(this._assets.get(name))return false;const graphicAsset=GraphicAsset.createAsset(name,source,texture,x,y,flipH,flipV,usesPalette);this._assets.set(name,graphicAsset);return true;}replaceAsset(name,source,texture,flipH,flipV,x,y,usesPalette){const existing=this._assets.get(name);if(existing){this._assets.delete(name);existing.recycle();}return this.createAsset(name,source,texture,flipH,flipV,x,y,usesPalette);}getAsset(name){if(!name)return null;const existing=this._assets.get(name);if(!existing)return null;return existing;}getAssetWithPalette(name,paletteName){const saveName=name+'@'+paletteName;let asset=this.getAsset(saveName);if(!asset){asset=this.getAsset(name);if(!asset||!asset.usesPalette)return asset;const palette=this.getPalette(paletteName);if(palette){const texture=palette.applyPalette(asset.texture);if(texture){this._paletteAssetNames.push(saveName);this.createAsset(saveName,asset.source+'@'+paletteName,texture,asset.flipH,asset.flipV,asset.x,asset.y,false);asset=this.getAsset(saveName);}}}return asset;}getTexture(name){return this._textures.get(name);}getPaletteNames(){return Array.from(this._palettes.keys());}getPaletteColors(paletteName){const palette=this.getPalette(paletteName);if(palette)return[palette.primaryColor,palette.secondaryColor];return null;}getPalette(name){if(!name)return null;const existing=this._palettes.get(name);if(!existing)return null;return existing;}addAsset(name,texture,override){let x=arguments.length>3&&arguments[3]!==undefined?arguments[3]:0;let y=arguments.length>4&&arguments[4]!==undefined?arguments[4]:0;let flipH=arguments.length>5&&arguments[5]!==undefined?arguments[5]:false;let flipV=arguments.length>6&&arguments[6]!==undefined?arguments[6]:false;if(!name||!texture)return false;const existingTexture=this.getLibraryAsset(name);if(!existingTexture){this._textures.set(name,texture);return this.createAsset(name,name,texture,flipH,flipV,x,y,false);}if(override){existingTexture.baseTexture=texture.baseTexture;existingTexture.frame=texture.frame;existingTexture.trim=texture.trim;existingTexture.updateUvs();return true;}return false;}disposeAsset(name){const existing=this._assets.get(name);if(!existing)return;this._assets.delete(name);const texture=this.getLibraryAsset(existing.source);if(texture){this._textures.delete(existing.source);texture.destroy(true);}existing.recycle();}getLibraryAsset(name){if(!name)return null;name=this._name+'_'+name;const texture=this._textures.get(name);if(!texture)return null;return texture;}addLibraryAsset(textures){if(!textures)return;for(const name in textures){const texture=textures[name];if(!texture)continue;this._textures.set(AssetManager.removeFileExtension(name),texture);}}disposePaletteAssets(){let disposeAll=arguments.length>0&&arguments[0]!==undefined?arguments[0]:true;if(this._paletteAssetNames){if(disposeAll||this._paletteAssetNames.length>GraphicAssetCollection.PALETTE_ASSET_DISPOSE_THRESHOLD){for(const name of this._paletteAssetNames)this.disposeAsset(name);this._paletteAssetNames=[];}}}get referenceCount(){return this._referenceCount;}get referenceTimestamp(){return this._referenceTimestamp;}get name(){return this._name;}get baseTexture(){return this._baseTexture;}get data(){return this._data;}get textures(){return this._textures;}get assets(){return this._assets;}}GraphicAssetCollection.PALETTE_ASSET_DISPOSE_THRESHOLD=10;","map":null,"metadata":{},"sourceType":"module"}