{"ast":null,"code":"import{ControlYoutubeDisplayPlaybackMessageComposer,SetYoutubeDisplayPlaylistMessageComposer,YoutubeControlVideoMessageEvent,YoutubeDisplayPlaylistsEvent,YoutubeDisplayVideoMessageEvent}from'@nitrots/nitro-renderer';import{useCallback,useMemo,useState}from'react';import YouTube from'react-youtube';import{FurnitureYoutubeDisplayWidgetHandler,LocalizeText,RoomWidgetUpdateYoutubeDisplayEvent,SendMessageComposer}from'../../../../../api';import{Grid,LayoutGridItem,NitroCardContentView,NitroCardHeaderView,NitroCardView}from'../../../../../common';import{UseEventDispatcherHook,UseMessageEventHook}from'../../../../../hooks';import{useRoomContext}from'../../../RoomContext';import{YoutubeVideoPlaybackStateEnum}from'./utils/YoutubeVideoPlaybackStateEnum';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export const FurnitureYoutubeDisplayView=props=>{const[objectId,setObjectId]=useState(-1);const[videoId,setVideoId]=useState(null);const[videoStart,setVideoStart]=useState(null);const[videoEnd,setVideoEnd]=useState(null);const[currentVideoState,setCurrentVideoState]=useState(-1);const[selectedItem,setSelectedItem]=useState(null);const[playlists,setPlaylists]=useState(null);const[hasControl,setHasControl]=useState(false);const[player,setPlayer]=useState(null);const{eventDispatcher=null}=useRoomContext();const onRoomWidgetUpdateYoutubeDisplayEvent=useCallback(event=>{switch(event.type){case RoomWidgetUpdateYoutubeDisplayEvent.UPDATE_YOUTUBE_DISPLAY:{setObjectId(event.objectId);setHasControl(event.hasControl);}}},[]);const close=useCallback(()=>{setObjectId(-1);setSelectedItem(null);setPlaylists(null);setHasControl(false);setVideoId(null);setVideoEnd(null);setVideoStart(null);setCurrentVideoState(-1);},[]);UseEventDispatcherHook(RoomWidgetUpdateYoutubeDisplayEvent.UPDATE_YOUTUBE_DISPLAY,eventDispatcher,onRoomWidgetUpdateYoutubeDisplayEvent);const onVideo=useCallback(event=>{if(objectId===-1)return;const parser=event.getParser();if(objectId!==parser.furniId)return;setVideoId(parser.videoId);setVideoStart(parser.startAtSeconds);setVideoEnd(parser.endAtSeconds);setCurrentVideoState(parser.state);},[objectId]);const onPlaylists=useCallback(event=>{if(objectId===-1)return;const parser=event.getParser();if(objectId!==parser.furniId)return;setPlaylists(parser.playlists);setSelectedItem(parser.selectedPlaylistId);setVideoId(null);setCurrentVideoState(-1);setVideoEnd(null);setVideoStart(null);},[objectId]);const onControlVideo=useCallback(event=>{if(objectId===-1)return;const parser=event.getParser();if(objectId!==parser.furniId)return;switch(parser.commandId){case 1:setCurrentVideoState(YoutubeVideoPlaybackStateEnum.PLAYING);if(player.getPlayerState()!==YoutubeVideoPlaybackStateEnum.PLAYING)player.playVideo();break;case 2:setCurrentVideoState(YoutubeVideoPlaybackStateEnum.PAUSED);if(player.getPlayerState()!==YoutubeVideoPlaybackStateEnum.PAUSED)player.pauseVideo();break;}},[objectId,player]);UseMessageEventHook(YoutubeDisplayVideoMessageEvent,onVideo);UseMessageEventHook(YoutubeDisplayPlaylistsEvent,onPlaylists);UseMessageEventHook(YoutubeControlVideoMessageEvent,onControlVideo);const processAction=useCallback(action=>{switch(action){case'playlist_prev':SendMessageComposer(new ControlYoutubeDisplayPlaybackMessageComposer(objectId,FurnitureYoutubeDisplayWidgetHandler.CONTROL_COMMAND_PREVIOUS_VIDEO));break;case'playlist_next':SendMessageComposer(new ControlYoutubeDisplayPlaybackMessageComposer(objectId,FurnitureYoutubeDisplayWidgetHandler.CONTROL_COMMAND_NEXT_VIDEO));break;case'video_pause':if(hasControl&&videoId&&videoId.length){SendMessageComposer(new ControlYoutubeDisplayPlaybackMessageComposer(objectId,FurnitureYoutubeDisplayWidgetHandler.CONTROL_COMMAND_PAUSE_VIDEO));}break;case'video_play':if(hasControl&&videoId&&videoId.length){SendMessageComposer(new ControlYoutubeDisplayPlaybackMessageComposer(objectId,FurnitureYoutubeDisplayWidgetHandler.CONTROL_COMMAND_CONTINUE_VIDEO));}break;default:if(selectedItem===action){setSelectedItem(null);SendMessageComposer(new SetYoutubeDisplayPlaylistMessageComposer(objectId,''));return;}SendMessageComposer(new SetYoutubeDisplayPlaylistMessageComposer(objectId,action));setSelectedItem(action);}},[hasControl,objectId,selectedItem,videoId]);const onReady=useCallback(event=>{setPlayer(event.target);},[]);const onStateChange=useCallback(event=>{setPlayer(event.target);if(objectId){switch(event.target.getPlayerState()){case-1:case 1:if(currentVideoState===2){//event.target.pauseVideo();\n}if(currentVideoState!==1){processAction('video_play');}return;case 2:if(currentVideoState!==2){processAction('video_pause');}}}},[currentVideoState,objectId,processAction]);const getYoutubeOpts=useMemo(()=>{if(!videoStart&&!videoEnd){return{height:'375',width:'500',playerVars:{autoplay:1,disablekb:1,controls:0,origin:window.origin,modestbranding:1}};}return{height:'375',width:'500',playerVars:{autoplay:1,disablekb:1,controls:0,origin:window.origin,modestbranding:1,start:videoStart,end:videoEnd}};},[videoEnd,videoStart]);if(objectId===-1)return null;return/*#__PURE__*/_jsxs(NitroCardView,{className:\"youtube-tv-widget\",children:[/*#__PURE__*/_jsx(NitroCardHeaderView,{headerText:'',onCloseClick:close}),/*#__PURE__*/_jsx(NitroCardContentView,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"row w-100 h-100\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"youtube-video-container col-9\",children:[videoId&&videoId.length>0&&/*#__PURE__*/_jsx(YouTube,{videoId:videoId,opts:getYoutubeOpts,onReady:onReady,onStateChange:onStateChange,containerClassName:'youtubeContainer'}),(!videoId||videoId.length===0)&&/*#__PURE__*/_jsx(\"div\",{className:\"empty-video w-100 h-100 justify-content-center align-items-center d-flex\",children:LocalizeText('widget.furni.video_viewer.no_videos')})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"playlist-container col-3\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"playlist-controls justify-content-center d-flex\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"icon icon-youtube-prev cursor-pointer\",onClick:()=>processAction('playlist_prev')}),/*#__PURE__*/_jsx(\"i\",{className:\"icon icon-youtube-next cursor-pointer\",onClick:()=>processAction('playlist_next')})]}),/*#__PURE__*/_jsx(\"div\",{className:\"mb-1\",children:LocalizeText('widget.furni.video_viewer.playlists')}),/*#__PURE__*/_jsx(Grid,{columnCount:1,className:\"playlist-grid\",children:playlists&&playlists.map((entry,index)=>{return/*#__PURE__*/_jsxs(LayoutGridItem,{onClick:()=>processAction(entry.video),itemActive:entry.video===selectedItem,children:[/*#__PURE__*/_jsx(\"b\",{children:entry.title}),\" - \",entry.description]},index);})})]})]})})]});};","map":null,"metadata":{},"sourceType":"module"}